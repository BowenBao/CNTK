// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx-operators-ml.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "onnx-operators-ml.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace onnx {

namespace {

const ::google::protobuf::Descriptor* FunctionProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperatorProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperatorProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperatorSetProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperatorSetProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* OperatorStatus_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_onnx_2doperators_2dml_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_onnx_2doperators_2dml_2eproto() {
  protobuf_AddDesc_onnx_2doperators_2dml_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "onnx-operators-ml.proto");
  GOOGLE_CHECK(file != NULL);
  FunctionProto_descriptor_ = file->message_type(0);
  static const int FunctionProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, since_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, doc_string_),
  };
  FunctionProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FunctionProto_descriptor_,
      FunctionProto::internal_default_instance(),
      FunctionProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, _has_bits_),
      -1,
      -1,
      sizeof(FunctionProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionProto, _internal_metadata_));
  OperatorProto_descriptor_ = file->message_type(1);
  static const int OperatorProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, op_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, since_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, doc_string_),
  };
  OperatorProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OperatorProto_descriptor_,
      OperatorProto::internal_default_instance(),
      OperatorProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, _has_bits_),
      -1,
      -1,
      sizeof(OperatorProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorProto, _internal_metadata_));
  OperatorSetProto_descriptor_ = file->message_type(2);
  static const int OperatorSetProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, magic_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, ir_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, ir_version_prerelease_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, ir_build_metadata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, opset_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, operator__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, functions_),
  };
  OperatorSetProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OperatorSetProto_descriptor_,
      OperatorSetProto::internal_default_instance(),
      OperatorSetProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, _has_bits_),
      -1,
      -1,
      sizeof(OperatorSetProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorSetProto, _internal_metadata_));
  OperatorStatus_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_onnx_2doperators_2dml_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FunctionProto_descriptor_, FunctionProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OperatorProto_descriptor_, OperatorProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OperatorSetProto_descriptor_, OperatorSetProto::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_onnx_2doperators_2dml_2eproto() {
  FunctionProto_default_instance_.Shutdown();
  delete FunctionProto_reflection_;
  OperatorProto_default_instance_.Shutdown();
  delete OperatorProto_reflection_;
  OperatorSetProto_default_instance_.Shutdown();
  delete OperatorSetProto_reflection_;
}

void protobuf_InitDefaults_onnx_2doperators_2dml_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::onnx::protobuf_InitDefaults_onnx_2dml_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  FunctionProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OperatorProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OperatorSetProto_default_instance_.DefaultConstruct();
  FunctionProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  OperatorProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  OperatorSetProto_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_onnx_2doperators_2dml_2eproto_once_);
void protobuf_InitDefaults_onnx_2doperators_2dml_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_onnx_2doperators_2dml_2eproto_once_,
                 &protobuf_InitDefaults_onnx_2doperators_2dml_2eproto_impl);
}
void protobuf_AddDesc_onnx_2doperators_2dml_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027onnx-operators-ml.proto\022\004onnx\032\ronnx-ml"
    ".proto\"\277\001\n\rFunctionProto\022\014\n\004name\030\001 \001(\t\022\025"
    "\n\rsince_version\030\002 \001(\003\022$\n\006status\030\003 \001(\0162\024."
    "onnx.OperatorStatus\022\r\n\005input\030\004 \003(\t\022\016\n\006ou"
    "tput\030\005 \003(\t\022\021\n\tattribute\030\006 \003(\t\022\035\n\004node\030\007 "
    "\003(\0132\017.onnx.NodeProto\022\022\n\ndoc_string\030\010 \001(\t"
    "\"q\n\rOperatorProto\022\017\n\007op_type\030\001 \001(\t\022\025\n\rsi"
    "nce_version\030\002 \001(\003\022$\n\006status\030\003 \001(\0162\024.onnx"
    ".OperatorStatus\022\022\n\ndoc_string\030\n \001(\t\"\371\001\n\020"
    "OperatorSetProto\022\r\n\005magic\030\001 \001(\t\022\022\n\nir_ve"
    "rsion\030\002 \001(\005\022\035\n\025ir_version_prerelease\030\003 \001"
    "(\t\022\031\n\021ir_build_metadata\030\007 \001(\t\022\016\n\006domain\030"
    "\004 \001(\t\022\025\n\ropset_version\030\005 \001(\003\022\022\n\ndoc_stri"
    "ng\030\006 \001(\t\022%\n\010operator\030\010 \003(\0132\023.onnx.Operat"
    "orProto\022&\n\tfunctions\030\t \003(\0132\023.onnx.Functi"
    "onProto*.\n\016OperatorStatus\022\020\n\014EXPERIMENTA"
    "L\020\000\022\n\n\006STABLE\020\001", 655);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "onnx-operators-ml.proto", &protobuf_RegisterTypes);
  ::onnx::protobuf_AddDesc_onnx_2dml_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_onnx_2doperators_2dml_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_onnx_2doperators_2dml_2eproto_once_);
void protobuf_AddDesc_onnx_2doperators_2dml_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_onnx_2doperators_2dml_2eproto_once_,
                 &protobuf_AddDesc_onnx_2doperators_2dml_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_onnx_2doperators_2dml_2eproto {
  StaticDescriptorInitializer_onnx_2doperators_2dml_2eproto() {
    protobuf_AddDesc_onnx_2doperators_2dml_2eproto();
  }
} static_descriptor_initializer_onnx_2doperators_2dml_2eproto_;
const ::google::protobuf::EnumDescriptor* OperatorStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorStatus_descriptor_;
}
bool OperatorStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionProto::kNameFieldNumber;
const int FunctionProto::kSinceVersionFieldNumber;
const int FunctionProto::kStatusFieldNumber;
const int FunctionProto::kInputFieldNumber;
const int FunctionProto::kOutputFieldNumber;
const int FunctionProto::kAttributeFieldNumber;
const int FunctionProto::kNodeFieldNumber;
const int FunctionProto::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionProto::FunctionProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.FunctionProto)
}

void FunctionProto::InitAsDefaultInstance() {
}

FunctionProto::FunctionProto(const FunctionProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.FunctionProto)
}

void FunctionProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&since_version_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&since_version_) + sizeof(status_));
}

FunctionProto::~FunctionProto() {
  // @@protoc_insertion_point(destructor:onnx.FunctionProto)
  SharedDtor();
}

void FunctionProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FunctionProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionProto_descriptor_;
}

const FunctionProto& FunctionProto::default_instance() {
  protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FunctionProto> FunctionProto_default_instance_;

FunctionProto* FunctionProto::New(::google::protobuf::Arena* arena) const {
  FunctionProto* n = new FunctionProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.FunctionProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(FunctionProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<FunctionProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 135u) {
    ZR_(since_version_, status_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  input_.Clear();
  output_.Clear();
  attribute_.Clear();
  node_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FunctionProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.FunctionProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.FunctionProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_since_version;
        break;
      }

      // optional int64 since_version = 2;
      case 2: {
        if (tag == 16) {
         parse_since_version:
          set_has_since_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &since_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional .onnx.OperatorStatus status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::onnx::OperatorStatus_IsValid(value)) {
            set_status(static_cast< ::onnx::OperatorStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_input;
        break;
      }

      // repeated string input = 4;
      case 4: {
        if (tag == 34) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input(this->input_size() - 1).data(),
            this->input(this->input_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.FunctionProto.input");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_input;
        if (input->ExpectTag(42)) goto parse_output;
        break;
      }

      // repeated string output = 5;
      case 5: {
        if (tag == 42) {
         parse_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output(this->output_size() - 1).data(),
            this->output(this->output_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.FunctionProto.output");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_output;
        if (input->ExpectTag(50)) goto parse_attribute;
        break;
      }

      // repeated string attribute = 6;
      case 6: {
        if (tag == 50) {
         parse_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_attribute()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->attribute(this->attribute_size() - 1).data(),
            this->attribute(this->attribute_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.FunctionProto.attribute");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_attribute;
        if (input->ExpectTag(58)) goto parse_node;
        break;
      }

      // repeated .onnx.NodeProto node = 7;
      case 7: {
        if (tag == 58) {
         parse_node:
          DO_(input->IncrementRecursionDepth());
         parse_loop_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_node()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_loop_node;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(66)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 8;
      case 8: {
        if (tag == 66) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.FunctionProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.FunctionProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.FunctionProto)
  return false;
#undef DO_
}

void FunctionProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.FunctionProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int64 since_version = 2;
  if (has_since_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->since_version(), output);
  }

  // optional .onnx.OperatorStatus status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // repeated string input = 4;
  for (int i = 0; i < this->input_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), this->input(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.input");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->input(i), output);
  }

  // repeated string output = 5;
  for (int i = 0; i < this->output_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), this->output(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.output");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->output(i), output);
  }

  // repeated string attribute = 6;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attribute(i).data(), this->attribute(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.attribute");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->attribute(i), output);
  }

  // repeated .onnx.NodeProto node = 7;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->node(i), output);
  }

  // optional string doc_string = 8;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->doc_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.FunctionProto)
}

::google::protobuf::uint8* FunctionProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.FunctionProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int64 since_version = 2;
  if (has_since_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->since_version(), target);
  }

  // optional .onnx.OperatorStatus status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // repeated string input = 4;
  for (int i = 0; i < this->input_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), this->input(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.input");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->input(i), target);
  }

  // repeated string output = 5;
  for (int i = 0; i < this->output_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), this->output(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.output");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->output(i), target);
  }

  // repeated string attribute = 6;
  for (int i = 0; i < this->attribute_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->attribute(i).data(), this->attribute(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.attribute");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->attribute(i), target);
  }

  // repeated .onnx.NodeProto node = 7;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->node(i), false, target);
  }

  // optional string doc_string = 8;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.FunctionProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->doc_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.FunctionProto)
  return target;
}

size_t FunctionProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.FunctionProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 135u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional int64 since_version = 2;
    if (has_since_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->since_version());
    }

    // optional .onnx.OperatorStatus status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string doc_string = 8;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated string input = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_size());
  for (int i = 0; i < this->input_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input(i));
  }

  // repeated string output = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_size());
  for (int i = 0; i < this->output_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output(i));
  }

  // repeated string attribute = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attribute_size());
  for (int i = 0; i < this->attribute_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->attribute(i));
  }

  // repeated .onnx.NodeProto node = 7;
  {
    unsigned int count = this->node_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.FunctionProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FunctionProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.FunctionProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.FunctionProto)
    UnsafeMergeFrom(*source);
  }
}

void FunctionProto::MergeFrom(const FunctionProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.FunctionProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FunctionProto::UnsafeMergeFrom(const FunctionProto& from) {
  GOOGLE_DCHECK(&from != this);
  input_.UnsafeMergeFrom(from.input_);
  output_.UnsafeMergeFrom(from.output_);
  attribute_.UnsafeMergeFrom(from.attribute_);
  node_.MergeFrom(from.node_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_since_version()) {
      set_since_version(from.since_version());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FunctionProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.FunctionProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionProto::CopyFrom(const FunctionProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.FunctionProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FunctionProto::IsInitialized() const {

  return true;
}

void FunctionProto::Swap(FunctionProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionProto::InternalSwap(FunctionProto* other) {
  name_.Swap(&other->name_);
  std::swap(since_version_, other->since_version_);
  std::swap(status_, other->status_);
  input_.UnsafeArenaSwap(&other->input_);
  output_.UnsafeArenaSwap(&other->output_);
  attribute_.UnsafeArenaSwap(&other->attribute_);
  node_.UnsafeArenaSwap(&other->node_);
  doc_string_.Swap(&other->doc_string_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionProto_descriptor_;
  metadata.reflection = FunctionProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FunctionProto

// optional string name = 1;
bool FunctionProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FunctionProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void FunctionProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void FunctionProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& FunctionProto::name() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FunctionProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.name)
}
void FunctionProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.name)
}
void FunctionProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.name)
}
::std::string* FunctionProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FunctionProto::release_name() {
  // @@protoc_insertion_point(field_release:onnx.FunctionProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FunctionProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:onnx.FunctionProto.name)
}

// optional int64 since_version = 2;
bool FunctionProto::has_since_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FunctionProto::set_has_since_version() {
  _has_bits_[0] |= 0x00000002u;
}
void FunctionProto::clear_has_since_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void FunctionProto::clear_since_version() {
  since_version_ = GOOGLE_LONGLONG(0);
  clear_has_since_version();
}
::google::protobuf::int64 FunctionProto::since_version() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.since_version)
  return since_version_;
}
void FunctionProto::set_since_version(::google::protobuf::int64 value) {
  set_has_since_version();
  since_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.since_version)
}

// optional .onnx.OperatorStatus status = 3;
bool FunctionProto::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FunctionProto::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void FunctionProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void FunctionProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
::onnx::OperatorStatus FunctionProto::status() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.status)
  return static_cast< ::onnx::OperatorStatus >(status_);
}
void FunctionProto::set_status(::onnx::OperatorStatus value) {
  assert(::onnx::OperatorStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.status)
}

// repeated string input = 4;
int FunctionProto::input_size() const {
  return input_.size();
}
void FunctionProto::clear_input() {
  input_.Clear();
}
const ::std::string& FunctionProto::input(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.input)
  return input_.Get(index);
}
::std::string* FunctionProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.input)
  return input_.Mutable(index);
}
void FunctionProto::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.input)
  input_.Mutable(index)->assign(value);
}
void FunctionProto::set_input(int index, const char* value) {
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.input)
}
void FunctionProto::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.input)
}
::std::string* FunctionProto::add_input() {
  // @@protoc_insertion_point(field_add_mutable:onnx.FunctionProto.input)
  return input_.Add();
}
void FunctionProto::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.input)
}
void FunctionProto::add_input(const char* value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.FunctionProto.input)
}
void FunctionProto::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.FunctionProto.input)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionProto::input() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.input)
  return input_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.input)
  return &input_;
}

// repeated string output = 5;
int FunctionProto::output_size() const {
  return output_.size();
}
void FunctionProto::clear_output() {
  output_.Clear();
}
const ::std::string& FunctionProto::output(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.output)
  return output_.Get(index);
}
::std::string* FunctionProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.output)
  return output_.Mutable(index);
}
void FunctionProto::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.output)
  output_.Mutable(index)->assign(value);
}
void FunctionProto::set_output(int index, const char* value) {
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.output)
}
void FunctionProto::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.output)
}
::std::string* FunctionProto::add_output() {
  // @@protoc_insertion_point(field_add_mutable:onnx.FunctionProto.output)
  return output_.Add();
}
void FunctionProto::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.output)
}
void FunctionProto::add_output(const char* value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.FunctionProto.output)
}
void FunctionProto::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.FunctionProto.output)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionProto::output() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.output)
  return output_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.output)
  return &output_;
}

// repeated string attribute = 6;
int FunctionProto::attribute_size() const {
  return attribute_.size();
}
void FunctionProto::clear_attribute() {
  attribute_.Clear();
}
const ::std::string& FunctionProto::attribute(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.attribute)
  return attribute_.Get(index);
}
::std::string* FunctionProto::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.attribute)
  return attribute_.Mutable(index);
}
void FunctionProto::set_attribute(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.attribute)
  attribute_.Mutable(index)->assign(value);
}
void FunctionProto::set_attribute(int index, const char* value) {
  attribute_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.attribute)
}
void FunctionProto::set_attribute(int index, const char* value, size_t size) {
  attribute_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.attribute)
}
::std::string* FunctionProto::add_attribute() {
  // @@protoc_insertion_point(field_add_mutable:onnx.FunctionProto.attribute)
  return attribute_.Add();
}
void FunctionProto::add_attribute(const ::std::string& value) {
  attribute_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.attribute)
}
void FunctionProto::add_attribute(const char* value) {
  attribute_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.FunctionProto.attribute)
}
void FunctionProto::add_attribute(const char* value, size_t size) {
  attribute_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.FunctionProto.attribute)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionProto::attribute() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.attribute)
  return attribute_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionProto::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.attribute)
  return &attribute_;
}

// repeated .onnx.NodeProto node = 7;
int FunctionProto::node_size() const {
  return node_.size();
}
void FunctionProto::clear_node() {
  node_.Clear();
}
const ::onnx::NodeProto& FunctionProto::node(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.node)
  return node_.Get(index);
}
::onnx::NodeProto* FunctionProto::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.node)
  return node_.Mutable(index);
}
::onnx::NodeProto* FunctionProto::add_node() {
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.node)
  return node_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >*
FunctionProto::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.node)
  return &node_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >&
FunctionProto::node() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.node)
  return node_;
}

// optional string doc_string = 8;
bool FunctionProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void FunctionProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000080u;
}
void FunctionProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000080u;
}
void FunctionProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& FunctionProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FunctionProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.doc_string)
}
void FunctionProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.doc_string)
}
void FunctionProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.doc_string)
}
::std::string* FunctionProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FunctionProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.FunctionProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FunctionProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.FunctionProto.doc_string)
}

inline const FunctionProto* FunctionProto::internal_default_instance() {
  return &FunctionProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperatorProto::kOpTypeFieldNumber;
const int OperatorProto::kSinceVersionFieldNumber;
const int OperatorProto::kStatusFieldNumber;
const int OperatorProto::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperatorProto::OperatorProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.OperatorProto)
}

void OperatorProto::InitAsDefaultInstance() {
}

OperatorProto::OperatorProto(const OperatorProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.OperatorProto)
}

void OperatorProto::SharedCtor() {
  _cached_size_ = 0;
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&since_version_, 0, reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&since_version_) + sizeof(status_));
}

OperatorProto::~OperatorProto() {
  // @@protoc_insertion_point(destructor:onnx.OperatorProto)
  SharedDtor();
}

void OperatorProto::SharedDtor() {
  op_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperatorProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorProto_descriptor_;
}

const OperatorProto& OperatorProto::default_instance() {
  protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OperatorProto> OperatorProto_default_instance_;

OperatorProto* OperatorProto::New(::google::protobuf::Arena* arena) const {
  OperatorProto* n = new OperatorProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperatorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.OperatorProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OperatorProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OperatorProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 15u) {
    ZR_(since_version_, status_);
    if (has_op_type()) {
      op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OperatorProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.OperatorProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string op_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_type().data(), this->op_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorProto.op_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_since_version;
        break;
      }

      // optional int64 since_version = 2;
      case 2: {
        if (tag == 16) {
         parse_since_version:
          set_has_since_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &since_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_status;
        break;
      }

      // optional .onnx.OperatorStatus status = 3;
      case 3: {
        if (tag == 24) {
         parse_status:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::onnx::OperatorStatus_IsValid(value)) {
            set_status(static_cast< ::onnx::OperatorStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(3, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 10;
      case 10: {
        if (tag == 82) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.OperatorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.OperatorProto)
  return false;
#undef DO_
}

void OperatorProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.OperatorProto)
  // optional string op_type = 1;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorProto.op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->op_type(), output);
  }

  // optional int64 since_version = 2;
  if (has_since_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->since_version(), output);
  }

  // optional .onnx.OperatorStatus status = 3;
  if (has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->status(), output);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->doc_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.OperatorProto)
}

::google::protobuf::uint8* OperatorProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.OperatorProto)
  // optional string op_type = 1;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorProto.op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->op_type(), target);
  }

  // optional int64 since_version = 2;
  if (has_since_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->since_version(), target);
  }

  // optional .onnx.OperatorStatus status = 3;
  if (has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->status(), target);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->doc_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.OperatorProto)
  return target;
}

size_t OperatorProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.OperatorProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 15u) {
    // optional string op_type = 1;
    if (has_op_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op_type());
    }

    // optional int64 since_version = 2;
    if (has_since_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->since_version());
    }

    // optional .onnx.OperatorStatus status = 3;
    if (has_status()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->status());
    }

    // optional string doc_string = 10;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.OperatorProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OperatorProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperatorProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.OperatorProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.OperatorProto)
    UnsafeMergeFrom(*source);
  }
}

void OperatorProto::MergeFrom(const OperatorProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.OperatorProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OperatorProto::UnsafeMergeFrom(const OperatorProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_op_type()) {
      set_has_op_type();
      op_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type_);
    }
    if (from.has_since_version()) {
      set_since_version(from.since_version());
    }
    if (from.has_status()) {
      set_status(from.status());
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OperatorProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.OperatorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorProto::CopyFrom(const OperatorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.OperatorProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OperatorProto::IsInitialized() const {

  return true;
}

void OperatorProto::Swap(OperatorProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperatorProto::InternalSwap(OperatorProto* other) {
  op_type_.Swap(&other->op_type_);
  std::swap(since_version_, other->since_version_);
  std::swap(status_, other->status_);
  doc_string_.Swap(&other->doc_string_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperatorProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperatorProto_descriptor_;
  metadata.reflection = OperatorProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperatorProto

// optional string op_type = 1;
bool OperatorProto::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OperatorProto::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OperatorProto::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OperatorProto::clear_op_type() {
  op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_type();
}
const ::std::string& OperatorProto::op_type() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.op_type)
  return op_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorProto::set_op_type(const ::std::string& value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.op_type)
}
void OperatorProto::set_op_type(const char* value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorProto.op_type)
}
void OperatorProto::set_op_type(const char* value, size_t size) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorProto.op_type)
}
::std::string* OperatorProto::mutable_op_type() {
  set_has_op_type();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.op_type)
  return op_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorProto::release_op_type() {
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.op_type)
  clear_has_op_type();
  return op_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorProto::set_allocated_op_type(::std::string* op_type) {
  if (op_type != NULL) {
    set_has_op_type();
  } else {
    clear_has_op_type();
  }
  op_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_type);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.op_type)
}

// optional int64 since_version = 2;
bool OperatorProto::has_since_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OperatorProto::set_has_since_version() {
  _has_bits_[0] |= 0x00000002u;
}
void OperatorProto::clear_has_since_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void OperatorProto::clear_since_version() {
  since_version_ = GOOGLE_LONGLONG(0);
  clear_has_since_version();
}
::google::protobuf::int64 OperatorProto::since_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.since_version)
  return since_version_;
}
void OperatorProto::set_since_version(::google::protobuf::int64 value) {
  set_has_since_version();
  since_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.since_version)
}

// optional .onnx.OperatorStatus status = 3;
bool OperatorProto::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OperatorProto::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
void OperatorProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
void OperatorProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
::onnx::OperatorStatus OperatorProto::status() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.status)
  return static_cast< ::onnx::OperatorStatus >(status_);
}
void OperatorProto::set_status(::onnx::OperatorStatus value) {
  assert(::onnx::OperatorStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.status)
}

// optional string doc_string = 10;
bool OperatorProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OperatorProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
void OperatorProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
void OperatorProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& OperatorProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.doc_string)
}
void OperatorProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorProto.doc_string)
}
void OperatorProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorProto.doc_string)
}
::std::string* OperatorProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.doc_string)
}

inline const OperatorProto* OperatorProto::internal_default_instance() {
  return &OperatorProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperatorSetProto::kMagicFieldNumber;
const int OperatorSetProto::kIrVersionFieldNumber;
const int OperatorSetProto::kIrVersionPrereleaseFieldNumber;
const int OperatorSetProto::kIrBuildMetadataFieldNumber;
const int OperatorSetProto::kDomainFieldNumber;
const int OperatorSetProto::kOpsetVersionFieldNumber;
const int OperatorSetProto::kDocStringFieldNumber;
const int OperatorSetProto::kOperatorFieldNumber;
const int OperatorSetProto::kFunctionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperatorSetProto::OperatorSetProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:onnx.OperatorSetProto)
}

void OperatorSetProto::InitAsDefaultInstance() {
}

OperatorSetProto::OperatorSetProto(const OperatorSetProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:onnx.OperatorSetProto)
}

void OperatorSetProto::SharedCtor() {
  _cached_size_ = 0;
  magic_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_version_prerelease_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_build_metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&opset_version_, 0, reinterpret_cast<char*>(&ir_version_) -
    reinterpret_cast<char*>(&opset_version_) + sizeof(ir_version_));
}

OperatorSetProto::~OperatorSetProto() {
  // @@protoc_insertion_point(destructor:onnx.OperatorSetProto)
  SharedDtor();
}

void OperatorSetProto::SharedDtor() {
  magic_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_version_prerelease_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ir_build_metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperatorSetProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorSetProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorSetProto_descriptor_;
}

const OperatorSetProto& OperatorSetProto::default_instance() {
  protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OperatorSetProto> OperatorSetProto_default_instance_;

OperatorSetProto* OperatorSetProto::New(::google::protobuf::Arena* arena) const {
  OperatorSetProto* n = new OperatorSetProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperatorSetProto::Clear() {
// @@protoc_insertion_point(message_clear_start:onnx.OperatorSetProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(OperatorSetProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<OperatorSetProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 127u) {
    ZR_(opset_version_, ir_version_);
    if (has_magic()) {
      magic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ir_version_prerelease()) {
      ir_version_prerelease_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_ir_build_metadata()) {
      ir_build_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_domain()) {
      domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  operator__.Clear();
  functions_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OperatorSetProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:onnx.OperatorSetProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string magic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_magic()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->magic().data(), this->magic().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorSetProto.magic");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_ir_version;
        break;
      }

      // optional int32 ir_version = 2;
      case 2: {
        if (tag == 16) {
         parse_ir_version:
          set_has_ir_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ir_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ir_version_prerelease;
        break;
      }

      // optional string ir_version_prerelease = 3;
      case 3: {
        if (tag == 26) {
         parse_ir_version_prerelease:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ir_version_prerelease()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ir_version_prerelease().data(), this->ir_version_prerelease().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorSetProto.ir_version_prerelease");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_domain;
        break;
      }

      // optional string domain = 4;
      case 4: {
        if (tag == 34) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorSetProto.domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_opset_version;
        break;
      }

      // optional int64 opset_version = 5;
      case 5: {
        if (tag == 40) {
         parse_opset_version:
          set_has_opset_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &opset_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (tag == 50) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorSetProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_ir_build_metadata;
        break;
      }

      // optional string ir_build_metadata = 7;
      case 7: {
        if (tag == 58) {
         parse_ir_build_metadata:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ir_build_metadata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ir_build_metadata().data(), this->ir_build_metadata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "onnx.OperatorSetProto.ir_build_metadata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_operator;
        break;
      }

      // repeated .onnx.OperatorProto operator = 8;
      case 8: {
        if (tag == 66) {
         parse_operator:
          DO_(input->IncrementRecursionDepth());
         parse_loop_operator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operator_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_loop_operator;
        if (input->ExpectTag(74)) goto parse_loop_functions;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .onnx.FunctionProto functions = 9;
      case 9: {
        if (tag == 74) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_functions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_functions()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_loop_functions;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:onnx.OperatorSetProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:onnx.OperatorSetProto)
  return false;
#undef DO_
}

void OperatorSetProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:onnx.OperatorSetProto)
  // optional string magic = 1;
  if (has_magic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), this->magic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.magic");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->magic(), output);
  }

  // optional int32 ir_version = 2;
  if (has_ir_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->ir_version(), output);
  }

  // optional string ir_version_prerelease = 3;
  if (has_ir_version_prerelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_version_prerelease().data(), this->ir_version_prerelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.ir_version_prerelease");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ir_version_prerelease(), output);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain(), output);
  }

  // optional int64 opset_version = 5;
  if (has_opset_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->opset_version(), output);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // optional string ir_build_metadata = 7;
  if (has_ir_build_metadata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_build_metadata().data(), this->ir_build_metadata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.ir_build_metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ir_build_metadata(), output);
  }

  // repeated .onnx.OperatorProto operator = 8;
  for (unsigned int i = 0, n = this->operator__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->operator_(i), output);
  }

  // repeated .onnx.FunctionProto functions = 9;
  for (unsigned int i = 0, n = this->functions_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->functions(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:onnx.OperatorSetProto)
}

::google::protobuf::uint8* OperatorSetProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:onnx.OperatorSetProto)
  // optional string magic = 1;
  if (has_magic()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->magic().data(), this->magic().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.magic");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->magic(), target);
  }

  // optional int32 ir_version = 2;
  if (has_ir_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->ir_version(), target);
  }

  // optional string ir_version_prerelease = 3;
  if (has_ir_version_prerelease()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_version_prerelease().data(), this->ir_version_prerelease().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.ir_version_prerelease");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ir_version_prerelease(), target);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain(), target);
  }

  // optional int64 opset_version = 5;
  if (has_opset_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->opset_version(), target);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // optional string ir_build_metadata = 7;
  if (has_ir_build_metadata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ir_build_metadata().data(), this->ir_build_metadata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "onnx.OperatorSetProto.ir_build_metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ir_build_metadata(), target);
  }

  // repeated .onnx.OperatorProto operator = 8;
  for (unsigned int i = 0, n = this->operator__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, this->operator_(i), false, target);
  }

  // repeated .onnx.FunctionProto functions = 9;
  for (unsigned int i = 0, n = this->functions_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, this->functions(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:onnx.OperatorSetProto)
  return target;
}

size_t OperatorSetProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:onnx.OperatorSetProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 127u) {
    // optional string magic = 1;
    if (has_magic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->magic());
    }

    // optional int32 ir_version = 2;
    if (has_ir_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ir_version());
    }

    // optional string ir_version_prerelease = 3;
    if (has_ir_version_prerelease()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ir_version_prerelease());
    }

    // optional string ir_build_metadata = 7;
    if (has_ir_build_metadata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->ir_build_metadata());
    }

    // optional string domain = 4;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional int64 opset_version = 5;
    if (has_opset_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->opset_version());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated .onnx.OperatorProto operator = 8;
  {
    unsigned int count = this->operator__size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->operator_(i));
    }
  }

  // repeated .onnx.FunctionProto functions = 9;
  {
    unsigned int count = this->functions_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->functions(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorSetProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:onnx.OperatorSetProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OperatorSetProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperatorSetProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:onnx.OperatorSetProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:onnx.OperatorSetProto)
    UnsafeMergeFrom(*source);
  }
}

void OperatorSetProto::MergeFrom(const OperatorSetProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:onnx.OperatorSetProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OperatorSetProto::UnsafeMergeFrom(const OperatorSetProto& from) {
  GOOGLE_DCHECK(&from != this);
  operator__.MergeFrom(from.operator__);
  functions_.MergeFrom(from.functions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_magic()) {
      set_has_magic();
      magic_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.magic_);
    }
    if (from.has_ir_version()) {
      set_ir_version(from.ir_version());
    }
    if (from.has_ir_version_prerelease()) {
      set_has_ir_version_prerelease();
      ir_version_prerelease_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ir_version_prerelease_);
    }
    if (from.has_ir_build_metadata()) {
      set_has_ir_build_metadata();
      ir_build_metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ir_build_metadata_);
    }
    if (from.has_domain()) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (from.has_opset_version()) {
      set_opset_version(from.opset_version());
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OperatorSetProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:onnx.OperatorSetProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorSetProto::CopyFrom(const OperatorSetProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:onnx.OperatorSetProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OperatorSetProto::IsInitialized() const {

  return true;
}

void OperatorSetProto::Swap(OperatorSetProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperatorSetProto::InternalSwap(OperatorSetProto* other) {
  magic_.Swap(&other->magic_);
  std::swap(ir_version_, other->ir_version_);
  ir_version_prerelease_.Swap(&other->ir_version_prerelease_);
  ir_build_metadata_.Swap(&other->ir_build_metadata_);
  domain_.Swap(&other->domain_);
  std::swap(opset_version_, other->opset_version_);
  doc_string_.Swap(&other->doc_string_);
  operator__.UnsafeArenaSwap(&other->operator__);
  functions_.UnsafeArenaSwap(&other->functions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperatorSetProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperatorSetProto_descriptor_;
  metadata.reflection = OperatorSetProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperatorSetProto

// optional string magic = 1;
bool OperatorSetProto::has_magic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OperatorSetProto::set_has_magic() {
  _has_bits_[0] |= 0x00000001u;
}
void OperatorSetProto::clear_has_magic() {
  _has_bits_[0] &= ~0x00000001u;
}
void OperatorSetProto::clear_magic() {
  magic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_magic();
}
const ::std::string& OperatorSetProto::magic() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.magic)
  return magic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_magic(const ::std::string& value) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.magic)
}
void OperatorSetProto::set_magic(const char* value) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.magic)
}
void OperatorSetProto::set_magic(const char* value, size_t size) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.magic)
}
::std::string* OperatorSetProto::mutable_magic() {
  set_has_magic();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.magic)
  return magic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorSetProto::release_magic() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.magic)
  clear_has_magic();
  return magic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_allocated_magic(::std::string* magic) {
  if (magic != NULL) {
    set_has_magic();
  } else {
    clear_has_magic();
  }
  magic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), magic);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.magic)
}

// optional int32 ir_version = 2;
bool OperatorSetProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OperatorSetProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000002u;
}
void OperatorSetProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void OperatorSetProto::clear_ir_version() {
  ir_version_ = 0;
  clear_has_ir_version();
}
::google::protobuf::int32 OperatorSetProto::ir_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version)
  return ir_version_;
}
void OperatorSetProto::set_ir_version(::google::protobuf::int32 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version)
}

// optional string ir_version_prerelease = 3;
bool OperatorSetProto::has_ir_version_prerelease() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OperatorSetProto::set_has_ir_version_prerelease() {
  _has_bits_[0] |= 0x00000004u;
}
void OperatorSetProto::clear_has_ir_version_prerelease() {
  _has_bits_[0] &= ~0x00000004u;
}
void OperatorSetProto::clear_ir_version_prerelease() {
  ir_version_prerelease_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ir_version_prerelease();
}
const ::std::string& OperatorSetProto::ir_version_prerelease() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version_prerelease)
  return ir_version_prerelease_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_ir_version_prerelease(const ::std::string& value) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version_prerelease)
}
void OperatorSetProto::set_ir_version_prerelease(const char* value) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.ir_version_prerelease)
}
void OperatorSetProto::set_ir_version_prerelease(const char* value, size_t size) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.ir_version_prerelease)
}
::std::string* OperatorSetProto::mutable_ir_version_prerelease() {
  set_has_ir_version_prerelease();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_version_prerelease)
  return ir_version_prerelease_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorSetProto::release_ir_version_prerelease() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_version_prerelease)
  clear_has_ir_version_prerelease();
  return ir_version_prerelease_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_allocated_ir_version_prerelease(::std::string* ir_version_prerelease) {
  if (ir_version_prerelease != NULL) {
    set_has_ir_version_prerelease();
  } else {
    clear_has_ir_version_prerelease();
  }
  ir_version_prerelease_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ir_version_prerelease);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_version_prerelease)
}

// optional string ir_build_metadata = 7;
bool OperatorSetProto::has_ir_build_metadata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OperatorSetProto::set_has_ir_build_metadata() {
  _has_bits_[0] |= 0x00000008u;
}
void OperatorSetProto::clear_has_ir_build_metadata() {
  _has_bits_[0] &= ~0x00000008u;
}
void OperatorSetProto::clear_ir_build_metadata() {
  ir_build_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ir_build_metadata();
}
const ::std::string& OperatorSetProto::ir_build_metadata() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_build_metadata)
  return ir_build_metadata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_ir_build_metadata(const ::std::string& value) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_build_metadata)
}
void OperatorSetProto::set_ir_build_metadata(const char* value) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.ir_build_metadata)
}
void OperatorSetProto::set_ir_build_metadata(const char* value, size_t size) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.ir_build_metadata)
}
::std::string* OperatorSetProto::mutable_ir_build_metadata() {
  set_has_ir_build_metadata();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_build_metadata)
  return ir_build_metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorSetProto::release_ir_build_metadata() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_build_metadata)
  clear_has_ir_build_metadata();
  return ir_build_metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_allocated_ir_build_metadata(::std::string* ir_build_metadata) {
  if (ir_build_metadata != NULL) {
    set_has_ir_build_metadata();
  } else {
    clear_has_ir_build_metadata();
  }
  ir_build_metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ir_build_metadata);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_build_metadata)
}

// optional string domain = 4;
bool OperatorSetProto::has_domain() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OperatorSetProto::set_has_domain() {
  _has_bits_[0] |= 0x00000010u;
}
void OperatorSetProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000010u;
}
void OperatorSetProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
const ::std::string& OperatorSetProto::domain() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.domain)
}
void OperatorSetProto::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.domain)
}
void OperatorSetProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.domain)
}
::std::string* OperatorSetProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorSetProto::release_domain() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.domain)
}

// optional int64 opset_version = 5;
bool OperatorSetProto::has_opset_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OperatorSetProto::set_has_opset_version() {
  _has_bits_[0] |= 0x00000020u;
}
void OperatorSetProto::clear_has_opset_version() {
  _has_bits_[0] &= ~0x00000020u;
}
void OperatorSetProto::clear_opset_version() {
  opset_version_ = GOOGLE_LONGLONG(0);
  clear_has_opset_version();
}
::google::protobuf::int64 OperatorSetProto::opset_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.opset_version)
  return opset_version_;
}
void OperatorSetProto::set_opset_version(::google::protobuf::int64 value) {
  set_has_opset_version();
  opset_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.opset_version)
}

// optional string doc_string = 6;
bool OperatorSetProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OperatorSetProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000040u;
}
void OperatorSetProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000040u;
}
void OperatorSetProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& OperatorSetProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.doc_string)
}
void OperatorSetProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.doc_string)
}
void OperatorSetProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.doc_string)
}
::std::string* OperatorSetProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorSetProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorSetProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.doc_string)
}

// repeated .onnx.OperatorProto operator = 8;
int OperatorSetProto::operator__size() const {
  return operator__.size();
}
void OperatorSetProto::clear_operator_() {
  operator__.Clear();
}
const ::onnx::OperatorProto& OperatorSetProto::operator_(int index) const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.operator)
  return operator__.Get(index);
}
::onnx::OperatorProto* OperatorSetProto::mutable_operator_(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.operator)
  return operator__.Mutable(index);
}
::onnx::OperatorProto* OperatorSetProto::add_operator_() {
  // @@protoc_insertion_point(field_add:onnx.OperatorSetProto.operator)
  return operator__.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >*
OperatorSetProto::mutable_operator_() {
  // @@protoc_insertion_point(field_mutable_list:onnx.OperatorSetProto.operator)
  return &operator__;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >&
OperatorSetProto::operator_() const {
  // @@protoc_insertion_point(field_list:onnx.OperatorSetProto.operator)
  return operator__;
}

// repeated .onnx.FunctionProto functions = 9;
int OperatorSetProto::functions_size() const {
  return functions_.size();
}
void OperatorSetProto::clear_functions() {
  functions_.Clear();
}
const ::onnx::FunctionProto& OperatorSetProto::functions(int index) const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.functions)
  return functions_.Get(index);
}
::onnx::FunctionProto* OperatorSetProto::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.functions)
  return functions_.Mutable(index);
}
::onnx::FunctionProto* OperatorSetProto::add_functions() {
  // @@protoc_insertion_point(field_add:onnx.OperatorSetProto.functions)
  return functions_.Add();
}
::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto >*
OperatorSetProto::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:onnx.OperatorSetProto.functions)
  return &functions_;
}
const ::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto >&
OperatorSetProto::functions() const {
  // @@protoc_insertion_point(field_list:onnx.OperatorSetProto.functions)
  return functions_;
}

inline const OperatorSetProto* OperatorSetProto::internal_default_instance() {
  return &OperatorSetProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace onnx

// @@protoc_insertion_point(global_scope)
