// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph.proto

#ifndef PROTOBUF_graph_2eproto__INCLUDED
#define PROTOBUF_graph_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ONNXIR {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_graph_2eproto();
void protobuf_InitDefaults_graph_2eproto();
void protobuf_AssignDesc_graph_2eproto();
void protobuf_ShutdownFile_graph_2eproto();

class AttributeProto;
class FunctionDefProto;
class GraphProto;
class LibraryProto;
class ModelProto;
class NodeProto;
class OperatorDeclProto;
class ParameterDeclProto;
class SignatureDeclProto;
class SparseTensorProto;
class TensorProto;
class TensorProto_Segment;
class TypeProto;
class TypeProto_HandleTypeProto;
class TypeProto_MapTypeProto;
class TypeProto_SeqTypeProto;
class TypeProto_SparseTensorTypeProto;
class TypeProto_TensorShapeProto;
class TypeProto_TensorShapeProto_Dimension;
class TypeProto_TensorTypeProto;
class TypeProto_TupleTypeProto;
class ValueInfoProto;
class ValueProto;
class ValueProto_HandleProto;
class ValueProto_MapProto;
class ValueProto_SequenceProto;
class ValueProto_TupleProto;

enum TensorProto_DataType {
  TensorProto_DataType_UNDEFINED = 0,
  TensorProto_DataType_FLOAT = 1,
  TensorProto_DataType_UINT8 = 2,
  TensorProto_DataType_INT8 = 3,
  TensorProto_DataType_UINT16 = 4,
  TensorProto_DataType_INT16 = 5,
  TensorProto_DataType_INT32 = 6,
  TensorProto_DataType_INT64 = 7,
  TensorProto_DataType_STRING = 8,
  TensorProto_DataType_BOOL = 9,
  TensorProto_DataType_FLOAT16 = 10,
  TensorProto_DataType_DOUBLE = 11,
  TensorProto_DataType_UINT32 = 12,
  TensorProto_DataType_UINT64 = 13,
  TensorProto_DataType_COMPLEX64 = 14,
  TensorProto_DataType_COMPLEX128 = 15
};
bool TensorProto_DataType_IsValid(int value);
const TensorProto_DataType TensorProto_DataType_DataType_MIN = TensorProto_DataType_UNDEFINED;
const TensorProto_DataType TensorProto_DataType_DataType_MAX = TensorProto_DataType_COMPLEX128;
const int TensorProto_DataType_DataType_ARRAYSIZE = TensorProto_DataType_DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TensorProto_DataType_descriptor();
inline const ::std::string& TensorProto_DataType_Name(TensorProto_DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TensorProto_DataType_descriptor(), value);
}
inline bool TensorProto_DataType_Parse(
    const ::std::string& name, TensorProto_DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TensorProto_DataType>(
    TensorProto_DataType_descriptor(), name, value);
}
enum Version {
  IR_VERSION = 1
};
bool Version_IsValid(int value);
const Version Version_MIN = IR_VERSION;
const Version Version_MAX = IR_VERSION;
const int Version_ARRAYSIZE = Version_MAX + 1;

const ::google::protobuf::EnumDescriptor* Version_descriptor();
inline const ::std::string& Version_Name(Version value) {
  return ::google::protobuf::internal::NameOfEnum(
    Version_descriptor(), value);
}
inline bool Version_Parse(
    const ::std::string& name, Version* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Version>(
    Version_descriptor(), name, value);
}
// ===================================================================

class AttributeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.AttributeProto) */ {
 public:
  AttributeProto();
  virtual ~AttributeProto();

  AttributeProto(const AttributeProto& from);

  inline AttributeProto& operator=(const AttributeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AttributeProto& default_instance();

  static const AttributeProto* internal_default_instance();

  void Swap(AttributeProto* other);

  // implements Message ----------------------------------------------

  inline AttributeProto* New() const { return New(NULL); }

  AttributeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AttributeProto& from);
  void MergeFrom(const AttributeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(AttributeProto* other);
  void UnsafeMergeFrom(const AttributeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional float f = 2;
  bool has_f() const;
  void clear_f();
  static const int kFFieldNumber = 2;
  float f() const;
  void set_f(float value);

  // optional int64 i = 3;
  bool has_i() const;
  void clear_i();
  static const int kIFieldNumber = 3;
  ::google::protobuf::int64 i() const;
  void set_i(::google::protobuf::int64 value);

  // optional bytes s = 4;
  bool has_s() const;
  void clear_s();
  static const int kSFieldNumber = 4;
  const ::std::string& s() const;
  void set_s(const ::std::string& value);
  void set_s(const char* value);
  void set_s(const void* value, size_t size);
  ::std::string* mutable_s();
  ::std::string* release_s();
  void set_allocated_s(::std::string* s);

  // optional .ONNXIR.TensorProto t = 5;
  bool has_t() const;
  void clear_t();
  static const int kTFieldNumber = 5;
  const ::ONNXIR::TensorProto& t() const;
  ::ONNXIR::TensorProto* mutable_t();
  ::ONNXIR::TensorProto* release_t();
  void set_allocated_t(::ONNXIR::TensorProto* t);

  // optional .ONNXIR.GraphProto g = 6;
  bool has_g() const;
  void clear_g();
  static const int kGFieldNumber = 6;
  const ::ONNXIR::GraphProto& g() const;
  ::ONNXIR::GraphProto* mutable_g();
  ::ONNXIR::GraphProto* release_g();
  void set_allocated_g(::ONNXIR::GraphProto* g);

  // repeated float floats = 7;
  int floats_size() const;
  void clear_floats();
  static const int kFloatsFieldNumber = 7;
  float floats(int index) const;
  void set_floats(int index, float value);
  void add_floats(float value);
  const ::google::protobuf::RepeatedField< float >&
      floats() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_floats();

  // repeated int64 ints = 8;
  int ints_size() const;
  void clear_ints();
  static const int kIntsFieldNumber = 8;
  ::google::protobuf::int64 ints(int index) const;
  void set_ints(int index, ::google::protobuf::int64 value);
  void add_ints(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      ints() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_ints();

  // repeated bytes strings = 9;
  int strings_size() const;
  void clear_strings();
  static const int kStringsFieldNumber = 9;
  const ::std::string& strings(int index) const;
  ::std::string* mutable_strings(int index);
  void set_strings(int index, const ::std::string& value);
  void set_strings(int index, const char* value);
  void set_strings(int index, const void* value, size_t size);
  ::std::string* add_strings();
  void add_strings(const ::std::string& value);
  void add_strings(const char* value);
  void add_strings(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& strings() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_strings();

  // repeated .ONNXIR.TensorProto tensors = 10;
  int tensors_size() const;
  void clear_tensors();
  static const int kTensorsFieldNumber = 10;
  const ::ONNXIR::TensorProto& tensors(int index) const;
  ::ONNXIR::TensorProto* mutable_tensors(int index);
  ::ONNXIR::TensorProto* add_tensors();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >*
      mutable_tensors();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >&
      tensors() const;

  // repeated .ONNXIR.GraphProto graphs = 11;
  int graphs_size() const;
  void clear_graphs();
  static const int kGraphsFieldNumber = 11;
  const ::ONNXIR::GraphProto& graphs(int index) const;
  ::ONNXIR::GraphProto* mutable_graphs(int index);
  ::ONNXIR::GraphProto* add_graphs();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::GraphProto >*
      mutable_graphs();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::GraphProto >&
      graphs() const;

  // optional .ONNXIR.TypeProto type = 51;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 51;
  const ::ONNXIR::TypeProto& type() const;
  ::ONNXIR::TypeProto* mutable_type();
  ::ONNXIR::TypeProto* release_type();
  void set_allocated_type(::ONNXIR::TypeProto* type);

  // repeated .ONNXIR.TypeProto types = 52;
  int types_size() const;
  void clear_types();
  static const int kTypesFieldNumber = 52;
  const ::ONNXIR::TypeProto& types(int index) const;
  ::ONNXIR::TypeProto* mutable_types(int index);
  ::ONNXIR::TypeProto* add_types();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >*
      mutable_types();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >&
      types() const;

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 53;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 53;
  const ::ONNXIR::TypeProto_TensorShapeProto& shape() const;
  ::ONNXIR::TypeProto_TensorShapeProto* mutable_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* release_shape();
  void set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape);

  // repeated .ONNXIR.TypeProto.TensorShapeProto shapes = 54;
  int shapes_size() const;
  void clear_shapes();
  static const int kShapesFieldNumber = 54;
  const ::ONNXIR::TypeProto_TensorShapeProto& shapes(int index) const;
  ::ONNXIR::TypeProto_TensorShapeProto* mutable_shapes(int index);
  ::ONNXIR::TypeProto_TensorShapeProto* add_shapes();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto >*
      mutable_shapes();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto >&
      shapes() const;

  // @@protoc_insertion_point(class_scope:ONNXIR.AttributeProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_f();
  inline void clear_has_f();
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_s();
  inline void clear_has_s();
  inline void set_has_t();
  inline void clear_has_t();
  inline void set_has_g();
  inline void clear_has_g();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_shape();
  inline void clear_has_shape();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< float > floats_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > ints_;
  ::google::protobuf::RepeatedPtrField< ::std::string> strings_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto > tensors_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::GraphProto > graphs_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto > types_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto > shapes_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr s_;
  ::ONNXIR::TensorProto* t_;
  ::ONNXIR::GraphProto* g_;
  ::ONNXIR::TypeProto* type_;
  ::ONNXIR::TypeProto_TensorShapeProto* shape_;
  ::google::protobuf::int64 i_;
  float f_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<AttributeProto> AttributeProto_default_instance_;

// -------------------------------------------------------------------

class ValueInfoProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ValueInfoProto) */ {
 public:
  ValueInfoProto();
  virtual ~ValueInfoProto();

  ValueInfoProto(const ValueInfoProto& from);

  inline ValueInfoProto& operator=(const ValueInfoProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueInfoProto& default_instance();

  static const ValueInfoProto* internal_default_instance();

  void Swap(ValueInfoProto* other);

  // implements Message ----------------------------------------------

  inline ValueInfoProto* New() const { return New(NULL); }

  ValueInfoProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ValueInfoProto& from);
  void MergeFrom(const ValueInfoProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValueInfoProto* other);
  void UnsafeMergeFrom(const ValueInfoProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .ONNXIR.TypeProto type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::ONNXIR::TypeProto& type() const;
  ::ONNXIR::TypeProto* mutable_type();
  ::ONNXIR::TypeProto* release_type();
  void set_allocated_type(::ONNXIR::TypeProto* type);

  // @@protoc_insertion_point(class_scope:ONNXIR.ValueInfoProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::ONNXIR::TypeProto* type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ValueInfoProto> ValueInfoProto_default_instance_;

// -------------------------------------------------------------------

class NodeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.NodeProto) */ {
 public:
  NodeProto();
  virtual ~NodeProto();

  NodeProto(const NodeProto& from);

  inline NodeProto& operator=(const NodeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NodeProto& default_instance();

  static const NodeProto* internal_default_instance();

  void Swap(NodeProto* other);

  // implements Message ----------------------------------------------

  inline NodeProto* New() const { return New(NULL); }

  NodeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NodeProto& from);
  void MergeFrom(const NodeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(NodeProto* other);
  void UnsafeMergeFrom(const NodeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string input = 1;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 1;
  const ::std::string& input(int index) const;
  ::std::string* mutable_input(int index);
  void set_input(int index, const ::std::string& value);
  void set_input(int index, const char* value);
  void set_input(int index, const char* value, size_t size);
  ::std::string* add_input();
  void add_input(const ::std::string& value);
  void add_input(const char* value);
  void add_input(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& input() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_input();

  // repeated string output = 2;
  int output_size() const;
  void clear_output();
  static const int kOutputFieldNumber = 2;
  const ::std::string& output(int index) const;
  ::std::string* mutable_output(int index);
  void set_output(int index, const ::std::string& value);
  void set_output(int index, const char* value);
  void set_output(int index, const char* value, size_t size);
  ::std::string* add_output();
  void add_output(const ::std::string& value);
  void add_output(const char* value);
  void add_output(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& output() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_output();

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string op_type = 4;
  bool has_op_type() const;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 4;
  const ::std::string& op_type() const;
  void set_op_type(const ::std::string& value);
  void set_op_type(const char* value);
  void set_op_type(const char* value, size_t size);
  ::std::string* mutable_op_type();
  ::std::string* release_op_type();
  void set_allocated_op_type(::std::string* op_type);

  // repeated .ONNXIR.AttributeProto attribute = 5;
  int attribute_size() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 5;
  const ::ONNXIR::AttributeProto& attribute(int index) const;
  ::ONNXIR::AttributeProto* mutable_attribute(int index);
  ::ONNXIR::AttributeProto* add_attribute();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >*
      mutable_attribute();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >&
      attribute() const;

  // optional string doc_string = 6;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 6;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // repeated int32 input_arg_count = 50;
  int input_arg_count_size() const;
  void clear_input_arg_count();
  static const int kInputArgCountFieldNumber = 50;
  ::google::protobuf::int32 input_arg_count(int index) const;
  void set_input_arg_count(int index, ::google::protobuf::int32 value);
  void add_input_arg_count(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      input_arg_count() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_input_arg_count();

  // repeated string control_input = 51;
  int control_input_size() const;
  void clear_control_input();
  static const int kControlInputFieldNumber = 51;
  const ::std::string& control_input(int index) const;
  ::std::string* mutable_control_input(int index);
  void set_control_input(int index, const ::std::string& value);
  void set_control_input(int index, const char* value);
  void set_control_input(int index, const char* value, size_t size);
  ::std::string* add_control_input();
  void add_control_input(const ::std::string& value);
  void add_control_input(const char* value);
  void add_control_input(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& control_input() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_control_input();

  // @@protoc_insertion_point(class_scope:ONNXIR.NodeProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> input_;
  ::google::protobuf::RepeatedPtrField< ::std::string> output_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto > attribute_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > input_arg_count_;
  ::google::protobuf::RepeatedPtrField< ::std::string> control_input_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr op_type_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<NodeProto> NodeProto_default_instance_;

// -------------------------------------------------------------------

class ModelProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ModelProto) */ {
 public:
  ModelProto();
  virtual ~ModelProto();

  ModelProto(const ModelProto& from);

  inline ModelProto& operator=(const ModelProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ModelProto& default_instance();

  static const ModelProto* internal_default_instance();

  void Swap(ModelProto* other);

  // implements Message ----------------------------------------------

  inline ModelProto* New() const { return New(NULL); }

  ModelProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ModelProto& from);
  void MergeFrom(const ModelProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ModelProto* other);
  void UnsafeMergeFrom(const ModelProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ir_version = 1;
  bool has_ir_version() const;
  void clear_ir_version();
  static const int kIrVersionFieldNumber = 1;
  ::google::protobuf::int64 ir_version() const;
  void set_ir_version(::google::protobuf::int64 value);

  // optional string producer_name = 2;
  bool has_producer_name() const;
  void clear_producer_name();
  static const int kProducerNameFieldNumber = 2;
  const ::std::string& producer_name() const;
  void set_producer_name(const ::std::string& value);
  void set_producer_name(const char* value);
  void set_producer_name(const char* value, size_t size);
  ::std::string* mutable_producer_name();
  ::std::string* release_producer_name();
  void set_allocated_producer_name(::std::string* producer_name);

  // optional string producer_version = 3;
  bool has_producer_version() const;
  void clear_producer_version();
  static const int kProducerVersionFieldNumber = 3;
  const ::std::string& producer_version() const;
  void set_producer_version(const ::std::string& value);
  void set_producer_version(const char* value);
  void set_producer_version(const char* value, size_t size);
  ::std::string* mutable_producer_version();
  ::std::string* release_producer_version();
  void set_allocated_producer_version(::std::string* producer_version);

  // optional string domain = 4;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 4;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional int64 model_version = 5;
  bool has_model_version() const;
  void clear_model_version();
  static const int kModelVersionFieldNumber = 5;
  ::google::protobuf::int64 model_version() const;
  void set_model_version(::google::protobuf::int64 value);

  // optional string doc_string = 6;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 6;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // optional .ONNXIR.GraphProto graph = 7;
  bool has_graph() const;
  void clear_graph();
  static const int kGraphFieldNumber = 7;
  const ::ONNXIR::GraphProto& graph() const;
  ::ONNXIR::GraphProto* mutable_graph();
  ::ONNXIR::GraphProto* release_graph();
  void set_allocated_graph(::ONNXIR::GraphProto* graph);

  // optional string model_author = 50;
  bool has_model_author() const;
  void clear_model_author();
  static const int kModelAuthorFieldNumber = 50;
  const ::std::string& model_author() const;
  void set_model_author(const ::std::string& value);
  void set_model_author(const char* value);
  void set_model_author(const char* value, size_t size);
  ::std::string* mutable_model_author();
  ::std::string* release_model_author();
  void set_allocated_model_author(::std::string* model_author);

  // optional string model_license = 51;
  bool has_model_license() const;
  void clear_model_license();
  static const int kModelLicenseFieldNumber = 51;
  const ::std::string& model_license() const;
  void set_model_license(const ::std::string& value);
  void set_model_license(const char* value);
  void set_model_license(const char* value, size_t size);
  ::std::string* mutable_model_license();
  ::std::string* release_model_license();
  void set_allocated_model_license(::std::string* model_license);

  // @@protoc_insertion_point(class_scope:ONNXIR.ModelProto)
 private:
  inline void set_has_ir_version();
  inline void clear_has_ir_version();
  inline void set_has_producer_name();
  inline void clear_has_producer_name();
  inline void set_has_producer_version();
  inline void clear_has_producer_version();
  inline void set_has_domain();
  inline void clear_has_domain();
  inline void set_has_model_version();
  inline void clear_has_model_version();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();
  inline void set_has_graph();
  inline void clear_has_graph();
  inline void set_has_model_author();
  inline void clear_has_model_author();
  inline void set_has_model_license();
  inline void clear_has_model_license();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr producer_name_;
  ::google::protobuf::internal::ArenaStringPtr producer_version_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::google::protobuf::internal::ArenaStringPtr model_author_;
  ::google::protobuf::internal::ArenaStringPtr model_license_;
  ::ONNXIR::GraphProto* graph_;
  ::google::protobuf::int64 ir_version_;
  ::google::protobuf::int64 model_version_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ModelProto> ModelProto_default_instance_;

// -------------------------------------------------------------------

class GraphProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.GraphProto) */ {
 public:
  GraphProto();
  virtual ~GraphProto();

  GraphProto(const GraphProto& from);

  inline GraphProto& operator=(const GraphProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GraphProto& default_instance();

  static const GraphProto* internal_default_instance();

  void Swap(GraphProto* other);

  // implements Message ----------------------------------------------

  inline GraphProto* New() const { return New(NULL); }

  GraphProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GraphProto& from);
  void MergeFrom(const GraphProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GraphProto* other);
  void UnsafeMergeFrom(const GraphProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ONNXIR.NodeProto node = 1;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 1;
  const ::ONNXIR::NodeProto& node(int index) const;
  ::ONNXIR::NodeProto* mutable_node(int index);
  ::ONNXIR::NodeProto* add_node();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >*
      mutable_node();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >&
      node() const;

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .ONNXIR.TensorProto initializer = 5;
  int initializer_size() const;
  void clear_initializer();
  static const int kInitializerFieldNumber = 5;
  const ::ONNXIR::TensorProto& initializer(int index) const;
  ::ONNXIR::TensorProto* mutable_initializer(int index);
  ::ONNXIR::TensorProto* add_initializer();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >*
      mutable_initializer();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >&
      initializer() const;

  // optional string doc_string = 10;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 10;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // repeated .ONNXIR.ValueInfoProto input = 11;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 11;
  const ::ONNXIR::ValueInfoProto& input(int index) const;
  ::ONNXIR::ValueInfoProto* mutable_input(int index);
  ::ONNXIR::ValueInfoProto* add_input();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
      mutable_input();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
      input() const;

  // repeated .ONNXIR.ValueInfoProto output = 12;
  int output_size() const;
  void clear_output();
  static const int kOutputFieldNumber = 12;
  const ::ONNXIR::ValueInfoProto& output(int index) const;
  ::ONNXIR::ValueInfoProto* mutable_output(int index);
  ::ONNXIR::ValueInfoProto* add_output();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
      mutable_output();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
      output() const;

  // repeated .ONNXIR.ValueInfoProto value_info = 13;
  int value_info_size() const;
  void clear_value_info();
  static const int kValueInfoFieldNumber = 13;
  const ::ONNXIR::ValueInfoProto& value_info(int index) const;
  ::ONNXIR::ValueInfoProto* mutable_value_info(int index);
  ::ONNXIR::ValueInfoProto* add_value_info();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
      mutable_value_info();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
      value_info() const;

  // repeated .ONNXIR.FunctionDefProto function = 50;
  int function_size() const;
  void clear_function();
  static const int kFunctionFieldNumber = 50;
  const ::ONNXIR::FunctionDefProto& function(int index) const;
  ::ONNXIR::FunctionDefProto* mutable_function(int index);
  ::ONNXIR::FunctionDefProto* add_function();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >*
      mutable_function();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >&
      function() const;

  // repeated .ONNXIR.OperatorDeclProto operator = 51;
  int operator__size() const;
  void clear_operator_();
  static const int kOperatorFieldNumber = 51;
  const ::ONNXIR::OperatorDeclProto& operator_(int index) const;
  ::ONNXIR::OperatorDeclProto* mutable_operator_(int index);
  ::ONNXIR::OperatorDeclProto* add_operator_();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >*
      mutable_operator_();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >&
      operator_() const;

  // repeated string imported_libraries = 52;
  int imported_libraries_size() const;
  void clear_imported_libraries();
  static const int kImportedLibrariesFieldNumber = 52;
  const ::std::string& imported_libraries(int index) const;
  ::std::string* mutable_imported_libraries(int index);
  void set_imported_libraries(int index, const ::std::string& value);
  void set_imported_libraries(int index, const char* value);
  void set_imported_libraries(int index, const char* value, size_t size);
  ::std::string* add_imported_libraries();
  void add_imported_libraries(const ::std::string& value);
  void add_imported_libraries(const char* value);
  void add_imported_libraries(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& imported_libraries() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_imported_libraries();

  // @@protoc_insertion_point(class_scope:ONNXIR.GraphProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto > node_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto > initializer_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto > input_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto > output_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto > value_info_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto > function_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto > operator__;
  ::google::protobuf::RepeatedPtrField< ::std::string> imported_libraries_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GraphProto> GraphProto_default_instance_;

// -------------------------------------------------------------------

class TensorProto_Segment : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TensorProto.Segment) */ {
 public:
  TensorProto_Segment();
  virtual ~TensorProto_Segment();

  TensorProto_Segment(const TensorProto_Segment& from);

  inline TensorProto_Segment& operator=(const TensorProto_Segment& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TensorProto_Segment& default_instance();

  static const TensorProto_Segment* internal_default_instance();

  void Swap(TensorProto_Segment* other);

  // implements Message ----------------------------------------------

  inline TensorProto_Segment* New() const { return New(NULL); }

  TensorProto_Segment* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TensorProto_Segment& from);
  void MergeFrom(const TensorProto_Segment& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TensorProto_Segment* other);
  void UnsafeMergeFrom(const TensorProto_Segment& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 begin = 1;
  bool has_begin() const;
  void clear_begin();
  static const int kBeginFieldNumber = 1;
  ::google::protobuf::int64 begin() const;
  void set_begin(::google::protobuf::int64 value);

  // optional int64 end = 2;
  bool has_end() const;
  void clear_end();
  static const int kEndFieldNumber = 2;
  ::google::protobuf::int64 end() const;
  void set_end(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ONNXIR.TensorProto.Segment)
 private:
  inline void set_has_begin();
  inline void clear_has_begin();
  inline void set_has_end();
  inline void clear_has_end();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 begin_;
  ::google::protobuf::int64 end_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TensorProto_Segment> TensorProto_Segment_default_instance_;

// -------------------------------------------------------------------

class TensorProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TensorProto) */ {
 public:
  TensorProto();
  virtual ~TensorProto();

  TensorProto(const TensorProto& from);

  inline TensorProto& operator=(const TensorProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TensorProto& default_instance();

  static const TensorProto* internal_default_instance();

  void Swap(TensorProto* other);

  // implements Message ----------------------------------------------

  inline TensorProto* New() const { return New(NULL); }

  TensorProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TensorProto& from);
  void MergeFrom(const TensorProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TensorProto* other);
  void UnsafeMergeFrom(const TensorProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TensorProto_Segment Segment;

  typedef TensorProto_DataType DataType;
  static const DataType UNDEFINED =
    TensorProto_DataType_UNDEFINED;
  static const DataType FLOAT =
    TensorProto_DataType_FLOAT;
  static const DataType UINT8 =
    TensorProto_DataType_UINT8;
  static const DataType INT8 =
    TensorProto_DataType_INT8;
  static const DataType UINT16 =
    TensorProto_DataType_UINT16;
  static const DataType INT16 =
    TensorProto_DataType_INT16;
  static const DataType INT32 =
    TensorProto_DataType_INT32;
  static const DataType INT64 =
    TensorProto_DataType_INT64;
  static const DataType STRING =
    TensorProto_DataType_STRING;
  static const DataType BOOL =
    TensorProto_DataType_BOOL;
  static const DataType FLOAT16 =
    TensorProto_DataType_FLOAT16;
  static const DataType DOUBLE =
    TensorProto_DataType_DOUBLE;
  static const DataType UINT32 =
    TensorProto_DataType_UINT32;
  static const DataType UINT64 =
    TensorProto_DataType_UINT64;
  static const DataType COMPLEX64 =
    TensorProto_DataType_COMPLEX64;
  static const DataType COMPLEX128 =
    TensorProto_DataType_COMPLEX128;
  static inline bool DataType_IsValid(int value) {
    return TensorProto_DataType_IsValid(value);
  }
  static const DataType DataType_MIN =
    TensorProto_DataType_DataType_MIN;
  static const DataType DataType_MAX =
    TensorProto_DataType_DataType_MAX;
  static const int DataType_ARRAYSIZE =
    TensorProto_DataType_DataType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  DataType_descriptor() {
    return TensorProto_DataType_descriptor();
  }
  static inline const ::std::string& DataType_Name(DataType value) {
    return TensorProto_DataType_Name(value);
  }
  static inline bool DataType_Parse(const ::std::string& name,
      DataType* value) {
    return TensorProto_DataType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int64 dims = 1;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 1;
  ::google::protobuf::int64 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int64 value);
  void add_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dims();

  // optional .ONNXIR.TensorProto.DataType data_type = 2;
  bool has_data_type() const;
  void clear_data_type();
  static const int kDataTypeFieldNumber = 2;
  ::ONNXIR::TensorProto_DataType data_type() const;
  void set_data_type(::ONNXIR::TensorProto_DataType value);

  // optional .ONNXIR.TensorProto.Segment segment = 3;
  bool has_segment() const;
  void clear_segment();
  static const int kSegmentFieldNumber = 3;
  const ::ONNXIR::TensorProto_Segment& segment() const;
  ::ONNXIR::TensorProto_Segment* mutable_segment();
  ::ONNXIR::TensorProto_Segment* release_segment();
  void set_allocated_segment(::ONNXIR::TensorProto_Segment* segment);

  // repeated float float_data = 4 [packed = true];
  int float_data_size() const;
  void clear_float_data();
  static const int kFloatDataFieldNumber = 4;
  float float_data(int index) const;
  void set_float_data(int index, float value);
  void add_float_data(float value);
  const ::google::protobuf::RepeatedField< float >&
      float_data() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_float_data();

  // repeated int32 int32_data = 5 [packed = true];
  int int32_data_size() const;
  void clear_int32_data();
  static const int kInt32DataFieldNumber = 5;
  ::google::protobuf::int32 int32_data(int index) const;
  void set_int32_data(int index, ::google::protobuf::int32 value);
  void add_int32_data(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      int32_data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_int32_data();

  // repeated bytes string_data = 6;
  int string_data_size() const;
  void clear_string_data();
  static const int kStringDataFieldNumber = 6;
  const ::std::string& string_data(int index) const;
  ::std::string* mutable_string_data(int index);
  void set_string_data(int index, const ::std::string& value);
  void set_string_data(int index, const char* value);
  void set_string_data(int index, const void* value, size_t size);
  ::std::string* add_string_data();
  void add_string_data(const ::std::string& value);
  void add_string_data(const char* value);
  void add_string_data(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& string_data() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_string_data();

  // repeated int64 int64_data = 7 [packed = true];
  int int64_data_size() const;
  void clear_int64_data();
  static const int kInt64DataFieldNumber = 7;
  ::google::protobuf::int64 int64_data(int index) const;
  void set_int64_data(int index, ::google::protobuf::int64 value);
  void add_int64_data(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      int64_data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_int64_data();

  // optional string name = 8;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 8;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional bytes raw_data = 9;
  bool has_raw_data() const;
  void clear_raw_data();
  static const int kRawDataFieldNumber = 9;
  const ::std::string& raw_data() const;
  void set_raw_data(const ::std::string& value);
  void set_raw_data(const char* value);
  void set_raw_data(const void* value, size_t size);
  ::std::string* mutable_raw_data();
  ::std::string* release_raw_data();
  void set_allocated_raw_data(::std::string* raw_data);

  // repeated double double_data = 10 [packed = true];
  int double_data_size() const;
  void clear_double_data();
  static const int kDoubleDataFieldNumber = 10;
  double double_data(int index) const;
  void set_double_data(int index, double value);
  void add_double_data(double value);
  const ::google::protobuf::RepeatedField< double >&
      double_data() const;
  ::google::protobuf::RepeatedField< double >*
      mutable_double_data();

  // repeated uint64 uint64_data = 11 [packed = true];
  int uint64_data_size() const;
  void clear_uint64_data();
  static const int kUint64DataFieldNumber = 11;
  ::google::protobuf::uint64 uint64_data(int index) const;
  void set_uint64_data(int index, ::google::protobuf::uint64 value);
  void add_uint64_data(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      uint64_data() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_uint64_data();

  // @@protoc_insertion_point(class_scope:ONNXIR.TensorProto)
 private:
  inline void set_has_data_type();
  inline void clear_has_data_type();
  inline void set_has_segment();
  inline void clear_has_segment();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_raw_data();
  inline void clear_has_raw_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dims_;
  ::google::protobuf::RepeatedField< float > float_data_;
  mutable int _float_data_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > int32_data_;
  mutable int _int32_data_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> string_data_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > int64_data_;
  mutable int _int64_data_cached_byte_size_;
  ::google::protobuf::RepeatedField< double > double_data_;
  mutable int _double_data_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > uint64_data_;
  mutable int _uint64_data_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr raw_data_;
  ::ONNXIR::TensorProto_Segment* segment_;
  int data_type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TensorProto> TensorProto_default_instance_;

// -------------------------------------------------------------------

class SparseTensorProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.SparseTensorProto) */ {
 public:
  SparseTensorProto();
  virtual ~SparseTensorProto();

  SparseTensorProto(const SparseTensorProto& from);

  inline SparseTensorProto& operator=(const SparseTensorProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SparseTensorProto& default_instance();

  static const SparseTensorProto* internal_default_instance();

  void Swap(SparseTensorProto* other);

  // implements Message ----------------------------------------------

  inline SparseTensorProto* New() const { return New(NULL); }

  SparseTensorProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SparseTensorProto& from);
  void MergeFrom(const SparseTensorProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SparseTensorProto* other);
  void UnsafeMergeFrom(const SparseTensorProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int64 dims = 1;
  int dims_size() const;
  void clear_dims();
  static const int kDimsFieldNumber = 1;
  ::google::protobuf::int64 dims(int index) const;
  void set_dims(int index, ::google::protobuf::int64 value);
  void add_dims(::google::protobuf::int64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
      dims() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
      mutable_dims();

  // optional .ONNXIR.TensorProto indices = 2;
  bool has_indices() const;
  void clear_indices();
  static const int kIndicesFieldNumber = 2;
  const ::ONNXIR::TensorProto& indices() const;
  ::ONNXIR::TensorProto* mutable_indices();
  ::ONNXIR::TensorProto* release_indices();
  void set_allocated_indices(::ONNXIR::TensorProto* indices);

  // optional .ONNXIR.TensorProto values = 3;
  bool has_values() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  const ::ONNXIR::TensorProto& values() const;
  ::ONNXIR::TensorProto* mutable_values();
  ::ONNXIR::TensorProto* release_values();
  void set_allocated_values(::ONNXIR::TensorProto* values);

  // @@protoc_insertion_point(class_scope:ONNXIR.SparseTensorProto)
 private:
  inline void set_has_indices();
  inline void clear_has_indices();
  inline void set_has_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int64 > dims_;
  ::ONNXIR::TensorProto* indices_;
  ::ONNXIR::TensorProto* values_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SparseTensorProto> SparseTensorProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto_TensorShapeProto_Dimension : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.TensorShapeProto.Dimension) */ {
 public:
  TypeProto_TensorShapeProto_Dimension();
  virtual ~TypeProto_TensorShapeProto_Dimension();

  TypeProto_TensorShapeProto_Dimension(const TypeProto_TensorShapeProto_Dimension& from);

  inline TypeProto_TensorShapeProto_Dimension& operator=(const TypeProto_TensorShapeProto_Dimension& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_TensorShapeProto_Dimension& default_instance();

  enum ValueCase {
    kDimValue = 1,
    kDimParam = 2,
    VALUE_NOT_SET = 0,
  };

  static const TypeProto_TensorShapeProto_Dimension* internal_default_instance();

  void Swap(TypeProto_TensorShapeProto_Dimension* other);

  // implements Message ----------------------------------------------

  inline TypeProto_TensorShapeProto_Dimension* New() const { return New(NULL); }

  TypeProto_TensorShapeProto_Dimension* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_TensorShapeProto_Dimension& from);
  void MergeFrom(const TypeProto_TensorShapeProto_Dimension& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_TensorShapeProto_Dimension* other);
  void UnsafeMergeFrom(const TypeProto_TensorShapeProto_Dimension& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 dim_value = 1;
  bool has_dim_value() const;
  void clear_dim_value();
  static const int kDimValueFieldNumber = 1;
  ::google::protobuf::int64 dim_value() const;
  void set_dim_value(::google::protobuf::int64 value);

  // optional string dim_param = 2;
  bool has_dim_param() const;
  void clear_dim_param();
  static const int kDimParamFieldNumber = 2;
  const ::std::string& dim_param() const;
  void set_dim_param(const ::std::string& value);
  void set_dim_param(const char* value);
  void set_dim_param(const char* value, size_t size);
  ::std::string* mutable_dim_param();
  ::std::string* release_dim_param();
  void set_allocated_dim_param(::std::string* dim_param);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.TensorShapeProto.Dimension)
 private:
  inline void set_has_dim_value();
  inline void set_has_dim_param();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union ValueUnion {
    ValueUnion() {}
    ::google::protobuf::int64 dim_value_;
    ::google::protobuf::internal::ArenaStringPtr dim_param_;
  } value_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TensorShapeProto_Dimension> TypeProto_TensorShapeProto_Dimension_default_instance_;

// -------------------------------------------------------------------

class TypeProto_TensorShapeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.TensorShapeProto) */ {
 public:
  TypeProto_TensorShapeProto();
  virtual ~TypeProto_TensorShapeProto();

  TypeProto_TensorShapeProto(const TypeProto_TensorShapeProto& from);

  inline TypeProto_TensorShapeProto& operator=(const TypeProto_TensorShapeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_TensorShapeProto& default_instance();

  static const TypeProto_TensorShapeProto* internal_default_instance();

  void Swap(TypeProto_TensorShapeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto_TensorShapeProto* New() const { return New(NULL); }

  TypeProto_TensorShapeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_TensorShapeProto& from);
  void MergeFrom(const TypeProto_TensorShapeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_TensorShapeProto* other);
  void UnsafeMergeFrom(const TypeProto_TensorShapeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TypeProto_TensorShapeProto_Dimension Dimension;

  // accessors -------------------------------------------------------

  // repeated .ONNXIR.TypeProto.TensorShapeProto.Dimension dim = 1;
  int dim_size() const;
  void clear_dim();
  static const int kDimFieldNumber = 1;
  const ::ONNXIR::TypeProto_TensorShapeProto_Dimension& dim(int index) const;
  ::ONNXIR::TypeProto_TensorShapeProto_Dimension* mutable_dim(int index);
  ::ONNXIR::TypeProto_TensorShapeProto_Dimension* add_dim();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto_Dimension >*
      mutable_dim();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto_Dimension >&
      dim() const;

  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.TensorShapeProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto_Dimension > dim_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TensorShapeProto> TypeProto_TensorShapeProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto_TensorTypeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.TensorTypeProto) */ {
 public:
  TypeProto_TensorTypeProto();
  virtual ~TypeProto_TensorTypeProto();

  TypeProto_TensorTypeProto(const TypeProto_TensorTypeProto& from);

  inline TypeProto_TensorTypeProto& operator=(const TypeProto_TensorTypeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_TensorTypeProto& default_instance();

  static const TypeProto_TensorTypeProto* internal_default_instance();

  void Swap(TypeProto_TensorTypeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto_TensorTypeProto* New() const { return New(NULL); }

  TypeProto_TensorTypeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_TensorTypeProto& from);
  void MergeFrom(const TypeProto_TensorTypeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_TensorTypeProto* other);
  void UnsafeMergeFrom(const TypeProto_TensorTypeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ONNXIR.TensorProto.DataType elem_type = 1;
  bool has_elem_type() const;
  void clear_elem_type();
  static const int kElemTypeFieldNumber = 1;
  ::ONNXIR::TensorProto_DataType elem_type() const;
  void set_elem_type(::ONNXIR::TensorProto_DataType value);

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 2;
  const ::ONNXIR::TypeProto_TensorShapeProto& shape() const;
  ::ONNXIR::TypeProto_TensorShapeProto* mutable_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* release_shape();
  void set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape);

  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.TensorTypeProto)
 private:
  inline void set_has_elem_type();
  inline void clear_has_elem_type();
  inline void set_has_shape();
  inline void clear_has_shape();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ONNXIR::TypeProto_TensorShapeProto* shape_;
  int elem_type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TensorTypeProto> TypeProto_TensorTypeProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto_SparseTensorTypeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.SparseTensorTypeProto) */ {
 public:
  TypeProto_SparseTensorTypeProto();
  virtual ~TypeProto_SparseTensorTypeProto();

  TypeProto_SparseTensorTypeProto(const TypeProto_SparseTensorTypeProto& from);

  inline TypeProto_SparseTensorTypeProto& operator=(const TypeProto_SparseTensorTypeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_SparseTensorTypeProto& default_instance();

  static const TypeProto_SparseTensorTypeProto* internal_default_instance();

  void Swap(TypeProto_SparseTensorTypeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto_SparseTensorTypeProto* New() const { return New(NULL); }

  TypeProto_SparseTensorTypeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_SparseTensorTypeProto& from);
  void MergeFrom(const TypeProto_SparseTensorTypeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_SparseTensorTypeProto* other);
  void UnsafeMergeFrom(const TypeProto_SparseTensorTypeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ONNXIR.TensorProto.DataType elem_type = 1;
  bool has_elem_type() const;
  void clear_elem_type();
  static const int kElemTypeFieldNumber = 1;
  ::ONNXIR::TensorProto_DataType elem_type() const;
  void set_elem_type(::ONNXIR::TensorProto_DataType value);

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
  bool has_shape() const;
  void clear_shape();
  static const int kShapeFieldNumber = 2;
  const ::ONNXIR::TypeProto_TensorShapeProto& shape() const;
  ::ONNXIR::TypeProto_TensorShapeProto* mutable_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* release_shape();
  void set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape);

  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.SparseTensorTypeProto)
 private:
  inline void set_has_elem_type();
  inline void clear_has_elem_type();
  inline void set_has_shape();
  inline void clear_has_shape();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ONNXIR::TypeProto_TensorShapeProto* shape_;
  int elem_type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_SparseTensorTypeProto> TypeProto_SparseTensorTypeProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto_HandleTypeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.HandleTypeProto) */ {
 public:
  TypeProto_HandleTypeProto();
  virtual ~TypeProto_HandleTypeProto();

  TypeProto_HandleTypeProto(const TypeProto_HandleTypeProto& from);

  inline TypeProto_HandleTypeProto& operator=(const TypeProto_HandleTypeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_HandleTypeProto& default_instance();

  static const TypeProto_HandleTypeProto* internal_default_instance();

  void Swap(TypeProto_HandleTypeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto_HandleTypeProto* New() const { return New(NULL); }

  TypeProto_HandleTypeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_HandleTypeProto& from);
  void MergeFrom(const TypeProto_HandleTypeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_HandleTypeProto* other);
  void UnsafeMergeFrom(const TypeProto_HandleTypeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.HandleTypeProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_HandleTypeProto> TypeProto_HandleTypeProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto_TupleTypeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.TupleTypeProto) */ {
 public:
  TypeProto_TupleTypeProto();
  virtual ~TypeProto_TupleTypeProto();

  TypeProto_TupleTypeProto(const TypeProto_TupleTypeProto& from);

  inline TypeProto_TupleTypeProto& operator=(const TypeProto_TupleTypeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_TupleTypeProto& default_instance();

  static const TypeProto_TupleTypeProto* internal_default_instance();

  void Swap(TypeProto_TupleTypeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto_TupleTypeProto* New() const { return New(NULL); }

  TypeProto_TupleTypeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_TupleTypeProto& from);
  void MergeFrom(const TypeProto_TupleTypeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_TupleTypeProto* other);
  void UnsafeMergeFrom(const TypeProto_TupleTypeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ONNXIR.TypeProto elem_type = 1;
  int elem_type_size() const;
  void clear_elem_type();
  static const int kElemTypeFieldNumber = 1;
  const ::ONNXIR::TypeProto& elem_type(int index) const;
  ::ONNXIR::TypeProto* mutable_elem_type(int index);
  ::ONNXIR::TypeProto* add_elem_type();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >*
      mutable_elem_type();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >&
      elem_type() const;

  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.TupleTypeProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto > elem_type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TupleTypeProto> TypeProto_TupleTypeProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto_SeqTypeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.SeqTypeProto) */ {
 public:
  TypeProto_SeqTypeProto();
  virtual ~TypeProto_SeqTypeProto();

  TypeProto_SeqTypeProto(const TypeProto_SeqTypeProto& from);

  inline TypeProto_SeqTypeProto& operator=(const TypeProto_SeqTypeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_SeqTypeProto& default_instance();

  static const TypeProto_SeqTypeProto* internal_default_instance();

  void Swap(TypeProto_SeqTypeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto_SeqTypeProto* New() const { return New(NULL); }

  TypeProto_SeqTypeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_SeqTypeProto& from);
  void MergeFrom(const TypeProto_SeqTypeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_SeqTypeProto* other);
  void UnsafeMergeFrom(const TypeProto_SeqTypeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ONNXIR.TypeProto elem_type = 1;
  bool has_elem_type() const;
  void clear_elem_type();
  static const int kElemTypeFieldNumber = 1;
  const ::ONNXIR::TypeProto& elem_type() const;
  ::ONNXIR::TypeProto* mutable_elem_type();
  ::ONNXIR::TypeProto* release_elem_type();
  void set_allocated_elem_type(::ONNXIR::TypeProto* elem_type);

  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.SeqTypeProto)
 private:
  inline void set_has_elem_type();
  inline void clear_has_elem_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ONNXIR::TypeProto* elem_type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_SeqTypeProto> TypeProto_SeqTypeProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto_MapTypeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto.MapTypeProto) */ {
 public:
  TypeProto_MapTypeProto();
  virtual ~TypeProto_MapTypeProto();

  TypeProto_MapTypeProto(const TypeProto_MapTypeProto& from);

  inline TypeProto_MapTypeProto& operator=(const TypeProto_MapTypeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto_MapTypeProto& default_instance();

  static const TypeProto_MapTypeProto* internal_default_instance();

  void Swap(TypeProto_MapTypeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto_MapTypeProto* New() const { return New(NULL); }

  TypeProto_MapTypeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto_MapTypeProto& from);
  void MergeFrom(const TypeProto_MapTypeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto_MapTypeProto* other);
  void UnsafeMergeFrom(const TypeProto_MapTypeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ONNXIR.TensorProto.DataType key_type = 1;
  bool has_key_type() const;
  void clear_key_type();
  static const int kKeyTypeFieldNumber = 1;
  ::ONNXIR::TensorProto_DataType key_type() const;
  void set_key_type(::ONNXIR::TensorProto_DataType value);

  // optional .ONNXIR.TensorProto.DataType value_type = 2;
  bool has_value_type() const;
  void clear_value_type();
  static const int kValueTypeFieldNumber = 2;
  ::ONNXIR::TensorProto_DataType value_type() const;
  void set_value_type(::ONNXIR::TensorProto_DataType value);

  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto.MapTypeProto)
 private:
  inline void set_has_key_type();
  inline void clear_has_key_type();
  inline void set_has_value_type();
  inline void clear_has_value_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  int key_type_;
  int value_type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto_MapTypeProto> TypeProto_MapTypeProto_default_instance_;

// -------------------------------------------------------------------

class TypeProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.TypeProto) */ {
 public:
  TypeProto();
  virtual ~TypeProto();

  TypeProto(const TypeProto& from);

  inline TypeProto& operator=(const TypeProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TypeProto& default_instance();

  enum ValueCase {
    kTensorType = 1,
    kSparseTensorType = 2,
    kHandleType = 3,
    kTupleType = 4,
    kSeqType = 5,
    kMapType = 6,
    VALUE_NOT_SET = 0,
  };

  static const TypeProto* internal_default_instance();

  void Swap(TypeProto* other);

  // implements Message ----------------------------------------------

  inline TypeProto* New() const { return New(NULL); }

  TypeProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TypeProto& from);
  void MergeFrom(const TypeProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TypeProto* other);
  void UnsafeMergeFrom(const TypeProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TypeProto_TensorShapeProto TensorShapeProto;
  typedef TypeProto_TensorTypeProto TensorTypeProto;
  typedef TypeProto_SparseTensorTypeProto SparseTensorTypeProto;
  typedef TypeProto_HandleTypeProto HandleTypeProto;
  typedef TypeProto_TupleTypeProto TupleTypeProto;
  typedef TypeProto_SeqTypeProto SeqTypeProto;
  typedef TypeProto_MapTypeProto MapTypeProto;

  // accessors -------------------------------------------------------

  // optional .ONNXIR.TypeProto.TensorTypeProto tensor_type = 1;
  bool has_tensor_type() const;
  void clear_tensor_type();
  static const int kTensorTypeFieldNumber = 1;
  const ::ONNXIR::TypeProto_TensorTypeProto& tensor_type() const;
  ::ONNXIR::TypeProto_TensorTypeProto* mutable_tensor_type();
  ::ONNXIR::TypeProto_TensorTypeProto* release_tensor_type();
  void set_allocated_tensor_type(::ONNXIR::TypeProto_TensorTypeProto* tensor_type);

  // optional .ONNXIR.TypeProto.SparseTensorTypeProto sparse_tensor_type = 2;
  bool has_sparse_tensor_type() const;
  void clear_sparse_tensor_type();
  static const int kSparseTensorTypeFieldNumber = 2;
  const ::ONNXIR::TypeProto_SparseTensorTypeProto& sparse_tensor_type() const;
  ::ONNXIR::TypeProto_SparseTensorTypeProto* mutable_sparse_tensor_type();
  ::ONNXIR::TypeProto_SparseTensorTypeProto* release_sparse_tensor_type();
  void set_allocated_sparse_tensor_type(::ONNXIR::TypeProto_SparseTensorTypeProto* sparse_tensor_type);

  // optional .ONNXIR.TypeProto.HandleTypeProto handle_type = 3;
  bool has_handle_type() const;
  void clear_handle_type();
  static const int kHandleTypeFieldNumber = 3;
  const ::ONNXIR::TypeProto_HandleTypeProto& handle_type() const;
  ::ONNXIR::TypeProto_HandleTypeProto* mutable_handle_type();
  ::ONNXIR::TypeProto_HandleTypeProto* release_handle_type();
  void set_allocated_handle_type(::ONNXIR::TypeProto_HandleTypeProto* handle_type);

  // optional .ONNXIR.TypeProto.TupleTypeProto tuple_type = 4;
  bool has_tuple_type() const;
  void clear_tuple_type();
  static const int kTupleTypeFieldNumber = 4;
  const ::ONNXIR::TypeProto_TupleTypeProto& tuple_type() const;
  ::ONNXIR::TypeProto_TupleTypeProto* mutable_tuple_type();
  ::ONNXIR::TypeProto_TupleTypeProto* release_tuple_type();
  void set_allocated_tuple_type(::ONNXIR::TypeProto_TupleTypeProto* tuple_type);

  // optional .ONNXIR.TypeProto.SeqTypeProto seq_type = 5;
  bool has_seq_type() const;
  void clear_seq_type();
  static const int kSeqTypeFieldNumber = 5;
  const ::ONNXIR::TypeProto_SeqTypeProto& seq_type() const;
  ::ONNXIR::TypeProto_SeqTypeProto* mutable_seq_type();
  ::ONNXIR::TypeProto_SeqTypeProto* release_seq_type();
  void set_allocated_seq_type(::ONNXIR::TypeProto_SeqTypeProto* seq_type);

  // optional .ONNXIR.TypeProto.MapTypeProto map_type = 6;
  bool has_map_type() const;
  void clear_map_type();
  static const int kMapTypeFieldNumber = 6;
  const ::ONNXIR::TypeProto_MapTypeProto& map_type() const;
  ::ONNXIR::TypeProto_MapTypeProto* mutable_map_type();
  ::ONNXIR::TypeProto_MapTypeProto* release_map_type();
  void set_allocated_map_type(::ONNXIR::TypeProto_MapTypeProto* map_type);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:ONNXIR.TypeProto)
 private:
  inline void set_has_tensor_type();
  inline void set_has_sparse_tensor_type();
  inline void set_has_handle_type();
  inline void set_has_tuple_type();
  inline void set_has_seq_type();
  inline void set_has_map_type();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union ValueUnion {
    ValueUnion() {}
    ::ONNXIR::TypeProto_TensorTypeProto* tensor_type_;
    ::ONNXIR::TypeProto_SparseTensorTypeProto* sparse_tensor_type_;
    ::ONNXIR::TypeProto_HandleTypeProto* handle_type_;
    ::ONNXIR::TypeProto_TupleTypeProto* tuple_type_;
    ::ONNXIR::TypeProto_SeqTypeProto* seq_type_;
    ::ONNXIR::TypeProto_MapTypeProto* map_type_;
  } value_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TypeProto> TypeProto_default_instance_;

// -------------------------------------------------------------------

class ValueProto_HandleProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ValueProto.HandleProto) */ {
 public:
  ValueProto_HandleProto();
  virtual ~ValueProto_HandleProto();

  ValueProto_HandleProto(const ValueProto_HandleProto& from);

  inline ValueProto_HandleProto& operator=(const ValueProto_HandleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueProto_HandleProto& default_instance();

  static const ValueProto_HandleProto* internal_default_instance();

  void Swap(ValueProto_HandleProto* other);

  // implements Message ----------------------------------------------

  inline ValueProto_HandleProto* New() const { return New(NULL); }

  ValueProto_HandleProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ValueProto_HandleProto& from);
  void MergeFrom(const ValueProto_HandleProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValueProto_HandleProto* other);
  void UnsafeMergeFrom(const ValueProto_HandleProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::int64 uid() const;
  void set_uid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ONNXIR.ValueProto.HandleProto)
 private:
  inline void set_has_uid();
  inline void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int64 uid_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ValueProto_HandleProto> ValueProto_HandleProto_default_instance_;

// -------------------------------------------------------------------

class ValueProto_TupleProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ValueProto.TupleProto) */ {
 public:
  ValueProto_TupleProto();
  virtual ~ValueProto_TupleProto();

  ValueProto_TupleProto(const ValueProto_TupleProto& from);

  inline ValueProto_TupleProto& operator=(const ValueProto_TupleProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueProto_TupleProto& default_instance();

  static const ValueProto_TupleProto* internal_default_instance();

  void Swap(ValueProto_TupleProto* other);

  // implements Message ----------------------------------------------

  inline ValueProto_TupleProto* New() const { return New(NULL); }

  ValueProto_TupleProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ValueProto_TupleProto& from);
  void MergeFrom(const ValueProto_TupleProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValueProto_TupleProto* other);
  void UnsafeMergeFrom(const ValueProto_TupleProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ONNXIR.ValueProto elems = 1;
  int elems_size() const;
  void clear_elems();
  static const int kElemsFieldNumber = 1;
  const ::ONNXIR::ValueProto& elems(int index) const;
  ::ONNXIR::ValueProto* mutable_elems(int index);
  ::ONNXIR::ValueProto* add_elems();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >*
      mutable_elems();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >&
      elems() const;

  // @@protoc_insertion_point(class_scope:ONNXIR.ValueProto.TupleProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto > elems_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ValueProto_TupleProto> ValueProto_TupleProto_default_instance_;

// -------------------------------------------------------------------

class ValueProto_SequenceProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ValueProto.SequenceProto) */ {
 public:
  ValueProto_SequenceProto();
  virtual ~ValueProto_SequenceProto();

  ValueProto_SequenceProto(const ValueProto_SequenceProto& from);

  inline ValueProto_SequenceProto& operator=(const ValueProto_SequenceProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueProto_SequenceProto& default_instance();

  static const ValueProto_SequenceProto* internal_default_instance();

  void Swap(ValueProto_SequenceProto* other);

  // implements Message ----------------------------------------------

  inline ValueProto_SequenceProto* New() const { return New(NULL); }

  ValueProto_SequenceProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ValueProto_SequenceProto& from);
  void MergeFrom(const ValueProto_SequenceProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValueProto_SequenceProto* other);
  void UnsafeMergeFrom(const ValueProto_SequenceProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ONNXIR.ValueProto elems = 1;
  int elems_size() const;
  void clear_elems();
  static const int kElemsFieldNumber = 1;
  const ::ONNXIR::ValueProto& elems(int index) const;
  ::ONNXIR::ValueProto* mutable_elems(int index);
  ::ONNXIR::ValueProto* add_elems();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >*
      mutable_elems();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >&
      elems() const;

  // @@protoc_insertion_point(class_scope:ONNXIR.ValueProto.SequenceProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto > elems_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ValueProto_SequenceProto> ValueProto_SequenceProto_default_instance_;

// -------------------------------------------------------------------

class ValueProto_MapProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ValueProto.MapProto) */ {
 public:
  ValueProto_MapProto();
  virtual ~ValueProto_MapProto();

  ValueProto_MapProto(const ValueProto_MapProto& from);

  inline ValueProto_MapProto& operator=(const ValueProto_MapProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueProto_MapProto& default_instance();

  static const ValueProto_MapProto* internal_default_instance();

  void Swap(ValueProto_MapProto* other);

  // implements Message ----------------------------------------------

  inline ValueProto_MapProto* New() const { return New(NULL); }

  ValueProto_MapProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ValueProto_MapProto& from);
  void MergeFrom(const ValueProto_MapProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValueProto_MapProto* other);
  void UnsafeMergeFrom(const ValueProto_MapProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .ONNXIR.TensorProto keys = 1;
  bool has_keys() const;
  void clear_keys();
  static const int kKeysFieldNumber = 1;
  const ::ONNXIR::TensorProto& keys() const;
  ::ONNXIR::TensorProto* mutable_keys();
  ::ONNXIR::TensorProto* release_keys();
  void set_allocated_keys(::ONNXIR::TensorProto* keys);

  // optional .ONNXIR.TensorProto values = 2;
  bool has_values() const;
  void clear_values();
  static const int kValuesFieldNumber = 2;
  const ::ONNXIR::TensorProto& values() const;
  ::ONNXIR::TensorProto* mutable_values();
  ::ONNXIR::TensorProto* release_values();
  void set_allocated_values(::ONNXIR::TensorProto* values);

  // @@protoc_insertion_point(class_scope:ONNXIR.ValueProto.MapProto)
 private:
  inline void set_has_keys();
  inline void clear_has_keys();
  inline void set_has_values();
  inline void clear_has_values();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::ONNXIR::TensorProto* keys_;
  ::ONNXIR::TensorProto* values_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ValueProto_MapProto> ValueProto_MapProto_default_instance_;

// -------------------------------------------------------------------

class ValueProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ValueProto) */ {
 public:
  ValueProto();
  virtual ~ValueProto();

  ValueProto(const ValueProto& from);

  inline ValueProto& operator=(const ValueProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ValueProto& default_instance();

  enum ValueCase {
    kDenseTensor = 1,
    kSparseTensor = 2,
    kHandle = 3,
    kTuple = 4,
    kSeq = 5,
    kMap = 6,
    VALUE_NOT_SET = 0,
  };

  static const ValueProto* internal_default_instance();

  void Swap(ValueProto* other);

  // implements Message ----------------------------------------------

  inline ValueProto* New() const { return New(NULL); }

  ValueProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ValueProto& from);
  void MergeFrom(const ValueProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ValueProto* other);
  void UnsafeMergeFrom(const ValueProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ValueProto_HandleProto HandleProto;
  typedef ValueProto_TupleProto TupleProto;
  typedef ValueProto_SequenceProto SequenceProto;
  typedef ValueProto_MapProto MapProto;

  // accessors -------------------------------------------------------

  // optional .ONNXIR.TensorProto dense_tensor = 1;
  bool has_dense_tensor() const;
  void clear_dense_tensor();
  static const int kDenseTensorFieldNumber = 1;
  const ::ONNXIR::TensorProto& dense_tensor() const;
  ::ONNXIR::TensorProto* mutable_dense_tensor();
  ::ONNXIR::TensorProto* release_dense_tensor();
  void set_allocated_dense_tensor(::ONNXIR::TensorProto* dense_tensor);

  // optional .ONNXIR.SparseTensorProto sparse_tensor = 2;
  bool has_sparse_tensor() const;
  void clear_sparse_tensor();
  static const int kSparseTensorFieldNumber = 2;
  const ::ONNXIR::SparseTensorProto& sparse_tensor() const;
  ::ONNXIR::SparseTensorProto* mutable_sparse_tensor();
  ::ONNXIR::SparseTensorProto* release_sparse_tensor();
  void set_allocated_sparse_tensor(::ONNXIR::SparseTensorProto* sparse_tensor);

  // optional .ONNXIR.ValueProto.HandleProto handle = 3;
  bool has_handle() const;
  void clear_handle();
  static const int kHandleFieldNumber = 3;
  const ::ONNXIR::ValueProto_HandleProto& handle() const;
  ::ONNXIR::ValueProto_HandleProto* mutable_handle();
  ::ONNXIR::ValueProto_HandleProto* release_handle();
  void set_allocated_handle(::ONNXIR::ValueProto_HandleProto* handle);

  // optional .ONNXIR.ValueProto.TupleProto tuple = 4;
  bool has_tuple() const;
  void clear_tuple();
  static const int kTupleFieldNumber = 4;
  const ::ONNXIR::ValueProto_TupleProto& tuple() const;
  ::ONNXIR::ValueProto_TupleProto* mutable_tuple();
  ::ONNXIR::ValueProto_TupleProto* release_tuple();
  void set_allocated_tuple(::ONNXIR::ValueProto_TupleProto* tuple);

  // optional .ONNXIR.ValueProto.SequenceProto seq = 5;
  bool has_seq() const;
  void clear_seq();
  static const int kSeqFieldNumber = 5;
  const ::ONNXIR::ValueProto_SequenceProto& seq() const;
  ::ONNXIR::ValueProto_SequenceProto* mutable_seq();
  ::ONNXIR::ValueProto_SequenceProto* release_seq();
  void set_allocated_seq(::ONNXIR::ValueProto_SequenceProto* seq);

  // optional .ONNXIR.ValueProto.MapProto map = 6;
  bool has_map() const;
  void clear_map();
  static const int kMapFieldNumber = 6;
  const ::ONNXIR::ValueProto_MapProto& map() const;
  ::ONNXIR::ValueProto_MapProto* mutable_map();
  ::ONNXIR::ValueProto_MapProto* release_map();
  void set_allocated_map(::ONNXIR::ValueProto_MapProto* map);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:ONNXIR.ValueProto)
 private:
  inline void set_has_dense_tensor();
  inline void set_has_sparse_tensor();
  inline void set_has_handle();
  inline void set_has_tuple();
  inline void set_has_seq();
  inline void set_has_map();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  union ValueUnion {
    ValueUnion() {}
    ::ONNXIR::TensorProto* dense_tensor_;
    ::ONNXIR::SparseTensorProto* sparse_tensor_;
    ::ONNXIR::ValueProto_HandleProto* handle_;
    ::ONNXIR::ValueProto_TupleProto* tuple_;
    ::ONNXIR::ValueProto_SequenceProto* seq_;
    ::ONNXIR::ValueProto_MapProto* map_;
  } value_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ValueProto> ValueProto_default_instance_;

// -------------------------------------------------------------------

class ParameterDeclProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.ParameterDeclProto) */ {
 public:
  ParameterDeclProto();
  virtual ~ParameterDeclProto();

  ParameterDeclProto(const ParameterDeclProto& from);

  inline ParameterDeclProto& operator=(const ParameterDeclProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ParameterDeclProto& default_instance();

  static const ParameterDeclProto* internal_default_instance();

  void Swap(ParameterDeclProto* other);

  // implements Message ----------------------------------------------

  inline ParameterDeclProto* New() const { return New(NULL); }

  ParameterDeclProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ParameterDeclProto& from);
  void MergeFrom(const ParameterDeclProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ParameterDeclProto* other);
  void UnsafeMergeFrom(const ParameterDeclProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .ONNXIR.TypeProto type = 2;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::ONNXIR::TypeProto& type() const;
  ::ONNXIR::TypeProto* mutable_type();
  ::ONNXIR::TypeProto* release_type();
  void set_allocated_type(::ONNXIR::TypeProto* type);

  // optional string doc_string = 3;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 3;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // @@protoc_insertion_point(class_scope:ONNXIR.ParameterDeclProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::ONNXIR::TypeProto* type_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ParameterDeclProto> ParameterDeclProto_default_instance_;

// -------------------------------------------------------------------

class FunctionDefProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.FunctionDefProto) */ {
 public:
  FunctionDefProto();
  virtual ~FunctionDefProto();

  FunctionDefProto(const FunctionDefProto& from);

  inline FunctionDefProto& operator=(const FunctionDefProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionDefProto& default_instance();

  static const FunctionDefProto* internal_default_instance();

  void Swap(FunctionDefProto* other);

  // implements Message ----------------------------------------------

  inline FunctionDefProto* New() const { return New(NULL); }

  FunctionDefProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionDefProto& from);
  void MergeFrom(const FunctionDefProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FunctionDefProto* other);
  void UnsafeMergeFrom(const FunctionDefProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .ONNXIR.ParameterDeclProto input_params = 2;
  int input_params_size() const;
  void clear_input_params();
  static const int kInputParamsFieldNumber = 2;
  const ::ONNXIR::ParameterDeclProto& input_params(int index) const;
  ::ONNXIR::ParameterDeclProto* mutable_input_params(int index);
  ::ONNXIR::ParameterDeclProto* add_input_params();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
      mutable_input_params();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
      input_params() const;

  // repeated .ONNXIR.ParameterDeclProto output_params = 3;
  int output_params_size() const;
  void clear_output_params();
  static const int kOutputParamsFieldNumber = 3;
  const ::ONNXIR::ParameterDeclProto& output_params(int index) const;
  ::ONNXIR::ParameterDeclProto* mutable_output_params(int index);
  ::ONNXIR::ParameterDeclProto* add_output_params();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
      mutable_output_params();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
      output_params() const;

  // repeated .ONNXIR.NodeProto node = 4;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 4;
  const ::ONNXIR::NodeProto& node(int index) const;
  ::ONNXIR::NodeProto* mutable_node(int index);
  ::ONNXIR::NodeProto* add_node();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >*
      mutable_node();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >&
      node() const;

  // repeated .ONNXIR.AttributeProto attr = 5;
  int attr_size() const;
  void clear_attr();
  static const int kAttrFieldNumber = 5;
  const ::ONNXIR::AttributeProto& attr(int index) const;
  ::ONNXIR::AttributeProto* mutable_attr(int index);
  ::ONNXIR::AttributeProto* add_attr();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >*
      mutable_attr();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >&
      attr() const;

  // @@protoc_insertion_point(class_scope:ONNXIR.FunctionDefProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto > input_params_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto > output_params_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto > node_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto > attr_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FunctionDefProto> FunctionDefProto_default_instance_;

// -------------------------------------------------------------------

class SignatureDeclProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.SignatureDeclProto) */ {
 public:
  SignatureDeclProto();
  virtual ~SignatureDeclProto();

  SignatureDeclProto(const SignatureDeclProto& from);

  inline SignatureDeclProto& operator=(const SignatureDeclProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SignatureDeclProto& default_instance();

  static const SignatureDeclProto* internal_default_instance();

  void Swap(SignatureDeclProto* other);

  // implements Message ----------------------------------------------

  inline SignatureDeclProto* New() const { return New(NULL); }

  SignatureDeclProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SignatureDeclProto& from);
  void MergeFrom(const SignatureDeclProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SignatureDeclProto* other);
  void UnsafeMergeFrom(const SignatureDeclProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ONNXIR.ParameterDeclProto input_params = 1;
  int input_params_size() const;
  void clear_input_params();
  static const int kInputParamsFieldNumber = 1;
  const ::ONNXIR::ParameterDeclProto& input_params(int index) const;
  ::ONNXIR::ParameterDeclProto* mutable_input_params(int index);
  ::ONNXIR::ParameterDeclProto* add_input_params();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
      mutable_input_params();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
      input_params() const;

  // repeated .ONNXIR.ParameterDeclProto output_params = 2;
  int output_params_size() const;
  void clear_output_params();
  static const int kOutputParamsFieldNumber = 2;
  const ::ONNXIR::ParameterDeclProto& output_params(int index) const;
  ::ONNXIR::ParameterDeclProto* mutable_output_params(int index);
  ::ONNXIR::ParameterDeclProto* add_output_params();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
      mutable_output_params();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
      output_params() const;

  // repeated .ONNXIR.ParameterDeclProto input_attributes = 3;
  int input_attributes_size() const;
  void clear_input_attributes();
  static const int kInputAttributesFieldNumber = 3;
  const ::ONNXIR::ParameterDeclProto& input_attributes(int index) const;
  ::ONNXIR::ParameterDeclProto* mutable_input_attributes(int index);
  ::ONNXIR::ParameterDeclProto* add_input_attributes();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
      mutable_input_attributes();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
      input_attributes() const;

  // optional string doc_string = 4;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 4;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // @@protoc_insertion_point(class_scope:ONNXIR.SignatureDeclProto)
 private:
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto > input_params_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto > output_params_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto > input_attributes_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SignatureDeclProto> SignatureDeclProto_default_instance_;

// -------------------------------------------------------------------

class OperatorDeclProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.OperatorDeclProto) */ {
 public:
  OperatorDeclProto();
  virtual ~OperatorDeclProto();

  OperatorDeclProto(const OperatorDeclProto& from);

  inline OperatorDeclProto& operator=(const OperatorDeclProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorDeclProto& default_instance();

  static const OperatorDeclProto* internal_default_instance();

  void Swap(OperatorDeclProto* other);

  // implements Message ----------------------------------------------

  inline OperatorDeclProto* New() const { return New(NULL); }

  OperatorDeclProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperatorDeclProto& from);
  void MergeFrom(const OperatorDeclProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperatorDeclProto* other);
  void UnsafeMergeFrom(const OperatorDeclProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // repeated .ONNXIR.SignatureDeclProto signature = 2;
  int signature_size() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::ONNXIR::SignatureDeclProto& signature(int index) const;
  ::ONNXIR::SignatureDeclProto* mutable_signature(int index);
  ::ONNXIR::SignatureDeclProto* add_signature();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::SignatureDeclProto >*
      mutable_signature();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::SignatureDeclProto >&
      signature() const;

  // optional string doc_string = 3;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 3;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // @@protoc_insertion_point(class_scope:ONNXIR.OperatorDeclProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::SignatureDeclProto > signature_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperatorDeclProto> OperatorDeclProto_default_instance_;

// -------------------------------------------------------------------

class LibraryProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ONNXIR.LibraryProto) */ {
 public:
  LibraryProto();
  virtual ~LibraryProto();

  LibraryProto(const LibraryProto& from);

  inline LibraryProto& operator=(const LibraryProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LibraryProto& default_instance();

  static const LibraryProto* internal_default_instance();

  void Swap(LibraryProto* other);

  // implements Message ----------------------------------------------

  inline LibraryProto* New() const { return New(NULL); }

  LibraryProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LibraryProto& from);
  void MergeFrom(const LibraryProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LibraryProto* other);
  void UnsafeMergeFrom(const LibraryProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 ir_version = 1;
  bool has_ir_version() const;
  void clear_ir_version();
  static const int kIrVersionFieldNumber = 1;
  ::google::protobuf::int64 ir_version() const;
  void set_ir_version(::google::protobuf::int64 value);

  // optional int64 producer_version = 2;
  bool has_producer_version() const;
  void clear_producer_version();
  static const int kProducerVersionFieldNumber = 2;
  ::google::protobuf::int64 producer_version() const;
  void set_producer_version(::google::protobuf::int64 value);

  // optional string producer_tag = 3;
  bool has_producer_tag() const;
  void clear_producer_tag();
  static const int kProducerTagFieldNumber = 3;
  const ::std::string& producer_tag() const;
  void set_producer_tag(const ::std::string& value);
  void set_producer_tag(const char* value);
  void set_producer_tag(const char* value, size_t size);
  ::std::string* mutable_producer_tag();
  ::std::string* release_producer_tag();
  void set_allocated_producer_tag(::std::string* producer_tag);

  // optional int64 model_version = 4;
  bool has_model_version() const;
  void clear_model_version();
  static const int kModelVersionFieldNumber = 4;
  ::google::protobuf::int64 model_version() const;
  void set_model_version(::google::protobuf::int64 value);

  // optional string model_author = 5;
  bool has_model_author() const;
  void clear_model_author();
  static const int kModelAuthorFieldNumber = 5;
  const ::std::string& model_author() const;
  void set_model_author(const ::std::string& value);
  void set_model_author(const char* value);
  void set_model_author(const char* value, size_t size);
  ::std::string* mutable_model_author();
  ::std::string* release_model_author();
  void set_allocated_model_author(::std::string* model_author);

  // optional string model_license = 6;
  bool has_model_license() const;
  void clear_model_license();
  static const int kModelLicenseFieldNumber = 6;
  const ::std::string& model_license() const;
  void set_model_license(const ::std::string& value);
  void set_model_license(const char* value);
  void set_model_license(const char* value, size_t size);
  ::std::string* mutable_model_license();
  ::std::string* release_model_license();
  void set_allocated_model_license(::std::string* model_license);

  // optional string name = 7;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 7;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string domain = 8;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 8;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional string doc_string = 9;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 9;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // repeated .ONNXIR.OperatorDeclProto operator = 10;
  int operator__size() const;
  void clear_operator_();
  static const int kOperatorFieldNumber = 10;
  const ::ONNXIR::OperatorDeclProto& operator_(int index) const;
  ::ONNXIR::OperatorDeclProto* mutable_operator_(int index);
  ::ONNXIR::OperatorDeclProto* add_operator_();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >*
      mutable_operator_();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >&
      operator_() const;

  // repeated .ONNXIR.FunctionDefProto function = 11;
  int function_size() const;
  void clear_function();
  static const int kFunctionFieldNumber = 11;
  const ::ONNXIR::FunctionDefProto& function(int index) const;
  ::ONNXIR::FunctionDefProto* mutable_function(int index);
  ::ONNXIR::FunctionDefProto* add_function();
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >*
      mutable_function();
  const ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >&
      function() const;

  // repeated string imported_libraries = 12;
  int imported_libraries_size() const;
  void clear_imported_libraries();
  static const int kImportedLibrariesFieldNumber = 12;
  const ::std::string& imported_libraries(int index) const;
  ::std::string* mutable_imported_libraries(int index);
  void set_imported_libraries(int index, const ::std::string& value);
  void set_imported_libraries(int index, const char* value);
  void set_imported_libraries(int index, const char* value, size_t size);
  ::std::string* add_imported_libraries();
  void add_imported_libraries(const ::std::string& value);
  void add_imported_libraries(const char* value);
  void add_imported_libraries(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& imported_libraries() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_imported_libraries();

  // @@protoc_insertion_point(class_scope:ONNXIR.LibraryProto)
 private:
  inline void set_has_ir_version();
  inline void clear_has_ir_version();
  inline void set_has_producer_version();
  inline void clear_has_producer_version();
  inline void set_has_producer_tag();
  inline void clear_has_producer_tag();
  inline void set_has_model_version();
  inline void clear_has_model_version();
  inline void set_has_model_author();
  inline void clear_has_model_author();
  inline void set_has_model_license();
  inline void clear_has_model_license();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_domain();
  inline void clear_has_domain();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto > operator__;
  ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto > function_;
  ::google::protobuf::RepeatedPtrField< ::std::string> imported_libraries_;
  ::google::protobuf::internal::ArenaStringPtr producer_tag_;
  ::google::protobuf::internal::ArenaStringPtr model_author_;
  ::google::protobuf::internal::ArenaStringPtr model_license_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::google::protobuf::int64 ir_version_;
  ::google::protobuf::int64 producer_version_;
  ::google::protobuf::int64 model_version_;
  friend void  protobuf_InitDefaults_graph_2eproto_impl();
  friend void  protobuf_AddDesc_graph_2eproto_impl();
  friend void protobuf_AssignDesc_graph_2eproto();
  friend void protobuf_ShutdownFile_graph_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LibraryProto> LibraryProto_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// AttributeProto

// optional string name = 1;
inline bool AttributeProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AttributeProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AttributeProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AttributeProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& AttributeProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.name)
}
inline void AttributeProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.AttributeProto.name)
}
inline void AttributeProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.AttributeProto.name)
}
inline ::std::string* AttributeProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttributeProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.name)
}

// optional float f = 2;
inline bool AttributeProto::has_f() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AttributeProto::set_has_f() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AttributeProto::clear_has_f() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AttributeProto::clear_f() {
  f_ = 0;
  clear_has_f();
}
inline float AttributeProto::f() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.f)
  return f_;
}
inline void AttributeProto::set_f(float value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.f)
}

// optional int64 i = 3;
inline bool AttributeProto::has_i() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AttributeProto::set_has_i() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AttributeProto::clear_has_i() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AttributeProto::clear_i() {
  i_ = GOOGLE_LONGLONG(0);
  clear_has_i();
}
inline ::google::protobuf::int64 AttributeProto::i() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.i)
  return i_;
}
inline void AttributeProto::set_i(::google::protobuf::int64 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.i)
}

// optional bytes s = 4;
inline bool AttributeProto::has_s() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AttributeProto::set_has_s() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AttributeProto::clear_has_s() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AttributeProto::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
inline const ::std::string& AttributeProto::s() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeProto::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.s)
}
inline void AttributeProto::set_s(const char* value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.AttributeProto.s)
}
inline void AttributeProto::set_s(const void* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.AttributeProto.s)
}
inline ::std::string* AttributeProto::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AttributeProto::release_s() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AttributeProto::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.s)
}

// optional .ONNXIR.TensorProto t = 5;
inline bool AttributeProto::has_t() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AttributeProto::set_has_t() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AttributeProto::clear_has_t() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AttributeProto::clear_t() {
  if (t_ != NULL) t_->::ONNXIR::TensorProto::Clear();
  clear_has_t();
}
inline const ::ONNXIR::TensorProto& AttributeProto::t() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.t)
  return t_ != NULL ? *t_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
inline ::ONNXIR::TensorProto* AttributeProto::mutable_t() {
  set_has_t();
  if (t_ == NULL) {
    t_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.t)
  return t_;
}
inline ::ONNXIR::TensorProto* AttributeProto::release_t() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.t)
  clear_has_t();
  ::ONNXIR::TensorProto* temp = t_;
  t_ = NULL;
  return temp;
}
inline void AttributeProto::set_allocated_t(::ONNXIR::TensorProto* t) {
  delete t_;
  t_ = t;
  if (t) {
    set_has_t();
  } else {
    clear_has_t();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.t)
}

// optional .ONNXIR.GraphProto g = 6;
inline bool AttributeProto::has_g() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AttributeProto::set_has_g() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AttributeProto::clear_has_g() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AttributeProto::clear_g() {
  if (g_ != NULL) g_->::ONNXIR::GraphProto::Clear();
  clear_has_g();
}
inline const ::ONNXIR::GraphProto& AttributeProto::g() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.g)
  return g_ != NULL ? *g_
                         : *::ONNXIR::GraphProto::internal_default_instance();
}
inline ::ONNXIR::GraphProto* AttributeProto::mutable_g() {
  set_has_g();
  if (g_ == NULL) {
    g_ = new ::ONNXIR::GraphProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.g)
  return g_;
}
inline ::ONNXIR::GraphProto* AttributeProto::release_g() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.g)
  clear_has_g();
  ::ONNXIR::GraphProto* temp = g_;
  g_ = NULL;
  return temp;
}
inline void AttributeProto::set_allocated_g(::ONNXIR::GraphProto* g) {
  delete g_;
  g_ = g;
  if (g) {
    set_has_g();
  } else {
    clear_has_g();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.g)
}

// repeated float floats = 7;
inline int AttributeProto::floats_size() const {
  return floats_.size();
}
inline void AttributeProto::clear_floats() {
  floats_.Clear();
}
inline float AttributeProto::floats(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.floats)
  return floats_.Get(index);
}
inline void AttributeProto::set_floats(int index, float value) {
  floats_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.floats)
}
inline void AttributeProto::add_floats(float value) {
  floats_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.floats)
}
inline const ::google::protobuf::RepeatedField< float >&
AttributeProto::floats() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.floats)
  return floats_;
}
inline ::google::protobuf::RepeatedField< float >*
AttributeProto::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.floats)
  return &floats_;
}

// repeated int64 ints = 8;
inline int AttributeProto::ints_size() const {
  return ints_.size();
}
inline void AttributeProto::clear_ints() {
  ints_.Clear();
}
inline ::google::protobuf::int64 AttributeProto::ints(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.ints)
  return ints_.Get(index);
}
inline void AttributeProto::set_ints(int index, ::google::protobuf::int64 value) {
  ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.ints)
}
inline void AttributeProto::add_ints(::google::protobuf::int64 value) {
  ints_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.ints)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AttributeProto::ints() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.ints)
  return ints_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AttributeProto::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.ints)
  return &ints_;
}

// repeated bytes strings = 9;
inline int AttributeProto::strings_size() const {
  return strings_.size();
}
inline void AttributeProto::clear_strings() {
  strings_.Clear();
}
inline const ::std::string& AttributeProto::strings(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.strings)
  return strings_.Get(index);
}
inline ::std::string* AttributeProto::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.strings)
  return strings_.Mutable(index);
}
inline void AttributeProto::set_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.strings)
  strings_.Mutable(index)->assign(value);
}
inline void AttributeProto::set_strings(int index, const char* value) {
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.AttributeProto.strings)
}
inline void AttributeProto::set_strings(int index, const void* value, size_t size) {
  strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.AttributeProto.strings)
}
inline ::std::string* AttributeProto::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.AttributeProto.strings)
  return strings_.Add();
}
inline void AttributeProto::add_strings(const ::std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.strings)
}
inline void AttributeProto::add_strings(const char* value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.AttributeProto.strings)
}
inline void AttributeProto::add_strings(const void* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.AttributeProto.strings)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AttributeProto::strings() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.strings)
  return strings_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AttributeProto::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.strings)
  return &strings_;
}

// repeated .ONNXIR.TensorProto tensors = 10;
inline int AttributeProto::tensors_size() const {
  return tensors_.size();
}
inline void AttributeProto::clear_tensors() {
  tensors_.Clear();
}
inline const ::ONNXIR::TensorProto& AttributeProto::tensors(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.tensors)
  return tensors_.Get(index);
}
inline ::ONNXIR::TensorProto* AttributeProto::mutable_tensors(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.tensors)
  return tensors_.Mutable(index);
}
inline ::ONNXIR::TensorProto* AttributeProto::add_tensors() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.tensors)
  return tensors_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >*
AttributeProto::mutable_tensors() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.tensors)
  return &tensors_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >&
AttributeProto::tensors() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.tensors)
  return tensors_;
}

// repeated .ONNXIR.GraphProto graphs = 11;
inline int AttributeProto::graphs_size() const {
  return graphs_.size();
}
inline void AttributeProto::clear_graphs() {
  graphs_.Clear();
}
inline const ::ONNXIR::GraphProto& AttributeProto::graphs(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.graphs)
  return graphs_.Get(index);
}
inline ::ONNXIR::GraphProto* AttributeProto::mutable_graphs(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.graphs)
  return graphs_.Mutable(index);
}
inline ::ONNXIR::GraphProto* AttributeProto::add_graphs() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.graphs)
  return graphs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::GraphProto >*
AttributeProto::mutable_graphs() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.graphs)
  return &graphs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::GraphProto >&
AttributeProto::graphs() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.graphs)
  return graphs_;
}

// optional .ONNXIR.TypeProto type = 51;
inline bool AttributeProto::has_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AttributeProto::set_has_type() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AttributeProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AttributeProto::clear_type() {
  if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
  clear_has_type();
}
inline const ::ONNXIR::TypeProto& AttributeProto::type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.type)
  return type_ != NULL ? *type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
inline ::ONNXIR::TypeProto* AttributeProto::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.type)
  return type_;
}
inline ::ONNXIR::TypeProto* AttributeProto::release_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.type)
  clear_has_type();
  ::ONNXIR::TypeProto* temp = type_;
  type_ = NULL;
  return temp;
}
inline void AttributeProto::set_allocated_type(::ONNXIR::TypeProto* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.type)
}

// repeated .ONNXIR.TypeProto types = 52;
inline int AttributeProto::types_size() const {
  return types_.size();
}
inline void AttributeProto::clear_types() {
  types_.Clear();
}
inline const ::ONNXIR::TypeProto& AttributeProto::types(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.types)
  return types_.Get(index);
}
inline ::ONNXIR::TypeProto* AttributeProto::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.types)
  return types_.Mutable(index);
}
inline ::ONNXIR::TypeProto* AttributeProto::add_types() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.types)
  return types_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >*
AttributeProto::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.types)
  return &types_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >&
AttributeProto::types() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.types)
  return types_;
}

// optional .ONNXIR.TypeProto.TensorShapeProto shape = 53;
inline bool AttributeProto::has_shape() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AttributeProto::set_has_shape() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AttributeProto::clear_has_shape() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AttributeProto::clear_shape() {
  if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
  clear_has_shape();
}
inline const ::ONNXIR::TypeProto_TensorShapeProto& AttributeProto::shape() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.shape)
  return shape_ != NULL ? *shape_
                         : *::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance();
}
inline ::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) {
    shape_ = new ::ONNXIR::TypeProto_TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.shape)
  return shape_;
}
inline ::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::release_shape() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.shape)
  clear_has_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
inline void AttributeProto::set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.shape)
}

// repeated .ONNXIR.TypeProto.TensorShapeProto shapes = 54;
inline int AttributeProto::shapes_size() const {
  return shapes_.size();
}
inline void AttributeProto::clear_shapes() {
  shapes_.Clear();
}
inline const ::ONNXIR::TypeProto_TensorShapeProto& AttributeProto::shapes(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.shapes)
  return shapes_.Get(index);
}
inline ::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::mutable_shapes(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.shapes)
  return shapes_.Mutable(index);
}
inline ::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::add_shapes() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.shapes)
  return shapes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto >*
AttributeProto::mutable_shapes() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.shapes)
  return &shapes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto >&
AttributeProto::shapes() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.shapes)
  return shapes_;
}

inline const AttributeProto* AttributeProto::internal_default_instance() {
  return &AttributeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueInfoProto

// optional string name = 1;
inline bool ValueInfoProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ValueInfoProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ValueInfoProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ValueInfoProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ValueInfoProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueInfoProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValueInfoProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ValueInfoProto.name)
}
inline void ValueInfoProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ValueInfoProto.name)
}
inline void ValueInfoProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ValueInfoProto.name)
}
inline ::std::string* ValueInfoProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueInfoProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ValueInfoProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueInfoProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ValueInfoProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueInfoProto.name)
}

// optional .ONNXIR.TypeProto type = 2;
inline bool ValueInfoProto::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ValueInfoProto::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ValueInfoProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ValueInfoProto::clear_type() {
  if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
  clear_has_type();
}
inline const ::ONNXIR::TypeProto& ValueInfoProto::type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueInfoProto.type)
  return type_ != NULL ? *type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
inline ::ONNXIR::TypeProto* ValueInfoProto::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueInfoProto.type)
  return type_;
}
inline ::ONNXIR::TypeProto* ValueInfoProto::release_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueInfoProto.type)
  clear_has_type();
  ::ONNXIR::TypeProto* temp = type_;
  type_ = NULL;
  return temp;
}
inline void ValueInfoProto::set_allocated_type(::ONNXIR::TypeProto* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueInfoProto.type)
}

inline const ValueInfoProto* ValueInfoProto::internal_default_instance() {
  return &ValueInfoProto_default_instance_.get();
}
// -------------------------------------------------------------------

// NodeProto

// repeated string input = 1;
inline int NodeProto::input_size() const {
  return input_.size();
}
inline void NodeProto::clear_input() {
  input_.Clear();
}
inline const ::std::string& NodeProto::input(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.input)
  return input_.Get(index);
}
inline ::std::string* NodeProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.input)
  return input_.Mutable(index);
}
inline void NodeProto::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.input)
  input_.Mutable(index)->assign(value);
}
inline void NodeProto::set_input(int index, const char* value) {
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.input)
}
inline void NodeProto::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.input)
}
inline ::std::string* NodeProto::add_input() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.NodeProto.input)
  return input_.Add();
}
inline void NodeProto::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.input)
}
inline void NodeProto::add_input(const char* value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.NodeProto.input)
}
inline void NodeProto::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.NodeProto.input)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::input() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.input)
  return input_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.input)
  return &input_;
}

// repeated string output = 2;
inline int NodeProto::output_size() const {
  return output_.size();
}
inline void NodeProto::clear_output() {
  output_.Clear();
}
inline const ::std::string& NodeProto::output(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.output)
  return output_.Get(index);
}
inline ::std::string* NodeProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.output)
  return output_.Mutable(index);
}
inline void NodeProto::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.output)
  output_.Mutable(index)->assign(value);
}
inline void NodeProto::set_output(int index, const char* value) {
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.output)
}
inline void NodeProto::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.output)
}
inline ::std::string* NodeProto::add_output() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.NodeProto.output)
  return output_.Add();
}
inline void NodeProto::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.output)
}
inline void NodeProto::add_output(const char* value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.NodeProto.output)
}
inline void NodeProto::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.NodeProto.output)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::output() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.output)
  return output_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.output)
  return &output_;
}

// optional string name = 3;
inline bool NodeProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NodeProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NodeProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NodeProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& NodeProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.name)
}
inline void NodeProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.name)
}
inline void NodeProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.name)
}
inline ::std::string* NodeProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.NodeProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.NodeProto.name)
}

// optional string op_type = 4;
inline bool NodeProto::has_op_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void NodeProto::set_has_op_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void NodeProto::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void NodeProto::clear_op_type() {
  op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_type();
}
inline const ::std::string& NodeProto::op_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.op_type)
  return op_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_op_type(const ::std::string& value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.op_type)
}
inline void NodeProto::set_op_type(const char* value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.op_type)
}
inline void NodeProto::set_op_type(const char* value, size_t size) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.op_type)
}
inline ::std::string* NodeProto::mutable_op_type() {
  set_has_op_type();
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.op_type)
  return op_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeProto::release_op_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.NodeProto.op_type)
  clear_has_op_type();
  return op_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_allocated_op_type(::std::string* op_type) {
  if (op_type != NULL) {
    set_has_op_type();
  } else {
    clear_has_op_type();
  }
  op_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_type);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.NodeProto.op_type)
}

// repeated .ONNXIR.AttributeProto attribute = 5;
inline int NodeProto::attribute_size() const {
  return attribute_.size();
}
inline void NodeProto::clear_attribute() {
  attribute_.Clear();
}
inline const ::ONNXIR::AttributeProto& NodeProto::attribute(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.attribute)
  return attribute_.Get(index);
}
inline ::ONNXIR::AttributeProto* NodeProto::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.attribute)
  return attribute_.Mutable(index);
}
inline ::ONNXIR::AttributeProto* NodeProto::add_attribute() {
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.attribute)
  return attribute_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >*
NodeProto::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.attribute)
  return &attribute_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >&
NodeProto::attribute() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.attribute)
  return attribute_;
}

// optional string doc_string = 6;
inline bool NodeProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void NodeProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000020u;
}
inline void NodeProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void NodeProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& NodeProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.doc_string)
}
inline void NodeProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.doc_string)
}
inline void NodeProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.doc_string)
}
inline ::std::string* NodeProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NodeProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.NodeProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NodeProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.NodeProto.doc_string)
}

// repeated int32 input_arg_count = 50;
inline int NodeProto::input_arg_count_size() const {
  return input_arg_count_.size();
}
inline void NodeProto::clear_input_arg_count() {
  input_arg_count_.Clear();
}
inline ::google::protobuf::int32 NodeProto::input_arg_count(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.input_arg_count)
  return input_arg_count_.Get(index);
}
inline void NodeProto::set_input_arg_count(int index, ::google::protobuf::int32 value) {
  input_arg_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.input_arg_count)
}
inline void NodeProto::add_input_arg_count(::google::protobuf::int32 value) {
  input_arg_count_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.input_arg_count)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NodeProto::input_arg_count() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.input_arg_count)
  return input_arg_count_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NodeProto::mutable_input_arg_count() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.input_arg_count)
  return &input_arg_count_;
}

// repeated string control_input = 51;
inline int NodeProto::control_input_size() const {
  return control_input_.size();
}
inline void NodeProto::clear_control_input() {
  control_input_.Clear();
}
inline const ::std::string& NodeProto::control_input(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.control_input)
  return control_input_.Get(index);
}
inline ::std::string* NodeProto::mutable_control_input(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.control_input)
  return control_input_.Mutable(index);
}
inline void NodeProto::set_control_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.control_input)
  control_input_.Mutable(index)->assign(value);
}
inline void NodeProto::set_control_input(int index, const char* value) {
  control_input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.control_input)
}
inline void NodeProto::set_control_input(int index, const char* value, size_t size) {
  control_input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.control_input)
}
inline ::std::string* NodeProto::add_control_input() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.NodeProto.control_input)
  return control_input_.Add();
}
inline void NodeProto::add_control_input(const ::std::string& value) {
  control_input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.control_input)
}
inline void NodeProto::add_control_input(const char* value) {
  control_input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.NodeProto.control_input)
}
inline void NodeProto::add_control_input(const char* value, size_t size) {
  control_input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.NodeProto.control_input)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::control_input() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.control_input)
  return control_input_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_control_input() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.control_input)
  return &control_input_;
}

inline const NodeProto* NodeProto::internal_default_instance() {
  return &NodeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ModelProto

// optional int64 ir_version = 1;
inline bool ModelProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ModelProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ModelProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ModelProto::clear_ir_version() {
  ir_version_ = GOOGLE_LONGLONG(0);
  clear_has_ir_version();
}
inline ::google::protobuf::int64 ModelProto::ir_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.ir_version)
  return ir_version_;
}
inline void ModelProto::set_ir_version(::google::protobuf::int64 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.ir_version)
}

// optional string producer_name = 2;
inline bool ModelProto::has_producer_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ModelProto::set_has_producer_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ModelProto::clear_has_producer_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ModelProto::clear_producer_name() {
  producer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_name();
}
inline const ::std::string& ModelProto::producer_name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.producer_name)
  return producer_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_producer_name(const ::std::string& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.producer_name)
}
inline void ModelProto::set_producer_name(const char* value) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.producer_name)
}
inline void ModelProto::set_producer_name(const char* value, size_t size) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.producer_name)
}
inline ::std::string* ModelProto::mutable_producer_name() {
  set_has_producer_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.producer_name)
  return producer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelProto::release_producer_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.producer_name)
  clear_has_producer_name();
  return producer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_allocated_producer_name(::std::string* producer_name) {
  if (producer_name != NULL) {
    set_has_producer_name();
  } else {
    clear_has_producer_name();
  }
  producer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.producer_name)
}

// optional string producer_version = 3;
inline bool ModelProto::has_producer_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ModelProto::set_has_producer_version() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ModelProto::clear_has_producer_version() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ModelProto::clear_producer_version() {
  producer_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_version();
}
inline const ::std::string& ModelProto::producer_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.producer_version)
  return producer_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_producer_version(const ::std::string& value) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.producer_version)
}
inline void ModelProto::set_producer_version(const char* value) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.producer_version)
}
inline void ModelProto::set_producer_version(const char* value, size_t size) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.producer_version)
}
inline ::std::string* ModelProto::mutable_producer_version() {
  set_has_producer_version();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.producer_version)
  return producer_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelProto::release_producer_version() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.producer_version)
  clear_has_producer_version();
  return producer_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_allocated_producer_version(::std::string* producer_version) {
  if (producer_version != NULL) {
    set_has_producer_version();
  } else {
    clear_has_producer_version();
  }
  producer_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_version);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.producer_version)
}

// optional string domain = 4;
inline bool ModelProto::has_domain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ModelProto::set_has_domain() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ModelProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ModelProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
inline const ::std::string& ModelProto::domain() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.domain)
}
inline void ModelProto::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.domain)
}
inline void ModelProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.domain)
}
inline ::std::string* ModelProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelProto::release_domain() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.domain)
}

// optional int64 model_version = 5;
inline bool ModelProto::has_model_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ModelProto::set_has_model_version() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ModelProto::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ModelProto::clear_model_version() {
  model_version_ = GOOGLE_LONGLONG(0);
  clear_has_model_version();
}
inline ::google::protobuf::int64 ModelProto::model_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.model_version)
  return model_version_;
}
inline void ModelProto::set_model_version(::google::protobuf::int64 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.model_version)
}

// optional string doc_string = 6;
inline bool ModelProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ModelProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ModelProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ModelProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& ModelProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.doc_string)
}
inline void ModelProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.doc_string)
}
inline void ModelProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.doc_string)
}
inline ::std::string* ModelProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.doc_string)
}

// optional .ONNXIR.GraphProto graph = 7;
inline bool ModelProto::has_graph() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ModelProto::set_has_graph() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ModelProto::clear_has_graph() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ModelProto::clear_graph() {
  if (graph_ != NULL) graph_->::ONNXIR::GraphProto::Clear();
  clear_has_graph();
}
inline const ::ONNXIR::GraphProto& ModelProto::graph() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.graph)
  return graph_ != NULL ? *graph_
                         : *::ONNXIR::GraphProto::internal_default_instance();
}
inline ::ONNXIR::GraphProto* ModelProto::mutable_graph() {
  set_has_graph();
  if (graph_ == NULL) {
    graph_ = new ::ONNXIR::GraphProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.graph)
  return graph_;
}
inline ::ONNXIR::GraphProto* ModelProto::release_graph() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.graph)
  clear_has_graph();
  ::ONNXIR::GraphProto* temp = graph_;
  graph_ = NULL;
  return temp;
}
inline void ModelProto::set_allocated_graph(::ONNXIR::GraphProto* graph) {
  delete graph_;
  graph_ = graph;
  if (graph) {
    set_has_graph();
  } else {
    clear_has_graph();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.graph)
}

// optional string model_author = 50;
inline bool ModelProto::has_model_author() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ModelProto::set_has_model_author() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ModelProto::clear_has_model_author() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ModelProto::clear_model_author() {
  model_author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_author();
}
inline const ::std::string& ModelProto::model_author() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.model_author)
  return model_author_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_model_author(const ::std::string& value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.model_author)
}
inline void ModelProto::set_model_author(const char* value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.model_author)
}
inline void ModelProto::set_model_author(const char* value, size_t size) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.model_author)
}
inline ::std::string* ModelProto::mutable_model_author() {
  set_has_model_author();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.model_author)
  return model_author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelProto::release_model_author() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.model_author)
  clear_has_model_author();
  return model_author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_allocated_model_author(::std::string* model_author) {
  if (model_author != NULL) {
    set_has_model_author();
  } else {
    clear_has_model_author();
  }
  model_author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_author);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.model_author)
}

// optional string model_license = 51;
inline bool ModelProto::has_model_license() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ModelProto::set_has_model_license() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ModelProto::clear_has_model_license() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ModelProto::clear_model_license() {
  model_license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_license();
}
inline const ::std::string& ModelProto::model_license() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.model_license)
  return model_license_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_model_license(const ::std::string& value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.model_license)
}
inline void ModelProto::set_model_license(const char* value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.model_license)
}
inline void ModelProto::set_model_license(const char* value, size_t size) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.model_license)
}
inline ::std::string* ModelProto::mutable_model_license() {
  set_has_model_license();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.model_license)
  return model_license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ModelProto::release_model_license() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.model_license)
  clear_has_model_license();
  return model_license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ModelProto::set_allocated_model_license(::std::string* model_license) {
  if (model_license != NULL) {
    set_has_model_license();
  } else {
    clear_has_model_license();
  }
  model_license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_license);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.model_license)
}

inline const ModelProto* ModelProto::internal_default_instance() {
  return &ModelProto_default_instance_.get();
}
// -------------------------------------------------------------------

// GraphProto

// repeated .ONNXIR.NodeProto node = 1;
inline int GraphProto::node_size() const {
  return node_.size();
}
inline void GraphProto::clear_node() {
  node_.Clear();
}
inline const ::ONNXIR::NodeProto& GraphProto::node(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.node)
  return node_.Get(index);
}
inline ::ONNXIR::NodeProto* GraphProto::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.node)
  return node_.Mutable(index);
}
inline ::ONNXIR::NodeProto* GraphProto::add_node() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.node)
  return node_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >*
GraphProto::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.node)
  return &node_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >&
GraphProto::node() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.node)
  return node_;
}

// optional string name = 2;
inline bool GraphProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GraphProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GraphProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GraphProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& GraphProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GraphProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.GraphProto.name)
}
inline void GraphProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.GraphProto.name)
}
inline void GraphProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.GraphProto.name)
}
inline ::std::string* GraphProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GraphProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.GraphProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GraphProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.GraphProto.name)
}

// repeated .ONNXIR.TensorProto initializer = 5;
inline int GraphProto::initializer_size() const {
  return initializer_.size();
}
inline void GraphProto::clear_initializer() {
  initializer_.Clear();
}
inline const ::ONNXIR::TensorProto& GraphProto::initializer(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.initializer)
  return initializer_.Get(index);
}
inline ::ONNXIR::TensorProto* GraphProto::mutable_initializer(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.initializer)
  return initializer_.Mutable(index);
}
inline ::ONNXIR::TensorProto* GraphProto::add_initializer() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.initializer)
  return initializer_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >*
GraphProto::mutable_initializer() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.initializer)
  return &initializer_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >&
GraphProto::initializer() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.initializer)
  return initializer_;
}

// optional string doc_string = 10;
inline bool GraphProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GraphProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GraphProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GraphProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& GraphProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GraphProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.GraphProto.doc_string)
}
inline void GraphProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.GraphProto.doc_string)
}
inline void GraphProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.GraphProto.doc_string)
}
inline ::std::string* GraphProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GraphProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.GraphProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GraphProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.GraphProto.doc_string)
}

// repeated .ONNXIR.ValueInfoProto input = 11;
inline int GraphProto::input_size() const {
  return input_.size();
}
inline void GraphProto::clear_input() {
  input_.Clear();
}
inline const ::ONNXIR::ValueInfoProto& GraphProto::input(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.input)
  return input_.Get(index);
}
inline ::ONNXIR::ValueInfoProto* GraphProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.input)
  return input_.Mutable(index);
}
inline ::ONNXIR::ValueInfoProto* GraphProto::add_input() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.input)
  return input_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
GraphProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.input)
  return &input_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
GraphProto::input() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.input)
  return input_;
}

// repeated .ONNXIR.ValueInfoProto output = 12;
inline int GraphProto::output_size() const {
  return output_.size();
}
inline void GraphProto::clear_output() {
  output_.Clear();
}
inline const ::ONNXIR::ValueInfoProto& GraphProto::output(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.output)
  return output_.Get(index);
}
inline ::ONNXIR::ValueInfoProto* GraphProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.output)
  return output_.Mutable(index);
}
inline ::ONNXIR::ValueInfoProto* GraphProto::add_output() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.output)
  return output_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
GraphProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.output)
  return &output_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
GraphProto::output() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.output)
  return output_;
}

// repeated .ONNXIR.ValueInfoProto value_info = 13;
inline int GraphProto::value_info_size() const {
  return value_info_.size();
}
inline void GraphProto::clear_value_info() {
  value_info_.Clear();
}
inline const ::ONNXIR::ValueInfoProto& GraphProto::value_info(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.value_info)
  return value_info_.Get(index);
}
inline ::ONNXIR::ValueInfoProto* GraphProto::mutable_value_info(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.value_info)
  return value_info_.Mutable(index);
}
inline ::ONNXIR::ValueInfoProto* GraphProto::add_value_info() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.value_info)
  return value_info_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
GraphProto::mutable_value_info() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.value_info)
  return &value_info_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
GraphProto::value_info() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.value_info)
  return value_info_;
}

// repeated .ONNXIR.FunctionDefProto function = 50;
inline int GraphProto::function_size() const {
  return function_.size();
}
inline void GraphProto::clear_function() {
  function_.Clear();
}
inline const ::ONNXIR::FunctionDefProto& GraphProto::function(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.function)
  return function_.Get(index);
}
inline ::ONNXIR::FunctionDefProto* GraphProto::mutable_function(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.function)
  return function_.Mutable(index);
}
inline ::ONNXIR::FunctionDefProto* GraphProto::add_function() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.function)
  return function_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >*
GraphProto::mutable_function() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.function)
  return &function_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >&
GraphProto::function() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.function)
  return function_;
}

// repeated .ONNXIR.OperatorDeclProto operator = 51;
inline int GraphProto::operator__size() const {
  return operator__.size();
}
inline void GraphProto::clear_operator_() {
  operator__.Clear();
}
inline const ::ONNXIR::OperatorDeclProto& GraphProto::operator_(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.operator)
  return operator__.Get(index);
}
inline ::ONNXIR::OperatorDeclProto* GraphProto::mutable_operator_(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.operator)
  return operator__.Mutable(index);
}
inline ::ONNXIR::OperatorDeclProto* GraphProto::add_operator_() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.operator)
  return operator__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >*
GraphProto::mutable_operator_() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.operator)
  return &operator__;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >&
GraphProto::operator_() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.operator)
  return operator__;
}

// repeated string imported_libraries = 52;
inline int GraphProto::imported_libraries_size() const {
  return imported_libraries_.size();
}
inline void GraphProto::clear_imported_libraries() {
  imported_libraries_.Clear();
}
inline const ::std::string& GraphProto::imported_libraries(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_.Get(index);
}
inline ::std::string* GraphProto::mutable_imported_libraries(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_.Mutable(index);
}
inline void GraphProto::set_imported_libraries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.GraphProto.imported_libraries)
  imported_libraries_.Mutable(index)->assign(value);
}
inline void GraphProto::set_imported_libraries(int index, const char* value) {
  imported_libraries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.GraphProto.imported_libraries)
}
inline void GraphProto::set_imported_libraries(int index, const char* value, size_t size) {
  imported_libraries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.GraphProto.imported_libraries)
}
inline ::std::string* GraphProto::add_imported_libraries() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_.Add();
}
inline void GraphProto::add_imported_libraries(const ::std::string& value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.imported_libraries)
}
inline void GraphProto::add_imported_libraries(const char* value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.GraphProto.imported_libraries)
}
inline void GraphProto::add_imported_libraries(const char* value, size_t size) {
  imported_libraries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.GraphProto.imported_libraries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GraphProto::imported_libraries() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GraphProto::mutable_imported_libraries() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.imported_libraries)
  return &imported_libraries_;
}

inline const GraphProto* GraphProto::internal_default_instance() {
  return &GraphProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TensorProto_Segment

// optional int64 begin = 1;
inline bool TensorProto_Segment::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TensorProto_Segment::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TensorProto_Segment::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TensorProto_Segment::clear_begin() {
  begin_ = GOOGLE_LONGLONG(0);
  clear_has_begin();
}
inline ::google::protobuf::int64 TensorProto_Segment::begin() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.Segment.begin)
  return begin_;
}
inline void TensorProto_Segment::set_begin(::google::protobuf::int64 value) {
  set_has_begin();
  begin_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.Segment.begin)
}

// optional int64 end = 2;
inline bool TensorProto_Segment::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TensorProto_Segment::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TensorProto_Segment::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TensorProto_Segment::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
  clear_has_end();
}
inline ::google::protobuf::int64 TensorProto_Segment::end() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.Segment.end)
  return end_;
}
inline void TensorProto_Segment::set_end(::google::protobuf::int64 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.Segment.end)
}

inline const TensorProto_Segment* TensorProto_Segment::internal_default_instance() {
  return &TensorProto_Segment_default_instance_.get();
}
// -------------------------------------------------------------------

// TensorProto

// repeated int64 dims = 1;
inline int TensorProto::dims_size() const {
  return dims_.size();
}
inline void TensorProto::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int64 TensorProto::dims(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.dims)
  return dims_.Get(index);
}
inline void TensorProto::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.dims)
}
inline void TensorProto::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorProto::dims() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorProto::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.dims)
  return &dims_;
}

// optional .ONNXIR.TensorProto.DataType data_type = 2;
inline bool TensorProto::has_data_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TensorProto::set_has_data_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TensorProto::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TensorProto::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
inline ::ONNXIR::TensorProto_DataType TensorProto::data_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.data_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(data_type_);
}
inline void TensorProto::set_data_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.data_type)
}

// optional .ONNXIR.TensorProto.Segment segment = 3;
inline bool TensorProto::has_segment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TensorProto::set_has_segment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TensorProto::clear_has_segment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TensorProto::clear_segment() {
  if (segment_ != NULL) segment_->::ONNXIR::TensorProto_Segment::Clear();
  clear_has_segment();
}
inline const ::ONNXIR::TensorProto_Segment& TensorProto::segment() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.segment)
  return segment_ != NULL ? *segment_
                         : *::ONNXIR::TensorProto_Segment::internal_default_instance();
}
inline ::ONNXIR::TensorProto_Segment* TensorProto::mutable_segment() {
  set_has_segment();
  if (segment_ == NULL) {
    segment_ = new ::ONNXIR::TensorProto_Segment;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.segment)
  return segment_;
}
inline ::ONNXIR::TensorProto_Segment* TensorProto::release_segment() {
  // @@protoc_insertion_point(field_release:ONNXIR.TensorProto.segment)
  clear_has_segment();
  ::ONNXIR::TensorProto_Segment* temp = segment_;
  segment_ = NULL;
  return temp;
}
inline void TensorProto::set_allocated_segment(::ONNXIR::TensorProto_Segment* segment) {
  delete segment_;
  segment_ = segment;
  if (segment) {
    set_has_segment();
  } else {
    clear_has_segment();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TensorProto.segment)
}

// repeated float float_data = 4 [packed = true];
inline int TensorProto::float_data_size() const {
  return float_data_.size();
}
inline void TensorProto::clear_float_data() {
  float_data_.Clear();
}
inline float TensorProto::float_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.float_data)
  return float_data_.Get(index);
}
inline void TensorProto::set_float_data(int index, float value) {
  float_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.float_data)
}
inline void TensorProto::add_float_data(float value) {
  float_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.float_data)
}
inline const ::google::protobuf::RepeatedField< float >&
TensorProto::float_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.float_data)
  return float_data_;
}
inline ::google::protobuf::RepeatedField< float >*
TensorProto::mutable_float_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.float_data)
  return &float_data_;
}

// repeated int32 int32_data = 5 [packed = true];
inline int TensorProto::int32_data_size() const {
  return int32_data_.size();
}
inline void TensorProto::clear_int32_data() {
  int32_data_.Clear();
}
inline ::google::protobuf::int32 TensorProto::int32_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.int32_data)
  return int32_data_.Get(index);
}
inline void TensorProto::set_int32_data(int index, ::google::protobuf::int32 value) {
  int32_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.int32_data)
}
inline void TensorProto::add_int32_data(::google::protobuf::int32 value) {
  int32_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.int32_data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorProto::int32_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.int32_data)
  return int32_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorProto::mutable_int32_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.int32_data)
  return &int32_data_;
}

// repeated bytes string_data = 6;
inline int TensorProto::string_data_size() const {
  return string_data_.size();
}
inline void TensorProto::clear_string_data() {
  string_data_.Clear();
}
inline const ::std::string& TensorProto::string_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.string_data)
  return string_data_.Get(index);
}
inline ::std::string* TensorProto::mutable_string_data(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.string_data)
  return string_data_.Mutable(index);
}
inline void TensorProto::set_string_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.string_data)
  string_data_.Mutable(index)->assign(value);
}
inline void TensorProto::set_string_data(int index, const char* value) {
  string_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.TensorProto.string_data)
}
inline void TensorProto::set_string_data(int index, const void* value, size_t size) {
  string_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TensorProto.string_data)
}
inline ::std::string* TensorProto::add_string_data() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.TensorProto.string_data)
  return string_data_.Add();
}
inline void TensorProto::add_string_data(const ::std::string& value) {
  string_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.string_data)
}
inline void TensorProto::add_string_data(const char* value) {
  string_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.TensorProto.string_data)
}
inline void TensorProto::add_string_data(const void* value, size_t size) {
  string_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.TensorProto.string_data)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TensorProto::string_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.string_data)
  return string_data_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TensorProto::mutable_string_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.string_data)
  return &string_data_;
}

// repeated int64 int64_data = 7 [packed = true];
inline int TensorProto::int64_data_size() const {
  return int64_data_.size();
}
inline void TensorProto::clear_int64_data() {
  int64_data_.Clear();
}
inline ::google::protobuf::int64 TensorProto::int64_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.int64_data)
  return int64_data_.Get(index);
}
inline void TensorProto::set_int64_data(int index, ::google::protobuf::int64 value) {
  int64_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.int64_data)
}
inline void TensorProto::add_int64_data(::google::protobuf::int64 value) {
  int64_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.int64_data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorProto::int64_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.int64_data)
  return int64_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorProto::mutable_int64_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.int64_data)
  return &int64_data_;
}

// optional string name = 8;
inline bool TensorProto::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void TensorProto::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
inline void TensorProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void TensorProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& TensorProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TensorProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.name)
}
inline void TensorProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.TensorProto.name)
}
inline void TensorProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TensorProto.name)
}
inline ::std::string* TensorProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TensorProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.TensorProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TensorProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TensorProto.name)
}

// optional bytes raw_data = 9;
inline bool TensorProto::has_raw_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void TensorProto::set_has_raw_data() {
  _has_bits_[0] |= 0x00000100u;
}
inline void TensorProto::clear_has_raw_data() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void TensorProto::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_data();
}
inline const ::std::string& TensorProto::raw_data() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.raw_data)
  return raw_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TensorProto::set_raw_data(const ::std::string& value) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.raw_data)
}
inline void TensorProto::set_raw_data(const char* value) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.TensorProto.raw_data)
}
inline void TensorProto::set_raw_data(const void* value, size_t size) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TensorProto.raw_data)
}
inline ::std::string* TensorProto::mutable_raw_data() {
  set_has_raw_data();
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TensorProto::release_raw_data() {
  // @@protoc_insertion_point(field_release:ONNXIR.TensorProto.raw_data)
  clear_has_raw_data();
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TensorProto::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    set_has_raw_data();
  } else {
    clear_has_raw_data();
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TensorProto.raw_data)
}

// repeated double double_data = 10 [packed = true];
inline int TensorProto::double_data_size() const {
  return double_data_.size();
}
inline void TensorProto::clear_double_data() {
  double_data_.Clear();
}
inline double TensorProto::double_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.double_data)
  return double_data_.Get(index);
}
inline void TensorProto::set_double_data(int index, double value) {
  double_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.double_data)
}
inline void TensorProto::add_double_data(double value) {
  double_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.double_data)
}
inline const ::google::protobuf::RepeatedField< double >&
TensorProto::double_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.double_data)
  return double_data_;
}
inline ::google::protobuf::RepeatedField< double >*
TensorProto::mutable_double_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.double_data)
  return &double_data_;
}

// repeated uint64 uint64_data = 11 [packed = true];
inline int TensorProto::uint64_data_size() const {
  return uint64_data_.size();
}
inline void TensorProto::clear_uint64_data() {
  uint64_data_.Clear();
}
inline ::google::protobuf::uint64 TensorProto::uint64_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.uint64_data)
  return uint64_data_.Get(index);
}
inline void TensorProto::set_uint64_data(int index, ::google::protobuf::uint64 value) {
  uint64_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.uint64_data)
}
inline void TensorProto::add_uint64_data(::google::protobuf::uint64 value) {
  uint64_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.uint64_data)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TensorProto::uint64_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.uint64_data)
  return uint64_data_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TensorProto::mutable_uint64_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.uint64_data)
  return &uint64_data_;
}

inline const TensorProto* TensorProto::internal_default_instance() {
  return &TensorProto_default_instance_.get();
}
// -------------------------------------------------------------------

// SparseTensorProto

// repeated int64 dims = 1;
inline int SparseTensorProto::dims_size() const {
  return dims_.size();
}
inline void SparseTensorProto::clear_dims() {
  dims_.Clear();
}
inline ::google::protobuf::int64 SparseTensorProto::dims(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SparseTensorProto.dims)
  return dims_.Get(index);
}
inline void SparseTensorProto::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.SparseTensorProto.dims)
}
inline void SparseTensorProto::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.SparseTensorProto.dims)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SparseTensorProto::dims() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SparseTensorProto.dims)
  return dims_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SparseTensorProto::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SparseTensorProto.dims)
  return &dims_;
}

// optional .ONNXIR.TensorProto indices = 2;
inline bool SparseTensorProto::has_indices() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SparseTensorProto::set_has_indices() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SparseTensorProto::clear_has_indices() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SparseTensorProto::clear_indices() {
  if (indices_ != NULL) indices_->::ONNXIR::TensorProto::Clear();
  clear_has_indices();
}
inline const ::ONNXIR::TensorProto& SparseTensorProto::indices() const {
  // @@protoc_insertion_point(field_get:ONNXIR.SparseTensorProto.indices)
  return indices_ != NULL ? *indices_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
inline ::ONNXIR::TensorProto* SparseTensorProto::mutable_indices() {
  set_has_indices();
  if (indices_ == NULL) {
    indices_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.SparseTensorProto.indices)
  return indices_;
}
inline ::ONNXIR::TensorProto* SparseTensorProto::release_indices() {
  // @@protoc_insertion_point(field_release:ONNXIR.SparseTensorProto.indices)
  clear_has_indices();
  ::ONNXIR::TensorProto* temp = indices_;
  indices_ = NULL;
  return temp;
}
inline void SparseTensorProto::set_allocated_indices(::ONNXIR::TensorProto* indices) {
  delete indices_;
  indices_ = indices;
  if (indices) {
    set_has_indices();
  } else {
    clear_has_indices();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.SparseTensorProto.indices)
}

// optional .ONNXIR.TensorProto values = 3;
inline bool SparseTensorProto::has_values() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SparseTensorProto::set_has_values() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SparseTensorProto::clear_has_values() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SparseTensorProto::clear_values() {
  if (values_ != NULL) values_->::ONNXIR::TensorProto::Clear();
  clear_has_values();
}
inline const ::ONNXIR::TensorProto& SparseTensorProto::values() const {
  // @@protoc_insertion_point(field_get:ONNXIR.SparseTensorProto.values)
  return values_ != NULL ? *values_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
inline ::ONNXIR::TensorProto* SparseTensorProto::mutable_values() {
  set_has_values();
  if (values_ == NULL) {
    values_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.SparseTensorProto.values)
  return values_;
}
inline ::ONNXIR::TensorProto* SparseTensorProto::release_values() {
  // @@protoc_insertion_point(field_release:ONNXIR.SparseTensorProto.values)
  clear_has_values();
  ::ONNXIR::TensorProto* temp = values_;
  values_ = NULL;
  return temp;
}
inline void SparseTensorProto::set_allocated_values(::ONNXIR::TensorProto* values) {
  delete values_;
  values_ = values;
  if (values) {
    set_has_values();
  } else {
    clear_has_values();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.SparseTensorProto.values)
}

inline const SparseTensorProto* SparseTensorProto::internal_default_instance() {
  return &SparseTensorProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_TensorShapeProto_Dimension

// optional int64 dim_value = 1;
inline bool TypeProto_TensorShapeProto_Dimension::has_dim_value() const {
  return value_case() == kDimValue;
}
inline void TypeProto_TensorShapeProto_Dimension::set_has_dim_value() {
  _oneof_case_[0] = kDimValue;
}
inline void TypeProto_TensorShapeProto_Dimension::clear_dim_value() {
  if (has_dim_value()) {
    value_.dim_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 TypeProto_TensorShapeProto_Dimension::dim_value() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_value)
  if (has_dim_value()) {
    return value_.dim_value_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void TypeProto_TensorShapeProto_Dimension::set_dim_value(::google::protobuf::int64 value) {
  if (!has_dim_value()) {
    clear_value();
    set_has_dim_value();
  }
  value_.dim_value_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_value)
}

// optional string dim_param = 2;
inline bool TypeProto_TensorShapeProto_Dimension::has_dim_param() const {
  return value_case() == kDimParam;
}
inline void TypeProto_TensorShapeProto_Dimension::set_has_dim_param() {
  _oneof_case_[0] = kDimParam;
}
inline void TypeProto_TensorShapeProto_Dimension::clear_dim_param() {
  if (has_dim_param()) {
    value_.dim_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& TypeProto_TensorShapeProto_Dimension::dim_param() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  if (has_dim_param()) {
    return value_.dim_param_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void TypeProto_TensorShapeProto_Dimension::set_dim_param(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}
inline void TypeProto_TensorShapeProto_Dimension::set_dim_param(const char* value) {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}
inline void TypeProto_TensorShapeProto_Dimension::set_dim_param(const char* value, size_t size) {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}
inline ::std::string* TypeProto_TensorShapeProto_Dimension::mutable_dim_param() {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  return value_.dim_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TypeProto_TensorShapeProto_Dimension::release_dim_param() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  if (has_dim_param()) {
    clear_has_value();
    return value_.dim_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void TypeProto_TensorShapeProto_Dimension::set_allocated_dim_param(::std::string* dim_param) {
  if (!has_dim_param()) {
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (dim_param != NULL) {
    set_has_dim_param();
    value_.dim_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        dim_param);
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}

inline bool TypeProto_TensorShapeProto_Dimension::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void TypeProto_TensorShapeProto_Dimension::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline TypeProto_TensorShapeProto_Dimension::ValueCase TypeProto_TensorShapeProto_Dimension::value_case() const {
  return TypeProto_TensorShapeProto_Dimension::ValueCase(_oneof_case_[0]);
}
inline const TypeProto_TensorShapeProto_Dimension* TypeProto_TensorShapeProto_Dimension::internal_default_instance() {
  return &TypeProto_TensorShapeProto_Dimension_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_TensorShapeProto

// repeated .ONNXIR.TypeProto.TensorShapeProto.Dimension dim = 1;
inline int TypeProto_TensorShapeProto::dim_size() const {
  return dim_.size();
}
inline void TypeProto_TensorShapeProto::clear_dim() {
  dim_.Clear();
}
inline const ::ONNXIR::TypeProto_TensorShapeProto_Dimension& TypeProto_TensorShapeProto::dim(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_.Get(index);
}
inline ::ONNXIR::TypeProto_TensorShapeProto_Dimension* TypeProto_TensorShapeProto::mutable_dim(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_.Mutable(index);
}
inline ::ONNXIR::TypeProto_TensorShapeProto_Dimension* TypeProto_TensorShapeProto::add_dim() {
  // @@protoc_insertion_point(field_add:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto_Dimension >*
TypeProto_TensorShapeProto::mutable_dim() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TypeProto.TensorShapeProto.dim)
  return &dim_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto_Dimension >&
TypeProto_TensorShapeProto::dim() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_;
}

inline const TypeProto_TensorShapeProto* TypeProto_TensorShapeProto::internal_default_instance() {
  return &TypeProto_TensorShapeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_TensorTypeProto

// optional .ONNXIR.TensorProto.DataType elem_type = 1;
inline bool TypeProto_TensorTypeProto::has_elem_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TypeProto_TensorTypeProto::set_has_elem_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TypeProto_TensorTypeProto::clear_has_elem_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TypeProto_TensorTypeProto::clear_elem_type() {
  elem_type_ = 0;
  clear_has_elem_type();
}
inline ::ONNXIR::TensorProto_DataType TypeProto_TensorTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorTypeProto.elem_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(elem_type_);
}
inline void TypeProto_TensorTypeProto::set_elem_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_elem_type();
  elem_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorTypeProto.elem_type)
}

// optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
inline bool TypeProto_TensorTypeProto::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TypeProto_TensorTypeProto::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TypeProto_TensorTypeProto::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TypeProto_TensorTypeProto::clear_shape() {
  if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
  clear_has_shape();
}
inline const ::ONNXIR::TypeProto_TensorShapeProto& TypeProto_TensorTypeProto::shape() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorTypeProto.shape)
  return shape_ != NULL ? *shape_
                         : *::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance();
}
inline ::ONNXIR::TypeProto_TensorShapeProto* TypeProto_TensorTypeProto::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) {
    shape_ = new ::ONNXIR::TypeProto_TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TensorTypeProto.shape)
  return shape_;
}
inline ::ONNXIR::TypeProto_TensorShapeProto* TypeProto_TensorTypeProto::release_shape() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.TensorTypeProto.shape)
  clear_has_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
inline void TypeProto_TensorTypeProto::set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.TensorTypeProto.shape)
}

inline const TypeProto_TensorTypeProto* TypeProto_TensorTypeProto::internal_default_instance() {
  return &TypeProto_TensorTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_SparseTensorTypeProto

// optional .ONNXIR.TensorProto.DataType elem_type = 1;
inline bool TypeProto_SparseTensorTypeProto::has_elem_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TypeProto_SparseTensorTypeProto::set_has_elem_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TypeProto_SparseTensorTypeProto::clear_has_elem_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TypeProto_SparseTensorTypeProto::clear_elem_type() {
  elem_type_ = 0;
  clear_has_elem_type();
}
inline ::ONNXIR::TensorProto_DataType TypeProto_SparseTensorTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.SparseTensorTypeProto.elem_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(elem_type_);
}
inline void TypeProto_SparseTensorTypeProto::set_elem_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_elem_type();
  elem_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.SparseTensorTypeProto.elem_type)
}

// optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
inline bool TypeProto_SparseTensorTypeProto::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TypeProto_SparseTensorTypeProto::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TypeProto_SparseTensorTypeProto::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TypeProto_SparseTensorTypeProto::clear_shape() {
  if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
  clear_has_shape();
}
inline const ::ONNXIR::TypeProto_TensorShapeProto& TypeProto_SparseTensorTypeProto::shape() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
  return shape_ != NULL ? *shape_
                         : *::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance();
}
inline ::ONNXIR::TypeProto_TensorShapeProto* TypeProto_SparseTensorTypeProto::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) {
    shape_ = new ::ONNXIR::TypeProto_TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
  return shape_;
}
inline ::ONNXIR::TypeProto_TensorShapeProto* TypeProto_SparseTensorTypeProto::release_shape() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
  clear_has_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
inline void TypeProto_SparseTensorTypeProto::set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
}

inline const TypeProto_SparseTensorTypeProto* TypeProto_SparseTensorTypeProto::internal_default_instance() {
  return &TypeProto_SparseTensorTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_HandleTypeProto

inline const TypeProto_HandleTypeProto* TypeProto_HandleTypeProto::internal_default_instance() {
  return &TypeProto_HandleTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_TupleTypeProto

// repeated .ONNXIR.TypeProto elem_type = 1;
inline int TypeProto_TupleTypeProto::elem_type_size() const {
  return elem_type_.size();
}
inline void TypeProto_TupleTypeProto::clear_elem_type() {
  elem_type_.Clear();
}
inline const ::ONNXIR::TypeProto& TypeProto_TupleTypeProto::elem_type(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_.Get(index);
}
inline ::ONNXIR::TypeProto* TypeProto_TupleTypeProto::mutable_elem_type(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_.Mutable(index);
}
inline ::ONNXIR::TypeProto* TypeProto_TupleTypeProto::add_elem_type() {
  // @@protoc_insertion_point(field_add:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >*
TypeProto_TupleTypeProto::mutable_elem_type() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return &elem_type_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >&
TypeProto_TupleTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_;
}

inline const TypeProto_TupleTypeProto* TypeProto_TupleTypeProto::internal_default_instance() {
  return &TypeProto_TupleTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_SeqTypeProto

// optional .ONNXIR.TypeProto elem_type = 1;
inline bool TypeProto_SeqTypeProto::has_elem_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TypeProto_SeqTypeProto::set_has_elem_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TypeProto_SeqTypeProto::clear_has_elem_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TypeProto_SeqTypeProto::clear_elem_type() {
  if (elem_type_ != NULL) elem_type_->::ONNXIR::TypeProto::Clear();
  clear_has_elem_type();
}
inline const ::ONNXIR::TypeProto& TypeProto_SeqTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.SeqTypeProto.elem_type)
  return elem_type_ != NULL ? *elem_type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
inline ::ONNXIR::TypeProto* TypeProto_SeqTypeProto::mutable_elem_type() {
  set_has_elem_type();
  if (elem_type_ == NULL) {
    elem_type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.SeqTypeProto.elem_type)
  return elem_type_;
}
inline ::ONNXIR::TypeProto* TypeProto_SeqTypeProto::release_elem_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.SeqTypeProto.elem_type)
  clear_has_elem_type();
  ::ONNXIR::TypeProto* temp = elem_type_;
  elem_type_ = NULL;
  return temp;
}
inline void TypeProto_SeqTypeProto::set_allocated_elem_type(::ONNXIR::TypeProto* elem_type) {
  delete elem_type_;
  elem_type_ = elem_type;
  if (elem_type) {
    set_has_elem_type();
  } else {
    clear_has_elem_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.SeqTypeProto.elem_type)
}

inline const TypeProto_SeqTypeProto* TypeProto_SeqTypeProto::internal_default_instance() {
  return &TypeProto_SeqTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_MapTypeProto

// optional .ONNXIR.TensorProto.DataType key_type = 1;
inline bool TypeProto_MapTypeProto::has_key_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TypeProto_MapTypeProto::set_has_key_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TypeProto_MapTypeProto::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TypeProto_MapTypeProto::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
inline ::ONNXIR::TensorProto_DataType TypeProto_MapTypeProto::key_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.MapTypeProto.key_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(key_type_);
}
inline void TypeProto_MapTypeProto::set_key_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_key_type();
  key_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.MapTypeProto.key_type)
}

// optional .ONNXIR.TensorProto.DataType value_type = 2;
inline bool TypeProto_MapTypeProto::has_value_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TypeProto_MapTypeProto::set_has_value_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TypeProto_MapTypeProto::clear_has_value_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TypeProto_MapTypeProto::clear_value_type() {
  value_type_ = 0;
  clear_has_value_type();
}
inline ::ONNXIR::TensorProto_DataType TypeProto_MapTypeProto::value_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.MapTypeProto.value_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(value_type_);
}
inline void TypeProto_MapTypeProto::set_value_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_value_type();
  value_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.MapTypeProto.value_type)
}

inline const TypeProto_MapTypeProto* TypeProto_MapTypeProto::internal_default_instance() {
  return &TypeProto_MapTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto

// optional .ONNXIR.TypeProto.TensorTypeProto tensor_type = 1;
inline bool TypeProto::has_tensor_type() const {
  return value_case() == kTensorType;
}
inline void TypeProto::set_has_tensor_type() {
  _oneof_case_[0] = kTensorType;
}
inline void TypeProto::clear_tensor_type() {
  if (has_tensor_type()) {
    delete value_.tensor_type_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::TypeProto_TensorTypeProto& TypeProto::tensor_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.tensor_type)
  return has_tensor_type()
      ? *value_.tensor_type_
      : ::ONNXIR::TypeProto_TensorTypeProto::default_instance();
}
inline ::ONNXIR::TypeProto_TensorTypeProto* TypeProto::mutable_tensor_type() {
  if (!has_tensor_type()) {
    clear_value();
    set_has_tensor_type();
    value_.tensor_type_ = new ::ONNXIR::TypeProto_TensorTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.tensor_type)
  return value_.tensor_type_;
}
inline ::ONNXIR::TypeProto_TensorTypeProto* TypeProto::release_tensor_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.tensor_type)
  if (has_tensor_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_TensorTypeProto* temp = value_.tensor_type_;
    value_.tensor_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypeProto::set_allocated_tensor_type(::ONNXIR::TypeProto_TensorTypeProto* tensor_type) {
  clear_value();
  if (tensor_type) {
    set_has_tensor_type();
    value_.tensor_type_ = tensor_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.tensor_type)
}

// optional .ONNXIR.TypeProto.SparseTensorTypeProto sparse_tensor_type = 2;
inline bool TypeProto::has_sparse_tensor_type() const {
  return value_case() == kSparseTensorType;
}
inline void TypeProto::set_has_sparse_tensor_type() {
  _oneof_case_[0] = kSparseTensorType;
}
inline void TypeProto::clear_sparse_tensor_type() {
  if (has_sparse_tensor_type()) {
    delete value_.sparse_tensor_type_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::TypeProto_SparseTensorTypeProto& TypeProto::sparse_tensor_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.sparse_tensor_type)
  return has_sparse_tensor_type()
      ? *value_.sparse_tensor_type_
      : ::ONNXIR::TypeProto_SparseTensorTypeProto::default_instance();
}
inline ::ONNXIR::TypeProto_SparseTensorTypeProto* TypeProto::mutable_sparse_tensor_type() {
  if (!has_sparse_tensor_type()) {
    clear_value();
    set_has_sparse_tensor_type();
    value_.sparse_tensor_type_ = new ::ONNXIR::TypeProto_SparseTensorTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.sparse_tensor_type)
  return value_.sparse_tensor_type_;
}
inline ::ONNXIR::TypeProto_SparseTensorTypeProto* TypeProto::release_sparse_tensor_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.sparse_tensor_type)
  if (has_sparse_tensor_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_SparseTensorTypeProto* temp = value_.sparse_tensor_type_;
    value_.sparse_tensor_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypeProto::set_allocated_sparse_tensor_type(::ONNXIR::TypeProto_SparseTensorTypeProto* sparse_tensor_type) {
  clear_value();
  if (sparse_tensor_type) {
    set_has_sparse_tensor_type();
    value_.sparse_tensor_type_ = sparse_tensor_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.sparse_tensor_type)
}

// optional .ONNXIR.TypeProto.HandleTypeProto handle_type = 3;
inline bool TypeProto::has_handle_type() const {
  return value_case() == kHandleType;
}
inline void TypeProto::set_has_handle_type() {
  _oneof_case_[0] = kHandleType;
}
inline void TypeProto::clear_handle_type() {
  if (has_handle_type()) {
    delete value_.handle_type_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::TypeProto_HandleTypeProto& TypeProto::handle_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.handle_type)
  return has_handle_type()
      ? *value_.handle_type_
      : ::ONNXIR::TypeProto_HandleTypeProto::default_instance();
}
inline ::ONNXIR::TypeProto_HandleTypeProto* TypeProto::mutable_handle_type() {
  if (!has_handle_type()) {
    clear_value();
    set_has_handle_type();
    value_.handle_type_ = new ::ONNXIR::TypeProto_HandleTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.handle_type)
  return value_.handle_type_;
}
inline ::ONNXIR::TypeProto_HandleTypeProto* TypeProto::release_handle_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.handle_type)
  if (has_handle_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_HandleTypeProto* temp = value_.handle_type_;
    value_.handle_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypeProto::set_allocated_handle_type(::ONNXIR::TypeProto_HandleTypeProto* handle_type) {
  clear_value();
  if (handle_type) {
    set_has_handle_type();
    value_.handle_type_ = handle_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.handle_type)
}

// optional .ONNXIR.TypeProto.TupleTypeProto tuple_type = 4;
inline bool TypeProto::has_tuple_type() const {
  return value_case() == kTupleType;
}
inline void TypeProto::set_has_tuple_type() {
  _oneof_case_[0] = kTupleType;
}
inline void TypeProto::clear_tuple_type() {
  if (has_tuple_type()) {
    delete value_.tuple_type_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::TypeProto_TupleTypeProto& TypeProto::tuple_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.tuple_type)
  return has_tuple_type()
      ? *value_.tuple_type_
      : ::ONNXIR::TypeProto_TupleTypeProto::default_instance();
}
inline ::ONNXIR::TypeProto_TupleTypeProto* TypeProto::mutable_tuple_type() {
  if (!has_tuple_type()) {
    clear_value();
    set_has_tuple_type();
    value_.tuple_type_ = new ::ONNXIR::TypeProto_TupleTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.tuple_type)
  return value_.tuple_type_;
}
inline ::ONNXIR::TypeProto_TupleTypeProto* TypeProto::release_tuple_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.tuple_type)
  if (has_tuple_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_TupleTypeProto* temp = value_.tuple_type_;
    value_.tuple_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypeProto::set_allocated_tuple_type(::ONNXIR::TypeProto_TupleTypeProto* tuple_type) {
  clear_value();
  if (tuple_type) {
    set_has_tuple_type();
    value_.tuple_type_ = tuple_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.tuple_type)
}

// optional .ONNXIR.TypeProto.SeqTypeProto seq_type = 5;
inline bool TypeProto::has_seq_type() const {
  return value_case() == kSeqType;
}
inline void TypeProto::set_has_seq_type() {
  _oneof_case_[0] = kSeqType;
}
inline void TypeProto::clear_seq_type() {
  if (has_seq_type()) {
    delete value_.seq_type_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::TypeProto_SeqTypeProto& TypeProto::seq_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.seq_type)
  return has_seq_type()
      ? *value_.seq_type_
      : ::ONNXIR::TypeProto_SeqTypeProto::default_instance();
}
inline ::ONNXIR::TypeProto_SeqTypeProto* TypeProto::mutable_seq_type() {
  if (!has_seq_type()) {
    clear_value();
    set_has_seq_type();
    value_.seq_type_ = new ::ONNXIR::TypeProto_SeqTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.seq_type)
  return value_.seq_type_;
}
inline ::ONNXIR::TypeProto_SeqTypeProto* TypeProto::release_seq_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.seq_type)
  if (has_seq_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_SeqTypeProto* temp = value_.seq_type_;
    value_.seq_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypeProto::set_allocated_seq_type(::ONNXIR::TypeProto_SeqTypeProto* seq_type) {
  clear_value();
  if (seq_type) {
    set_has_seq_type();
    value_.seq_type_ = seq_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.seq_type)
}

// optional .ONNXIR.TypeProto.MapTypeProto map_type = 6;
inline bool TypeProto::has_map_type() const {
  return value_case() == kMapType;
}
inline void TypeProto::set_has_map_type() {
  _oneof_case_[0] = kMapType;
}
inline void TypeProto::clear_map_type() {
  if (has_map_type()) {
    delete value_.map_type_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::TypeProto_MapTypeProto& TypeProto::map_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.map_type)
  return has_map_type()
      ? *value_.map_type_
      : ::ONNXIR::TypeProto_MapTypeProto::default_instance();
}
inline ::ONNXIR::TypeProto_MapTypeProto* TypeProto::mutable_map_type() {
  if (!has_map_type()) {
    clear_value();
    set_has_map_type();
    value_.map_type_ = new ::ONNXIR::TypeProto_MapTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.map_type)
  return value_.map_type_;
}
inline ::ONNXIR::TypeProto_MapTypeProto* TypeProto::release_map_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.map_type)
  if (has_map_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_MapTypeProto* temp = value_.map_type_;
    value_.map_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void TypeProto::set_allocated_map_type(::ONNXIR::TypeProto_MapTypeProto* map_type) {
  clear_value();
  if (map_type) {
    set_has_map_type();
    value_.map_type_ = map_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.map_type)
}

inline bool TypeProto::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void TypeProto::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline TypeProto::ValueCase TypeProto::value_case() const {
  return TypeProto::ValueCase(_oneof_case_[0]);
}
inline const TypeProto* TypeProto::internal_default_instance() {
  return &TypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto_HandleProto

// optional int64 uid = 1;
inline bool ValueProto_HandleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ValueProto_HandleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ValueProto_HandleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ValueProto_HandleProto::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
inline ::google::protobuf::int64 ValueProto_HandleProto::uid() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.HandleProto.uid)
  return uid_;
}
inline void ValueProto_HandleProto::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.ValueProto.HandleProto.uid)
}

inline const ValueProto_HandleProto* ValueProto_HandleProto::internal_default_instance() {
  return &ValueProto_HandleProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto_TupleProto

// repeated .ONNXIR.ValueProto elems = 1;
inline int ValueProto_TupleProto::elems_size() const {
  return elems_.size();
}
inline void ValueProto_TupleProto::clear_elems() {
  elems_.Clear();
}
inline const ::ONNXIR::ValueProto& ValueProto_TupleProto::elems(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.TupleProto.elems)
  return elems_.Get(index);
}
inline ::ONNXIR::ValueProto* ValueProto_TupleProto::mutable_elems(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.TupleProto.elems)
  return elems_.Mutable(index);
}
inline ::ONNXIR::ValueProto* ValueProto_TupleProto::add_elems() {
  // @@protoc_insertion_point(field_add:ONNXIR.ValueProto.TupleProto.elems)
  return elems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >*
ValueProto_TupleProto::mutable_elems() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.ValueProto.TupleProto.elems)
  return &elems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >&
ValueProto_TupleProto::elems() const {
  // @@protoc_insertion_point(field_list:ONNXIR.ValueProto.TupleProto.elems)
  return elems_;
}

inline const ValueProto_TupleProto* ValueProto_TupleProto::internal_default_instance() {
  return &ValueProto_TupleProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto_SequenceProto

// repeated .ONNXIR.ValueProto elems = 1;
inline int ValueProto_SequenceProto::elems_size() const {
  return elems_.size();
}
inline void ValueProto_SequenceProto::clear_elems() {
  elems_.Clear();
}
inline const ::ONNXIR::ValueProto& ValueProto_SequenceProto::elems(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_.Get(index);
}
inline ::ONNXIR::ValueProto* ValueProto_SequenceProto::mutable_elems(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_.Mutable(index);
}
inline ::ONNXIR::ValueProto* ValueProto_SequenceProto::add_elems() {
  // @@protoc_insertion_point(field_add:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >*
ValueProto_SequenceProto::mutable_elems() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.ValueProto.SequenceProto.elems)
  return &elems_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >&
ValueProto_SequenceProto::elems() const {
  // @@protoc_insertion_point(field_list:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_;
}

inline const ValueProto_SequenceProto* ValueProto_SequenceProto::internal_default_instance() {
  return &ValueProto_SequenceProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto_MapProto

// optional .ONNXIR.TensorProto keys = 1;
inline bool ValueProto_MapProto::has_keys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ValueProto_MapProto::set_has_keys() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ValueProto_MapProto::clear_has_keys() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ValueProto_MapProto::clear_keys() {
  if (keys_ != NULL) keys_->::ONNXIR::TensorProto::Clear();
  clear_has_keys();
}
inline const ::ONNXIR::TensorProto& ValueProto_MapProto::keys() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.MapProto.keys)
  return keys_ != NULL ? *keys_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
inline ::ONNXIR::TensorProto* ValueProto_MapProto::mutable_keys() {
  set_has_keys();
  if (keys_ == NULL) {
    keys_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.MapProto.keys)
  return keys_;
}
inline ::ONNXIR::TensorProto* ValueProto_MapProto::release_keys() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.MapProto.keys)
  clear_has_keys();
  ::ONNXIR::TensorProto* temp = keys_;
  keys_ = NULL;
  return temp;
}
inline void ValueProto_MapProto::set_allocated_keys(::ONNXIR::TensorProto* keys) {
  delete keys_;
  keys_ = keys;
  if (keys) {
    set_has_keys();
  } else {
    clear_has_keys();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.MapProto.keys)
}

// optional .ONNXIR.TensorProto values = 2;
inline bool ValueProto_MapProto::has_values() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ValueProto_MapProto::set_has_values() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ValueProto_MapProto::clear_has_values() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ValueProto_MapProto::clear_values() {
  if (values_ != NULL) values_->::ONNXIR::TensorProto::Clear();
  clear_has_values();
}
inline const ::ONNXIR::TensorProto& ValueProto_MapProto::values() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.MapProto.values)
  return values_ != NULL ? *values_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
inline ::ONNXIR::TensorProto* ValueProto_MapProto::mutable_values() {
  set_has_values();
  if (values_ == NULL) {
    values_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.MapProto.values)
  return values_;
}
inline ::ONNXIR::TensorProto* ValueProto_MapProto::release_values() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.MapProto.values)
  clear_has_values();
  ::ONNXIR::TensorProto* temp = values_;
  values_ = NULL;
  return temp;
}
inline void ValueProto_MapProto::set_allocated_values(::ONNXIR::TensorProto* values) {
  delete values_;
  values_ = values;
  if (values) {
    set_has_values();
  } else {
    clear_has_values();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.MapProto.values)
}

inline const ValueProto_MapProto* ValueProto_MapProto::internal_default_instance() {
  return &ValueProto_MapProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto

// optional .ONNXIR.TensorProto dense_tensor = 1;
inline bool ValueProto::has_dense_tensor() const {
  return value_case() == kDenseTensor;
}
inline void ValueProto::set_has_dense_tensor() {
  _oneof_case_[0] = kDenseTensor;
}
inline void ValueProto::clear_dense_tensor() {
  if (has_dense_tensor()) {
    delete value_.dense_tensor_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::TensorProto& ValueProto::dense_tensor() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.dense_tensor)
  return has_dense_tensor()
      ? *value_.dense_tensor_
      : ::ONNXIR::TensorProto::default_instance();
}
inline ::ONNXIR::TensorProto* ValueProto::mutable_dense_tensor() {
  if (!has_dense_tensor()) {
    clear_value();
    set_has_dense_tensor();
    value_.dense_tensor_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.dense_tensor)
  return value_.dense_tensor_;
}
inline ::ONNXIR::TensorProto* ValueProto::release_dense_tensor() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.dense_tensor)
  if (has_dense_tensor()) {
    clear_has_value();
    ::ONNXIR::TensorProto* temp = value_.dense_tensor_;
    value_.dense_tensor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueProto::set_allocated_dense_tensor(::ONNXIR::TensorProto* dense_tensor) {
  clear_value();
  if (dense_tensor) {
    set_has_dense_tensor();
    value_.dense_tensor_ = dense_tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.dense_tensor)
}

// optional .ONNXIR.SparseTensorProto sparse_tensor = 2;
inline bool ValueProto::has_sparse_tensor() const {
  return value_case() == kSparseTensor;
}
inline void ValueProto::set_has_sparse_tensor() {
  _oneof_case_[0] = kSparseTensor;
}
inline void ValueProto::clear_sparse_tensor() {
  if (has_sparse_tensor()) {
    delete value_.sparse_tensor_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::SparseTensorProto& ValueProto::sparse_tensor() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.sparse_tensor)
  return has_sparse_tensor()
      ? *value_.sparse_tensor_
      : ::ONNXIR::SparseTensorProto::default_instance();
}
inline ::ONNXIR::SparseTensorProto* ValueProto::mutable_sparse_tensor() {
  if (!has_sparse_tensor()) {
    clear_value();
    set_has_sparse_tensor();
    value_.sparse_tensor_ = new ::ONNXIR::SparseTensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.sparse_tensor)
  return value_.sparse_tensor_;
}
inline ::ONNXIR::SparseTensorProto* ValueProto::release_sparse_tensor() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.sparse_tensor)
  if (has_sparse_tensor()) {
    clear_has_value();
    ::ONNXIR::SparseTensorProto* temp = value_.sparse_tensor_;
    value_.sparse_tensor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueProto::set_allocated_sparse_tensor(::ONNXIR::SparseTensorProto* sparse_tensor) {
  clear_value();
  if (sparse_tensor) {
    set_has_sparse_tensor();
    value_.sparse_tensor_ = sparse_tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.sparse_tensor)
}

// optional .ONNXIR.ValueProto.HandleProto handle = 3;
inline bool ValueProto::has_handle() const {
  return value_case() == kHandle;
}
inline void ValueProto::set_has_handle() {
  _oneof_case_[0] = kHandle;
}
inline void ValueProto::clear_handle() {
  if (has_handle()) {
    delete value_.handle_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::ValueProto_HandleProto& ValueProto::handle() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.handle)
  return has_handle()
      ? *value_.handle_
      : ::ONNXIR::ValueProto_HandleProto::default_instance();
}
inline ::ONNXIR::ValueProto_HandleProto* ValueProto::mutable_handle() {
  if (!has_handle()) {
    clear_value();
    set_has_handle();
    value_.handle_ = new ::ONNXIR::ValueProto_HandleProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.handle)
  return value_.handle_;
}
inline ::ONNXIR::ValueProto_HandleProto* ValueProto::release_handle() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.handle)
  if (has_handle()) {
    clear_has_value();
    ::ONNXIR::ValueProto_HandleProto* temp = value_.handle_;
    value_.handle_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueProto::set_allocated_handle(::ONNXIR::ValueProto_HandleProto* handle) {
  clear_value();
  if (handle) {
    set_has_handle();
    value_.handle_ = handle;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.handle)
}

// optional .ONNXIR.ValueProto.TupleProto tuple = 4;
inline bool ValueProto::has_tuple() const {
  return value_case() == kTuple;
}
inline void ValueProto::set_has_tuple() {
  _oneof_case_[0] = kTuple;
}
inline void ValueProto::clear_tuple() {
  if (has_tuple()) {
    delete value_.tuple_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::ValueProto_TupleProto& ValueProto::tuple() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.tuple)
  return has_tuple()
      ? *value_.tuple_
      : ::ONNXIR::ValueProto_TupleProto::default_instance();
}
inline ::ONNXIR::ValueProto_TupleProto* ValueProto::mutable_tuple() {
  if (!has_tuple()) {
    clear_value();
    set_has_tuple();
    value_.tuple_ = new ::ONNXIR::ValueProto_TupleProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.tuple)
  return value_.tuple_;
}
inline ::ONNXIR::ValueProto_TupleProto* ValueProto::release_tuple() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.tuple)
  if (has_tuple()) {
    clear_has_value();
    ::ONNXIR::ValueProto_TupleProto* temp = value_.tuple_;
    value_.tuple_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueProto::set_allocated_tuple(::ONNXIR::ValueProto_TupleProto* tuple) {
  clear_value();
  if (tuple) {
    set_has_tuple();
    value_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.tuple)
}

// optional .ONNXIR.ValueProto.SequenceProto seq = 5;
inline bool ValueProto::has_seq() const {
  return value_case() == kSeq;
}
inline void ValueProto::set_has_seq() {
  _oneof_case_[0] = kSeq;
}
inline void ValueProto::clear_seq() {
  if (has_seq()) {
    delete value_.seq_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::ValueProto_SequenceProto& ValueProto::seq() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.seq)
  return has_seq()
      ? *value_.seq_
      : ::ONNXIR::ValueProto_SequenceProto::default_instance();
}
inline ::ONNXIR::ValueProto_SequenceProto* ValueProto::mutable_seq() {
  if (!has_seq()) {
    clear_value();
    set_has_seq();
    value_.seq_ = new ::ONNXIR::ValueProto_SequenceProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.seq)
  return value_.seq_;
}
inline ::ONNXIR::ValueProto_SequenceProto* ValueProto::release_seq() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.seq)
  if (has_seq()) {
    clear_has_value();
    ::ONNXIR::ValueProto_SequenceProto* temp = value_.seq_;
    value_.seq_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueProto::set_allocated_seq(::ONNXIR::ValueProto_SequenceProto* seq) {
  clear_value();
  if (seq) {
    set_has_seq();
    value_.seq_ = seq;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.seq)
}

// optional .ONNXIR.ValueProto.MapProto map = 6;
inline bool ValueProto::has_map() const {
  return value_case() == kMap;
}
inline void ValueProto::set_has_map() {
  _oneof_case_[0] = kMap;
}
inline void ValueProto::clear_map() {
  if (has_map()) {
    delete value_.map_;
    clear_has_value();
  }
}
inline  const ::ONNXIR::ValueProto_MapProto& ValueProto::map() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.map)
  return has_map()
      ? *value_.map_
      : ::ONNXIR::ValueProto_MapProto::default_instance();
}
inline ::ONNXIR::ValueProto_MapProto* ValueProto::mutable_map() {
  if (!has_map()) {
    clear_value();
    set_has_map();
    value_.map_ = new ::ONNXIR::ValueProto_MapProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.map)
  return value_.map_;
}
inline ::ONNXIR::ValueProto_MapProto* ValueProto::release_map() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.map)
  if (has_map()) {
    clear_has_value();
    ::ONNXIR::ValueProto_MapProto* temp = value_.map_;
    value_.map_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline void ValueProto::set_allocated_map(::ONNXIR::ValueProto_MapProto* map) {
  clear_value();
  if (map) {
    set_has_map();
    value_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.map)
}

inline bool ValueProto::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void ValueProto::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline ValueProto::ValueCase ValueProto::value_case() const {
  return ValueProto::ValueCase(_oneof_case_[0]);
}
inline const ValueProto* ValueProto::internal_default_instance() {
  return &ValueProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ParameterDeclProto

// optional string name = 1;
inline bool ParameterDeclProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ParameterDeclProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ParameterDeclProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ParameterDeclProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& ParameterDeclProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ParameterDeclProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterDeclProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ParameterDeclProto.name)
}
inline void ParameterDeclProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ParameterDeclProto.name)
}
inline void ParameterDeclProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ParameterDeclProto.name)
}
inline ::std::string* ParameterDeclProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ParameterDeclProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterDeclProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.ParameterDeclProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterDeclProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ParameterDeclProto.name)
}

// optional .ONNXIR.TypeProto type = 2;
inline bool ParameterDeclProto::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ParameterDeclProto::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ParameterDeclProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ParameterDeclProto::clear_type() {
  if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
  clear_has_type();
}
inline const ::ONNXIR::TypeProto& ParameterDeclProto::type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ParameterDeclProto.type)
  return type_ != NULL ? *type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
inline ::ONNXIR::TypeProto* ParameterDeclProto::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ParameterDeclProto.type)
  return type_;
}
inline ::ONNXIR::TypeProto* ParameterDeclProto::release_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.ParameterDeclProto.type)
  clear_has_type();
  ::ONNXIR::TypeProto* temp = type_;
  type_ = NULL;
  return temp;
}
inline void ParameterDeclProto::set_allocated_type(::ONNXIR::TypeProto* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ParameterDeclProto.type)
}

// optional string doc_string = 3;
inline bool ParameterDeclProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ParameterDeclProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ParameterDeclProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ParameterDeclProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& ParameterDeclProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ParameterDeclProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterDeclProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ParameterDeclProto.doc_string)
}
inline void ParameterDeclProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ParameterDeclProto.doc_string)
}
inline void ParameterDeclProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ParameterDeclProto.doc_string)
}
inline ::std::string* ParameterDeclProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ParameterDeclProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ParameterDeclProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.ParameterDeclProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ParameterDeclProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ParameterDeclProto.doc_string)
}

inline const ParameterDeclProto* ParameterDeclProto::internal_default_instance() {
  return &ParameterDeclProto_default_instance_.get();
}
// -------------------------------------------------------------------

// FunctionDefProto

// optional string name = 1;
inline bool FunctionDefProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionDefProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionDefProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionDefProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FunctionDefProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionDefProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.FunctionDefProto.name)
}
inline void FunctionDefProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.FunctionDefProto.name)
}
inline void FunctionDefProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.FunctionDefProto.name)
}
inline ::std::string* FunctionDefProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionDefProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.FunctionDefProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionDefProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.FunctionDefProto.name)
}

// repeated .ONNXIR.ParameterDeclProto input_params = 2;
inline int FunctionDefProto::input_params_size() const {
  return input_params_.size();
}
inline void FunctionDefProto::clear_input_params() {
  input_params_.Clear();
}
inline const ::ONNXIR::ParameterDeclProto& FunctionDefProto::input_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.input_params)
  return input_params_.Get(index);
}
inline ::ONNXIR::ParameterDeclProto* FunctionDefProto::mutable_input_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.input_params)
  return input_params_.Mutable(index);
}
inline ::ONNXIR::ParameterDeclProto* FunctionDefProto::add_input_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.input_params)
  return input_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
FunctionDefProto::mutable_input_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.input_params)
  return &input_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
FunctionDefProto::input_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.input_params)
  return input_params_;
}

// repeated .ONNXIR.ParameterDeclProto output_params = 3;
inline int FunctionDefProto::output_params_size() const {
  return output_params_.size();
}
inline void FunctionDefProto::clear_output_params() {
  output_params_.Clear();
}
inline const ::ONNXIR::ParameterDeclProto& FunctionDefProto::output_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.output_params)
  return output_params_.Get(index);
}
inline ::ONNXIR::ParameterDeclProto* FunctionDefProto::mutable_output_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.output_params)
  return output_params_.Mutable(index);
}
inline ::ONNXIR::ParameterDeclProto* FunctionDefProto::add_output_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.output_params)
  return output_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
FunctionDefProto::mutable_output_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.output_params)
  return &output_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
FunctionDefProto::output_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.output_params)
  return output_params_;
}

// repeated .ONNXIR.NodeProto node = 4;
inline int FunctionDefProto::node_size() const {
  return node_.size();
}
inline void FunctionDefProto::clear_node() {
  node_.Clear();
}
inline const ::ONNXIR::NodeProto& FunctionDefProto::node(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.node)
  return node_.Get(index);
}
inline ::ONNXIR::NodeProto* FunctionDefProto::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.node)
  return node_.Mutable(index);
}
inline ::ONNXIR::NodeProto* FunctionDefProto::add_node() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.node)
  return node_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >*
FunctionDefProto::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.node)
  return &node_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >&
FunctionDefProto::node() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.node)
  return node_;
}

// repeated .ONNXIR.AttributeProto attr = 5;
inline int FunctionDefProto::attr_size() const {
  return attr_.size();
}
inline void FunctionDefProto::clear_attr() {
  attr_.Clear();
}
inline const ::ONNXIR::AttributeProto& FunctionDefProto::attr(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.attr)
  return attr_.Get(index);
}
inline ::ONNXIR::AttributeProto* FunctionDefProto::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.attr)
  return attr_.Mutable(index);
}
inline ::ONNXIR::AttributeProto* FunctionDefProto::add_attr() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.attr)
  return attr_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >*
FunctionDefProto::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.attr)
  return &attr_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >&
FunctionDefProto::attr() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.attr)
  return attr_;
}

inline const FunctionDefProto* FunctionDefProto::internal_default_instance() {
  return &FunctionDefProto_default_instance_.get();
}
// -------------------------------------------------------------------

// SignatureDeclProto

// repeated .ONNXIR.ParameterDeclProto input_params = 1;
inline int SignatureDeclProto::input_params_size() const {
  return input_params_.size();
}
inline void SignatureDeclProto::clear_input_params() {
  input_params_.Clear();
}
inline const ::ONNXIR::ParameterDeclProto& SignatureDeclProto::input_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.input_params)
  return input_params_.Get(index);
}
inline ::ONNXIR::ParameterDeclProto* SignatureDeclProto::mutable_input_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.input_params)
  return input_params_.Mutable(index);
}
inline ::ONNXIR::ParameterDeclProto* SignatureDeclProto::add_input_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.SignatureDeclProto.input_params)
  return input_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
SignatureDeclProto::mutable_input_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SignatureDeclProto.input_params)
  return &input_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
SignatureDeclProto::input_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SignatureDeclProto.input_params)
  return input_params_;
}

// repeated .ONNXIR.ParameterDeclProto output_params = 2;
inline int SignatureDeclProto::output_params_size() const {
  return output_params_.size();
}
inline void SignatureDeclProto::clear_output_params() {
  output_params_.Clear();
}
inline const ::ONNXIR::ParameterDeclProto& SignatureDeclProto::output_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.output_params)
  return output_params_.Get(index);
}
inline ::ONNXIR::ParameterDeclProto* SignatureDeclProto::mutable_output_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.output_params)
  return output_params_.Mutable(index);
}
inline ::ONNXIR::ParameterDeclProto* SignatureDeclProto::add_output_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.SignatureDeclProto.output_params)
  return output_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
SignatureDeclProto::mutable_output_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SignatureDeclProto.output_params)
  return &output_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
SignatureDeclProto::output_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SignatureDeclProto.output_params)
  return output_params_;
}

// repeated .ONNXIR.ParameterDeclProto input_attributes = 3;
inline int SignatureDeclProto::input_attributes_size() const {
  return input_attributes_.size();
}
inline void SignatureDeclProto::clear_input_attributes() {
  input_attributes_.Clear();
}
inline const ::ONNXIR::ParameterDeclProto& SignatureDeclProto::input_attributes(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_.Get(index);
}
inline ::ONNXIR::ParameterDeclProto* SignatureDeclProto::mutable_input_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_.Mutable(index);
}
inline ::ONNXIR::ParameterDeclProto* SignatureDeclProto::add_input_attributes() {
  // @@protoc_insertion_point(field_add:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
SignatureDeclProto::mutable_input_attributes() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SignatureDeclProto.input_attributes)
  return &input_attributes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
SignatureDeclProto::input_attributes() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_;
}

// optional string doc_string = 4;
inline bool SignatureDeclProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SignatureDeclProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SignatureDeclProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SignatureDeclProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& SignatureDeclProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignatureDeclProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.SignatureDeclProto.doc_string)
}
inline void SignatureDeclProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.SignatureDeclProto.doc_string)
}
inline void SignatureDeclProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.SignatureDeclProto.doc_string)
}
inline ::std::string* SignatureDeclProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SignatureDeclProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.SignatureDeclProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SignatureDeclProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.SignatureDeclProto.doc_string)
}

inline const SignatureDeclProto* SignatureDeclProto::internal_default_instance() {
  return &SignatureDeclProto_default_instance_.get();
}
// -------------------------------------------------------------------

// OperatorDeclProto

// optional string name = 1;
inline bool OperatorDeclProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperatorDeclProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperatorDeclProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperatorDeclProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& OperatorDeclProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.OperatorDeclProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDeclProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.OperatorDeclProto.name)
}
inline void OperatorDeclProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.OperatorDeclProto.name)
}
inline void OperatorDeclProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.OperatorDeclProto.name)
}
inline ::std::string* OperatorDeclProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.OperatorDeclProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorDeclProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.OperatorDeclProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDeclProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.OperatorDeclProto.name)
}

// repeated .ONNXIR.SignatureDeclProto signature = 2;
inline int OperatorDeclProto::signature_size() const {
  return signature_.size();
}
inline void OperatorDeclProto::clear_signature() {
  signature_.Clear();
}
inline const ::ONNXIR::SignatureDeclProto& OperatorDeclProto::signature(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.OperatorDeclProto.signature)
  return signature_.Get(index);
}
inline ::ONNXIR::SignatureDeclProto* OperatorDeclProto::mutable_signature(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.OperatorDeclProto.signature)
  return signature_.Mutable(index);
}
inline ::ONNXIR::SignatureDeclProto* OperatorDeclProto::add_signature() {
  // @@protoc_insertion_point(field_add:ONNXIR.OperatorDeclProto.signature)
  return signature_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::SignatureDeclProto >*
OperatorDeclProto::mutable_signature() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.OperatorDeclProto.signature)
  return &signature_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::SignatureDeclProto >&
OperatorDeclProto::signature() const {
  // @@protoc_insertion_point(field_list:ONNXIR.OperatorDeclProto.signature)
  return signature_;
}

// optional string doc_string = 3;
inline bool OperatorDeclProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperatorDeclProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperatorDeclProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperatorDeclProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& OperatorDeclProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.OperatorDeclProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDeclProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.OperatorDeclProto.doc_string)
}
inline void OperatorDeclProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.OperatorDeclProto.doc_string)
}
inline void OperatorDeclProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.OperatorDeclProto.doc_string)
}
inline ::std::string* OperatorDeclProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.OperatorDeclProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorDeclProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.OperatorDeclProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorDeclProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.OperatorDeclProto.doc_string)
}

inline const OperatorDeclProto* OperatorDeclProto::internal_default_instance() {
  return &OperatorDeclProto_default_instance_.get();
}
// -------------------------------------------------------------------

// LibraryProto

// optional int64 ir_version = 1;
inline bool LibraryProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LibraryProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LibraryProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LibraryProto::clear_ir_version() {
  ir_version_ = GOOGLE_LONGLONG(0);
  clear_has_ir_version();
}
inline ::google::protobuf::int64 LibraryProto::ir_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.ir_version)
  return ir_version_;
}
inline void LibraryProto::set_ir_version(::google::protobuf::int64 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.ir_version)
}

// optional int64 producer_version = 2;
inline bool LibraryProto::has_producer_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LibraryProto::set_has_producer_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LibraryProto::clear_has_producer_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LibraryProto::clear_producer_version() {
  producer_version_ = GOOGLE_LONGLONG(0);
  clear_has_producer_version();
}
inline ::google::protobuf::int64 LibraryProto::producer_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.producer_version)
  return producer_version_;
}
inline void LibraryProto::set_producer_version(::google::protobuf::int64 value) {
  set_has_producer_version();
  producer_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.producer_version)
}

// optional string producer_tag = 3;
inline bool LibraryProto::has_producer_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LibraryProto::set_has_producer_tag() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LibraryProto::clear_has_producer_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LibraryProto::clear_producer_tag() {
  producer_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_tag();
}
inline const ::std::string& LibraryProto::producer_tag() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.producer_tag)
  return producer_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_producer_tag(const ::std::string& value) {
  set_has_producer_tag();
  producer_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.producer_tag)
}
inline void LibraryProto::set_producer_tag(const char* value) {
  set_has_producer_tag();
  producer_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.producer_tag)
}
inline void LibraryProto::set_producer_tag(const char* value, size_t size) {
  set_has_producer_tag();
  producer_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.producer_tag)
}
inline ::std::string* LibraryProto::mutable_producer_tag() {
  set_has_producer_tag();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.producer_tag)
  return producer_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LibraryProto::release_producer_tag() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.producer_tag)
  clear_has_producer_tag();
  return producer_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_allocated_producer_tag(::std::string* producer_tag) {
  if (producer_tag != NULL) {
    set_has_producer_tag();
  } else {
    clear_has_producer_tag();
  }
  producer_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_tag);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.producer_tag)
}

// optional int64 model_version = 4;
inline bool LibraryProto::has_model_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LibraryProto::set_has_model_version() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LibraryProto::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LibraryProto::clear_model_version() {
  model_version_ = GOOGLE_LONGLONG(0);
  clear_has_model_version();
}
inline ::google::protobuf::int64 LibraryProto::model_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.model_version)
  return model_version_;
}
inline void LibraryProto::set_model_version(::google::protobuf::int64 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.model_version)
}

// optional string model_author = 5;
inline bool LibraryProto::has_model_author() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LibraryProto::set_has_model_author() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LibraryProto::clear_has_model_author() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LibraryProto::clear_model_author() {
  model_author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_author();
}
inline const ::std::string& LibraryProto::model_author() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.model_author)
  return model_author_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_model_author(const ::std::string& value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.model_author)
}
inline void LibraryProto::set_model_author(const char* value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.model_author)
}
inline void LibraryProto::set_model_author(const char* value, size_t size) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.model_author)
}
inline ::std::string* LibraryProto::mutable_model_author() {
  set_has_model_author();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.model_author)
  return model_author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LibraryProto::release_model_author() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.model_author)
  clear_has_model_author();
  return model_author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_allocated_model_author(::std::string* model_author) {
  if (model_author != NULL) {
    set_has_model_author();
  } else {
    clear_has_model_author();
  }
  model_author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_author);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.model_author)
}

// optional string model_license = 6;
inline bool LibraryProto::has_model_license() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LibraryProto::set_has_model_license() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LibraryProto::clear_has_model_license() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LibraryProto::clear_model_license() {
  model_license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_license();
}
inline const ::std::string& LibraryProto::model_license() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.model_license)
  return model_license_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_model_license(const ::std::string& value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.model_license)
}
inline void LibraryProto::set_model_license(const char* value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.model_license)
}
inline void LibraryProto::set_model_license(const char* value, size_t size) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.model_license)
}
inline ::std::string* LibraryProto::mutable_model_license() {
  set_has_model_license();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.model_license)
  return model_license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LibraryProto::release_model_license() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.model_license)
  clear_has_model_license();
  return model_license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_allocated_model_license(::std::string* model_license) {
  if (model_license != NULL) {
    set_has_model_license();
  } else {
    clear_has_model_license();
  }
  model_license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_license);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.model_license)
}

// optional string name = 7;
inline bool LibraryProto::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LibraryProto::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LibraryProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LibraryProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LibraryProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.name)
}
inline void LibraryProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.name)
}
inline void LibraryProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.name)
}
inline ::std::string* LibraryProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LibraryProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.name)
}

// optional string domain = 8;
inline bool LibraryProto::has_domain() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LibraryProto::set_has_domain() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LibraryProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LibraryProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
inline const ::std::string& LibraryProto::domain() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.domain)
}
inline void LibraryProto::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.domain)
}
inline void LibraryProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.domain)
}
inline ::std::string* LibraryProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LibraryProto::release_domain() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.domain)
}

// optional string doc_string = 9;
inline bool LibraryProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LibraryProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LibraryProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LibraryProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& LibraryProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.doc_string)
}
inline void LibraryProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.doc_string)
}
inline void LibraryProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.doc_string)
}
inline ::std::string* LibraryProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LibraryProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LibraryProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.doc_string)
}

// repeated .ONNXIR.OperatorDeclProto operator = 10;
inline int LibraryProto::operator__size() const {
  return operator__.size();
}
inline void LibraryProto::clear_operator_() {
  operator__.Clear();
}
inline const ::ONNXIR::OperatorDeclProto& LibraryProto::operator_(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.operator)
  return operator__.Get(index);
}
inline ::ONNXIR::OperatorDeclProto* LibraryProto::mutable_operator_(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.operator)
  return operator__.Mutable(index);
}
inline ::ONNXIR::OperatorDeclProto* LibraryProto::add_operator_() {
  // @@protoc_insertion_point(field_add:ONNXIR.LibraryProto.operator)
  return operator__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >*
LibraryProto::mutable_operator_() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.LibraryProto.operator)
  return &operator__;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >&
LibraryProto::operator_() const {
  // @@protoc_insertion_point(field_list:ONNXIR.LibraryProto.operator)
  return operator__;
}

// repeated .ONNXIR.FunctionDefProto function = 11;
inline int LibraryProto::function_size() const {
  return function_.size();
}
inline void LibraryProto::clear_function() {
  function_.Clear();
}
inline const ::ONNXIR::FunctionDefProto& LibraryProto::function(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.function)
  return function_.Get(index);
}
inline ::ONNXIR::FunctionDefProto* LibraryProto::mutable_function(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.function)
  return function_.Mutable(index);
}
inline ::ONNXIR::FunctionDefProto* LibraryProto::add_function() {
  // @@protoc_insertion_point(field_add:ONNXIR.LibraryProto.function)
  return function_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >*
LibraryProto::mutable_function() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.LibraryProto.function)
  return &function_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >&
LibraryProto::function() const {
  // @@protoc_insertion_point(field_list:ONNXIR.LibraryProto.function)
  return function_;
}

// repeated string imported_libraries = 12;
inline int LibraryProto::imported_libraries_size() const {
  return imported_libraries_.size();
}
inline void LibraryProto::clear_imported_libraries() {
  imported_libraries_.Clear();
}
inline const ::std::string& LibraryProto::imported_libraries(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_.Get(index);
}
inline ::std::string* LibraryProto::mutable_imported_libraries(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_.Mutable(index);
}
inline void LibraryProto::set_imported_libraries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.imported_libraries)
  imported_libraries_.Mutable(index)->assign(value);
}
inline void LibraryProto::set_imported_libraries(int index, const char* value) {
  imported_libraries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.imported_libraries)
}
inline void LibraryProto::set_imported_libraries(int index, const char* value, size_t size) {
  imported_libraries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.imported_libraries)
}
inline ::std::string* LibraryProto::add_imported_libraries() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_.Add();
}
inline void LibraryProto::add_imported_libraries(const ::std::string& value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.LibraryProto.imported_libraries)
}
inline void LibraryProto::add_imported_libraries(const char* value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.LibraryProto.imported_libraries)
}
inline void LibraryProto::add_imported_libraries(const char* value, size_t size) {
  imported_libraries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.LibraryProto.imported_libraries)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
LibraryProto::imported_libraries() const {
  // @@protoc_insertion_point(field_list:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
LibraryProto::mutable_imported_libraries() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.LibraryProto.imported_libraries)
  return &imported_libraries_;
}

inline const LibraryProto* LibraryProto::internal_default_instance() {
  return &LibraryProto_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ONNXIR

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ONNXIR::TensorProto_DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ONNXIR::TensorProto_DataType>() {
  return ::ONNXIR::TensorProto_DataType_descriptor();
}
template <> struct is_proto_enum< ::ONNXIR::Version> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ONNXIR::Version>() {
  return ::ONNXIR::Version_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_graph_2eproto__INCLUDED
