// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: onnx-operators-ml.proto

#ifndef PROTOBUF_onnx_2doperators_2dml_2eproto__INCLUDED
#define PROTOBUF_onnx_2doperators_2dml_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "onnx-ml.pb.h"
// @@protoc_insertion_point(includes)

namespace onnx {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_onnx_2doperators_2dml_2eproto();
void protobuf_InitDefaults_onnx_2doperators_2dml_2eproto();
void protobuf_AssignDesc_onnx_2doperators_2dml_2eproto();
void protobuf_ShutdownFile_onnx_2doperators_2dml_2eproto();

class FunctionProto;
class OperatorProto;
class OperatorSetProto;

enum OperatorStatus {
  EXPERIMENTAL = 0,
  STABLE = 1
};
bool OperatorStatus_IsValid(int value);
const OperatorStatus OperatorStatus_MIN = EXPERIMENTAL;
const OperatorStatus OperatorStatus_MAX = STABLE;
const int OperatorStatus_ARRAYSIZE = OperatorStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* OperatorStatus_descriptor();
inline const ::std::string& OperatorStatus_Name(OperatorStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    OperatorStatus_descriptor(), value);
}
inline bool OperatorStatus_Parse(
    const ::std::string& name, OperatorStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OperatorStatus>(
    OperatorStatus_descriptor(), name, value);
}
// ===================================================================

class FunctionProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onnx.FunctionProto) */ {
 public:
  FunctionProto();
  virtual ~FunctionProto();

  FunctionProto(const FunctionProto& from);

  inline FunctionProto& operator=(const FunctionProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FunctionProto& default_instance();

  static const FunctionProto* internal_default_instance();

  void Swap(FunctionProto* other);

  // implements Message ----------------------------------------------

  inline FunctionProto* New() const { return New(NULL); }

  FunctionProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FunctionProto& from);
  void MergeFrom(const FunctionProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FunctionProto* other);
  void UnsafeMergeFrom(const FunctionProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int64 since_version = 2;
  bool has_since_version() const;
  void clear_since_version();
  static const int kSinceVersionFieldNumber = 2;
  ::google::protobuf::int64 since_version() const;
  void set_since_version(::google::protobuf::int64 value);

  // optional .onnx.OperatorStatus status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::onnx::OperatorStatus status() const;
  void set_status(::onnx::OperatorStatus value);

  // repeated string input = 4;
  int input_size() const;
  void clear_input();
  static const int kInputFieldNumber = 4;
  const ::std::string& input(int index) const;
  ::std::string* mutable_input(int index);
  void set_input(int index, const ::std::string& value);
  void set_input(int index, const char* value);
  void set_input(int index, const char* value, size_t size);
  ::std::string* add_input();
  void add_input(const ::std::string& value);
  void add_input(const char* value);
  void add_input(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& input() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_input();

  // repeated string output = 5;
  int output_size() const;
  void clear_output();
  static const int kOutputFieldNumber = 5;
  const ::std::string& output(int index) const;
  ::std::string* mutable_output(int index);
  void set_output(int index, const ::std::string& value);
  void set_output(int index, const char* value);
  void set_output(int index, const char* value, size_t size);
  ::std::string* add_output();
  void add_output(const ::std::string& value);
  void add_output(const char* value);
  void add_output(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& output() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_output();

  // repeated string attribute = 6;
  int attribute_size() const;
  void clear_attribute();
  static const int kAttributeFieldNumber = 6;
  const ::std::string& attribute(int index) const;
  ::std::string* mutable_attribute(int index);
  void set_attribute(int index, const ::std::string& value);
  void set_attribute(int index, const char* value);
  void set_attribute(int index, const char* value, size_t size);
  ::std::string* add_attribute();
  void add_attribute(const ::std::string& value);
  void add_attribute(const char* value);
  void add_attribute(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& attribute() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_attribute();

  // repeated .onnx.NodeProto node = 7;
  int node_size() const;
  void clear_node();
  static const int kNodeFieldNumber = 7;
  const ::onnx::NodeProto& node(int index) const;
  ::onnx::NodeProto* mutable_node(int index);
  ::onnx::NodeProto* add_node();
  ::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >*
      mutable_node();
  const ::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >&
      node() const;

  // optional string doc_string = 8;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 8;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // @@protoc_insertion_point(class_scope:onnx.FunctionProto)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_since_version();
  inline void clear_has_since_version();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> input_;
  ::google::protobuf::RepeatedPtrField< ::std::string> output_;
  ::google::protobuf::RepeatedPtrField< ::std::string> attribute_;
  ::google::protobuf::RepeatedPtrField< ::onnx::NodeProto > node_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::google::protobuf::int64 since_version_;
  int status_;
  friend void  protobuf_InitDefaults_onnx_2doperators_2dml_2eproto_impl();
  friend void  protobuf_AddDesc_onnx_2doperators_2dml_2eproto_impl();
  friend void protobuf_AssignDesc_onnx_2doperators_2dml_2eproto();
  friend void protobuf_ShutdownFile_onnx_2doperators_2dml_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FunctionProto> FunctionProto_default_instance_;

// -------------------------------------------------------------------

class OperatorProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onnx.OperatorProto) */ {
 public:
  OperatorProto();
  virtual ~OperatorProto();

  OperatorProto(const OperatorProto& from);

  inline OperatorProto& operator=(const OperatorProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorProto& default_instance();

  static const OperatorProto* internal_default_instance();

  void Swap(OperatorProto* other);

  // implements Message ----------------------------------------------

  inline OperatorProto* New() const { return New(NULL); }

  OperatorProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperatorProto& from);
  void MergeFrom(const OperatorProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperatorProto* other);
  void UnsafeMergeFrom(const OperatorProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string op_type = 1;
  bool has_op_type() const;
  void clear_op_type();
  static const int kOpTypeFieldNumber = 1;
  const ::std::string& op_type() const;
  void set_op_type(const ::std::string& value);
  void set_op_type(const char* value);
  void set_op_type(const char* value, size_t size);
  ::std::string* mutable_op_type();
  ::std::string* release_op_type();
  void set_allocated_op_type(::std::string* op_type);

  // optional int64 since_version = 2;
  bool has_since_version() const;
  void clear_since_version();
  static const int kSinceVersionFieldNumber = 2;
  ::google::protobuf::int64 since_version() const;
  void set_since_version(::google::protobuf::int64 value);

  // optional .onnx.OperatorStatus status = 3;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::onnx::OperatorStatus status() const;
  void set_status(::onnx::OperatorStatus value);

  // optional string doc_string = 10;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 10;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // @@protoc_insertion_point(class_scope:onnx.OperatorProto)
 private:
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_since_version();
  inline void clear_has_since_version();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr op_type_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::google::protobuf::int64 since_version_;
  int status_;
  friend void  protobuf_InitDefaults_onnx_2doperators_2dml_2eproto_impl();
  friend void  protobuf_AddDesc_onnx_2doperators_2dml_2eproto_impl();
  friend void protobuf_AssignDesc_onnx_2doperators_2dml_2eproto();
  friend void protobuf_ShutdownFile_onnx_2doperators_2dml_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperatorProto> OperatorProto_default_instance_;

// -------------------------------------------------------------------

class OperatorSetProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:onnx.OperatorSetProto) */ {
 public:
  OperatorSetProto();
  virtual ~OperatorSetProto();

  OperatorSetProto(const OperatorSetProto& from);

  inline OperatorSetProto& operator=(const OperatorSetProto& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OperatorSetProto& default_instance();

  static const OperatorSetProto* internal_default_instance();

  void Swap(OperatorSetProto* other);

  // implements Message ----------------------------------------------

  inline OperatorSetProto* New() const { return New(NULL); }

  OperatorSetProto* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OperatorSetProto& from);
  void MergeFrom(const OperatorSetProto& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(OperatorSetProto* other);
  void UnsafeMergeFrom(const OperatorSetProto& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string magic = 1;
  bool has_magic() const;
  void clear_magic();
  static const int kMagicFieldNumber = 1;
  const ::std::string& magic() const;
  void set_magic(const ::std::string& value);
  void set_magic(const char* value);
  void set_magic(const char* value, size_t size);
  ::std::string* mutable_magic();
  ::std::string* release_magic();
  void set_allocated_magic(::std::string* magic);

  // optional int32 ir_version = 2;
  bool has_ir_version() const;
  void clear_ir_version();
  static const int kIrVersionFieldNumber = 2;
  ::google::protobuf::int32 ir_version() const;
  void set_ir_version(::google::protobuf::int32 value);

  // optional string ir_version_prerelease = 3;
  bool has_ir_version_prerelease() const;
  void clear_ir_version_prerelease();
  static const int kIrVersionPrereleaseFieldNumber = 3;
  const ::std::string& ir_version_prerelease() const;
  void set_ir_version_prerelease(const ::std::string& value);
  void set_ir_version_prerelease(const char* value);
  void set_ir_version_prerelease(const char* value, size_t size);
  ::std::string* mutable_ir_version_prerelease();
  ::std::string* release_ir_version_prerelease();
  void set_allocated_ir_version_prerelease(::std::string* ir_version_prerelease);

  // optional string ir_build_metadata = 7;
  bool has_ir_build_metadata() const;
  void clear_ir_build_metadata();
  static const int kIrBuildMetadataFieldNumber = 7;
  const ::std::string& ir_build_metadata() const;
  void set_ir_build_metadata(const ::std::string& value);
  void set_ir_build_metadata(const char* value);
  void set_ir_build_metadata(const char* value, size_t size);
  ::std::string* mutable_ir_build_metadata();
  ::std::string* release_ir_build_metadata();
  void set_allocated_ir_build_metadata(::std::string* ir_build_metadata);

  // optional string domain = 4;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 4;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional int64 opset_version = 5;
  bool has_opset_version() const;
  void clear_opset_version();
  static const int kOpsetVersionFieldNumber = 5;
  ::google::protobuf::int64 opset_version() const;
  void set_opset_version(::google::protobuf::int64 value);

  // optional string doc_string = 6;
  bool has_doc_string() const;
  void clear_doc_string();
  static const int kDocStringFieldNumber = 6;
  const ::std::string& doc_string() const;
  void set_doc_string(const ::std::string& value);
  void set_doc_string(const char* value);
  void set_doc_string(const char* value, size_t size);
  ::std::string* mutable_doc_string();
  ::std::string* release_doc_string();
  void set_allocated_doc_string(::std::string* doc_string);

  // repeated .onnx.OperatorProto operator = 8;
  int operator__size() const;
  void clear_operator_();
  static const int kOperatorFieldNumber = 8;
  const ::onnx::OperatorProto& operator_(int index) const;
  ::onnx::OperatorProto* mutable_operator_(int index);
  ::onnx::OperatorProto* add_operator_();
  ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >*
      mutable_operator_();
  const ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >&
      operator_() const;

  // repeated .onnx.FunctionProto functions = 9;
  int functions_size() const;
  void clear_functions();
  static const int kFunctionsFieldNumber = 9;
  const ::onnx::FunctionProto& functions(int index) const;
  ::onnx::FunctionProto* mutable_functions(int index);
  ::onnx::FunctionProto* add_functions();
  ::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto >*
      mutable_functions();
  const ::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto >&
      functions() const;

  // @@protoc_insertion_point(class_scope:onnx.OperatorSetProto)
 private:
  inline void set_has_magic();
  inline void clear_has_magic();
  inline void set_has_ir_version();
  inline void clear_has_ir_version();
  inline void set_has_ir_version_prerelease();
  inline void clear_has_ir_version_prerelease();
  inline void set_has_ir_build_metadata();
  inline void clear_has_ir_build_metadata();
  inline void set_has_domain();
  inline void clear_has_domain();
  inline void set_has_opset_version();
  inline void clear_has_opset_version();
  inline void set_has_doc_string();
  inline void clear_has_doc_string();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto > operator__;
  ::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto > functions_;
  ::google::protobuf::internal::ArenaStringPtr magic_;
  ::google::protobuf::internal::ArenaStringPtr ir_version_prerelease_;
  ::google::protobuf::internal::ArenaStringPtr ir_build_metadata_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr doc_string_;
  ::google::protobuf::int64 opset_version_;
  ::google::protobuf::int32 ir_version_;
  friend void  protobuf_InitDefaults_onnx_2doperators_2dml_2eproto_impl();
  friend void  protobuf_AddDesc_onnx_2doperators_2dml_2eproto_impl();
  friend void protobuf_AssignDesc_onnx_2doperators_2dml_2eproto();
  friend void protobuf_ShutdownFile_onnx_2doperators_2dml_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<OperatorSetProto> OperatorSetProto_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// FunctionProto

// optional string name = 1;
inline bool FunctionProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FunctionProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FunctionProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FunctionProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& FunctionProto::name() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.name)
}
inline void FunctionProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.name)
}
inline void FunctionProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.name)
}
inline ::std::string* FunctionProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionProto::release_name() {
  // @@protoc_insertion_point(field_release:onnx.FunctionProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:onnx.FunctionProto.name)
}

// optional int64 since_version = 2;
inline bool FunctionProto::has_since_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FunctionProto::set_has_since_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FunctionProto::clear_has_since_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FunctionProto::clear_since_version() {
  since_version_ = GOOGLE_LONGLONG(0);
  clear_has_since_version();
}
inline ::google::protobuf::int64 FunctionProto::since_version() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.since_version)
  return since_version_;
}
inline void FunctionProto::set_since_version(::google::protobuf::int64 value) {
  set_has_since_version();
  since_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.since_version)
}

// optional .onnx.OperatorStatus status = 3;
inline bool FunctionProto::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FunctionProto::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FunctionProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FunctionProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::onnx::OperatorStatus FunctionProto::status() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.status)
  return static_cast< ::onnx::OperatorStatus >(status_);
}
inline void FunctionProto::set_status(::onnx::OperatorStatus value) {
  assert(::onnx::OperatorStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.status)
}

// repeated string input = 4;
inline int FunctionProto::input_size() const {
  return input_.size();
}
inline void FunctionProto::clear_input() {
  input_.Clear();
}
inline const ::std::string& FunctionProto::input(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.input)
  return input_.Get(index);
}
inline ::std::string* FunctionProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.input)
  return input_.Mutable(index);
}
inline void FunctionProto::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.input)
  input_.Mutable(index)->assign(value);
}
inline void FunctionProto::set_input(int index, const char* value) {
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.input)
}
inline void FunctionProto::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.input)
}
inline ::std::string* FunctionProto::add_input() {
  // @@protoc_insertion_point(field_add_mutable:onnx.FunctionProto.input)
  return input_.Add();
}
inline void FunctionProto::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.input)
}
inline void FunctionProto::add_input(const char* value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.FunctionProto.input)
}
inline void FunctionProto::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.FunctionProto.input)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionProto::input() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.input)
  return input_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.input)
  return &input_;
}

// repeated string output = 5;
inline int FunctionProto::output_size() const {
  return output_.size();
}
inline void FunctionProto::clear_output() {
  output_.Clear();
}
inline const ::std::string& FunctionProto::output(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.output)
  return output_.Get(index);
}
inline ::std::string* FunctionProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.output)
  return output_.Mutable(index);
}
inline void FunctionProto::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.output)
  output_.Mutable(index)->assign(value);
}
inline void FunctionProto::set_output(int index, const char* value) {
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.output)
}
inline void FunctionProto::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.output)
}
inline ::std::string* FunctionProto::add_output() {
  // @@protoc_insertion_point(field_add_mutable:onnx.FunctionProto.output)
  return output_.Add();
}
inline void FunctionProto::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.output)
}
inline void FunctionProto::add_output(const char* value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.FunctionProto.output)
}
inline void FunctionProto::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.FunctionProto.output)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionProto::output() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.output)
  return output_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.output)
  return &output_;
}

// repeated string attribute = 6;
inline int FunctionProto::attribute_size() const {
  return attribute_.size();
}
inline void FunctionProto::clear_attribute() {
  attribute_.Clear();
}
inline const ::std::string& FunctionProto::attribute(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.attribute)
  return attribute_.Get(index);
}
inline ::std::string* FunctionProto::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.attribute)
  return attribute_.Mutable(index);
}
inline void FunctionProto::set_attribute(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.attribute)
  attribute_.Mutable(index)->assign(value);
}
inline void FunctionProto::set_attribute(int index, const char* value) {
  attribute_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.attribute)
}
inline void FunctionProto::set_attribute(int index, const char* value, size_t size) {
  attribute_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.attribute)
}
inline ::std::string* FunctionProto::add_attribute() {
  // @@protoc_insertion_point(field_add_mutable:onnx.FunctionProto.attribute)
  return attribute_.Add();
}
inline void FunctionProto::add_attribute(const ::std::string& value) {
  attribute_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.attribute)
}
inline void FunctionProto::add_attribute(const char* value) {
  attribute_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:onnx.FunctionProto.attribute)
}
inline void FunctionProto::add_attribute(const char* value, size_t size) {
  attribute_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:onnx.FunctionProto.attribute)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FunctionProto::attribute() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.attribute)
  return attribute_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FunctionProto::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.attribute)
  return &attribute_;
}

// repeated .onnx.NodeProto node = 7;
inline int FunctionProto::node_size() const {
  return node_.size();
}
inline void FunctionProto::clear_node() {
  node_.Clear();
}
inline const ::onnx::NodeProto& FunctionProto::node(int index) const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.node)
  return node_.Get(index);
}
inline ::onnx::NodeProto* FunctionProto::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.node)
  return node_.Mutable(index);
}
inline ::onnx::NodeProto* FunctionProto::add_node() {
  // @@protoc_insertion_point(field_add:onnx.FunctionProto.node)
  return node_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >*
FunctionProto::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:onnx.FunctionProto.node)
  return &node_;
}
inline const ::google::protobuf::RepeatedPtrField< ::onnx::NodeProto >&
FunctionProto::node() const {
  // @@protoc_insertion_point(field_list:onnx.FunctionProto.node)
  return node_;
}

// optional string doc_string = 8;
inline bool FunctionProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FunctionProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FunctionProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FunctionProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& FunctionProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.FunctionProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.FunctionProto.doc_string)
}
inline void FunctionProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.FunctionProto.doc_string)
}
inline void FunctionProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.FunctionProto.doc_string)
}
inline ::std::string* FunctionProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.FunctionProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FunctionProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.FunctionProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FunctionProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.FunctionProto.doc_string)
}

inline const FunctionProto* FunctionProto::internal_default_instance() {
  return &FunctionProto_default_instance_.get();
}
// -------------------------------------------------------------------

// OperatorProto

// optional string op_type = 1;
inline bool OperatorProto::has_op_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperatorProto::set_has_op_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperatorProto::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperatorProto::clear_op_type() {
  op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_type();
}
inline const ::std::string& OperatorProto::op_type() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.op_type)
  return op_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorProto::set_op_type(const ::std::string& value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.op_type)
}
inline void OperatorProto::set_op_type(const char* value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorProto.op_type)
}
inline void OperatorProto::set_op_type(const char* value, size_t size) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorProto.op_type)
}
inline ::std::string* OperatorProto::mutable_op_type() {
  set_has_op_type();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.op_type)
  return op_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorProto::release_op_type() {
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.op_type)
  clear_has_op_type();
  return op_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorProto::set_allocated_op_type(::std::string* op_type) {
  if (op_type != NULL) {
    set_has_op_type();
  } else {
    clear_has_op_type();
  }
  op_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_type);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.op_type)
}

// optional int64 since_version = 2;
inline bool OperatorProto::has_since_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperatorProto::set_has_since_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperatorProto::clear_has_since_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperatorProto::clear_since_version() {
  since_version_ = GOOGLE_LONGLONG(0);
  clear_has_since_version();
}
inline ::google::protobuf::int64 OperatorProto::since_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.since_version)
  return since_version_;
}
inline void OperatorProto::set_since_version(::google::protobuf::int64 value) {
  set_has_since_version();
  since_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.since_version)
}

// optional .onnx.OperatorStatus status = 3;
inline bool OperatorProto::has_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperatorProto::set_has_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperatorProto::clear_has_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperatorProto::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::onnx::OperatorStatus OperatorProto::status() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.status)
  return static_cast< ::onnx::OperatorStatus >(status_);
}
inline void OperatorProto::set_status(::onnx::OperatorStatus value) {
  assert(::onnx::OperatorStatus_IsValid(value));
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.status)
}

// optional string doc_string = 10;
inline bool OperatorProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperatorProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperatorProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperatorProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& OperatorProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.doc_string)
}
inline void OperatorProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorProto.doc_string)
}
inline void OperatorProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorProto.doc_string)
}
inline ::std::string* OperatorProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.doc_string)
}

inline const OperatorProto* OperatorProto::internal_default_instance() {
  return &OperatorProto_default_instance_.get();
}
// -------------------------------------------------------------------

// OperatorSetProto

// optional string magic = 1;
inline bool OperatorSetProto::has_magic() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OperatorSetProto::set_has_magic() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OperatorSetProto::clear_has_magic() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OperatorSetProto::clear_magic() {
  magic_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_magic();
}
inline const ::std::string& OperatorSetProto::magic() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.magic)
  return magic_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_magic(const ::std::string& value) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.magic)
}
inline void OperatorSetProto::set_magic(const char* value) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.magic)
}
inline void OperatorSetProto::set_magic(const char* value, size_t size) {
  set_has_magic();
  magic_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.magic)
}
inline ::std::string* OperatorSetProto::mutable_magic() {
  set_has_magic();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.magic)
  return magic_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_magic() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.magic)
  clear_has_magic();
  return magic_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_magic(::std::string* magic) {
  if (magic != NULL) {
    set_has_magic();
  } else {
    clear_has_magic();
  }
  magic_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), magic);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.magic)
}

// optional int32 ir_version = 2;
inline bool OperatorSetProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OperatorSetProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OperatorSetProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OperatorSetProto::clear_ir_version() {
  ir_version_ = 0;
  clear_has_ir_version();
}
inline ::google::protobuf::int32 OperatorSetProto::ir_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version)
  return ir_version_;
}
inline void OperatorSetProto::set_ir_version(::google::protobuf::int32 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version)
}

// optional string ir_version_prerelease = 3;
inline bool OperatorSetProto::has_ir_version_prerelease() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OperatorSetProto::set_has_ir_version_prerelease() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OperatorSetProto::clear_has_ir_version_prerelease() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OperatorSetProto::clear_ir_version_prerelease() {
  ir_version_prerelease_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ir_version_prerelease();
}
inline const ::std::string& OperatorSetProto::ir_version_prerelease() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version_prerelease)
  return ir_version_prerelease_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_ir_version_prerelease(const ::std::string& value) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version_prerelease)
}
inline void OperatorSetProto::set_ir_version_prerelease(const char* value) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.ir_version_prerelease)
}
inline void OperatorSetProto::set_ir_version_prerelease(const char* value, size_t size) {
  set_has_ir_version_prerelease();
  ir_version_prerelease_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.ir_version_prerelease)
}
inline ::std::string* OperatorSetProto::mutable_ir_version_prerelease() {
  set_has_ir_version_prerelease();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_version_prerelease)
  return ir_version_prerelease_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_ir_version_prerelease() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_version_prerelease)
  clear_has_ir_version_prerelease();
  return ir_version_prerelease_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_ir_version_prerelease(::std::string* ir_version_prerelease) {
  if (ir_version_prerelease != NULL) {
    set_has_ir_version_prerelease();
  } else {
    clear_has_ir_version_prerelease();
  }
  ir_version_prerelease_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ir_version_prerelease);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_version_prerelease)
}

// optional string ir_build_metadata = 7;
inline bool OperatorSetProto::has_ir_build_metadata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OperatorSetProto::set_has_ir_build_metadata() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OperatorSetProto::clear_has_ir_build_metadata() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OperatorSetProto::clear_ir_build_metadata() {
  ir_build_metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ir_build_metadata();
}
inline const ::std::string& OperatorSetProto::ir_build_metadata() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_build_metadata)
  return ir_build_metadata_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_ir_build_metadata(const ::std::string& value) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_build_metadata)
}
inline void OperatorSetProto::set_ir_build_metadata(const char* value) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.ir_build_metadata)
}
inline void OperatorSetProto::set_ir_build_metadata(const char* value, size_t size) {
  set_has_ir_build_metadata();
  ir_build_metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.ir_build_metadata)
}
inline ::std::string* OperatorSetProto::mutable_ir_build_metadata() {
  set_has_ir_build_metadata();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_build_metadata)
  return ir_build_metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_ir_build_metadata() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_build_metadata)
  clear_has_ir_build_metadata();
  return ir_build_metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_ir_build_metadata(::std::string* ir_build_metadata) {
  if (ir_build_metadata != NULL) {
    set_has_ir_build_metadata();
  } else {
    clear_has_ir_build_metadata();
  }
  ir_build_metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ir_build_metadata);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_build_metadata)
}

// optional string domain = 4;
inline bool OperatorSetProto::has_domain() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OperatorSetProto::set_has_domain() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OperatorSetProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OperatorSetProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
inline const ::std::string& OperatorSetProto::domain() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.domain)
}
inline void OperatorSetProto::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.domain)
}
inline void OperatorSetProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.domain)
}
inline ::std::string* OperatorSetProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_domain() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.domain)
}

// optional int64 opset_version = 5;
inline bool OperatorSetProto::has_opset_version() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OperatorSetProto::set_has_opset_version() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OperatorSetProto::clear_has_opset_version() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OperatorSetProto::clear_opset_version() {
  opset_version_ = GOOGLE_LONGLONG(0);
  clear_has_opset_version();
}
inline ::google::protobuf::int64 OperatorSetProto::opset_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.opset_version)
  return opset_version_;
}
inline void OperatorSetProto::set_opset_version(::google::protobuf::int64 value) {
  set_has_opset_version();
  opset_version_ = value;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.opset_version)
}

// optional string doc_string = 6;
inline bool OperatorSetProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OperatorSetProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OperatorSetProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OperatorSetProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
inline const ::std::string& OperatorSetProto::doc_string() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.doc_string)
}
inline void OperatorSetProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:onnx.OperatorSetProto.doc_string)
}
inline void OperatorSetProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:onnx.OperatorSetProto.doc_string)
}
inline ::std::string* OperatorSetProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OperatorSetProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OperatorSetProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.doc_string)
}

// repeated .onnx.OperatorProto operator = 8;
inline int OperatorSetProto::operator__size() const {
  return operator__.size();
}
inline void OperatorSetProto::clear_operator_() {
  operator__.Clear();
}
inline const ::onnx::OperatorProto& OperatorSetProto::operator_(int index) const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.operator)
  return operator__.Get(index);
}
inline ::onnx::OperatorProto* OperatorSetProto::mutable_operator_(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.operator)
  return operator__.Mutable(index);
}
inline ::onnx::OperatorProto* OperatorSetProto::add_operator_() {
  // @@protoc_insertion_point(field_add:onnx.OperatorSetProto.operator)
  return operator__.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >*
OperatorSetProto::mutable_operator_() {
  // @@protoc_insertion_point(field_mutable_list:onnx.OperatorSetProto.operator)
  return &operator__;
}
inline const ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto >&
OperatorSetProto::operator_() const {
  // @@protoc_insertion_point(field_list:onnx.OperatorSetProto.operator)
  return operator__;
}

// repeated .onnx.FunctionProto functions = 9;
inline int OperatorSetProto::functions_size() const {
  return functions_.size();
}
inline void OperatorSetProto::clear_functions() {
  functions_.Clear();
}
inline const ::onnx::FunctionProto& OperatorSetProto::functions(int index) const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.functions)
  return functions_.Get(index);
}
inline ::onnx::FunctionProto* OperatorSetProto::mutable_functions(int index) {
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.functions)
  return functions_.Mutable(index);
}
inline ::onnx::FunctionProto* OperatorSetProto::add_functions() {
  // @@protoc_insertion_point(field_add:onnx.OperatorSetProto.functions)
  return functions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto >*
OperatorSetProto::mutable_functions() {
  // @@protoc_insertion_point(field_mutable_list:onnx.OperatorSetProto.functions)
  return &functions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto >&
OperatorSetProto::functions() const {
  // @@protoc_insertion_point(field_list:onnx.OperatorSetProto.functions)
  return functions_;
}

inline const OperatorSetProto* OperatorSetProto::internal_default_instance() {
  return &OperatorSetProto_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace onnx

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::onnx::OperatorStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::onnx::OperatorStatus>() {
  return ::onnx::OperatorStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_onnx_2doperators_2dml_2eproto__INCLUDED
