// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: graph.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "graph.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ONNXIR {

namespace {

const ::google::protobuf::Descriptor* AttributeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AttributeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ValueInfoProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValueInfoProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ModelProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ModelProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* GraphProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GraphProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TensorProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TensorProto_Segment_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TensorProto_Segment_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* TensorProto_DataType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SparseTensorProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SparseTensorProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_reflection_ = NULL;
struct TypeProtoOneofInstance {
  const ::ONNXIR::TypeProto_TensorTypeProto* tensor_type_;
  const ::ONNXIR::TypeProto_SparseTensorTypeProto* sparse_tensor_type_;
  const ::ONNXIR::TypeProto_HandleTypeProto* handle_type_;
  const ::ONNXIR::TypeProto_TupleTypeProto* tuple_type_;
  const ::ONNXIR::TypeProto_SeqTypeProto* seq_type_;
  const ::ONNXIR::TypeProto_MapTypeProto* map_type_;
}* TypeProto_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_TensorShapeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_TensorShapeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_TensorShapeProto_Dimension_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_TensorShapeProto_Dimension_reflection_ = NULL;
struct TypeProto_TensorShapeProto_DimensionOneofInstance {
  ::google::protobuf::int64 dim_value_;
  ::google::protobuf::internal::ArenaStringPtr dim_param_;
}* TypeProto_TensorShapeProto_Dimension_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_TensorTypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_TensorTypeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_SparseTensorTypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_SparseTensorTypeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_HandleTypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_HandleTypeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_TupleTypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_TupleTypeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_SeqTypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_SeqTypeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* TypeProto_MapTypeProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TypeProto_MapTypeProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ValueProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValueProto_reflection_ = NULL;
struct ValueProtoOneofInstance {
  const ::ONNXIR::TensorProto* dense_tensor_;
  const ::ONNXIR::SparseTensorProto* sparse_tensor_;
  const ::ONNXIR::ValueProto_HandleProto* handle_;
  const ::ONNXIR::ValueProto_TupleProto* tuple_;
  const ::ONNXIR::ValueProto_SequenceProto* seq_;
  const ::ONNXIR::ValueProto_MapProto* map_;
}* ValueProto_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* ValueProto_HandleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValueProto_HandleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ValueProto_TupleProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValueProto_TupleProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ValueProto_SequenceProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValueProto_SequenceProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ValueProto_MapProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ValueProto_MapProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* ParameterDeclProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ParameterDeclProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* FunctionDefProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FunctionDefProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* SignatureDeclProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SignatureDeclProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* OperatorDeclProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OperatorDeclProto_reflection_ = NULL;
const ::google::protobuf::Descriptor* LibraryProto_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LibraryProto_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Version_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_graph_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_graph_2eproto() {
  protobuf_AddDesc_graph_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "graph.proto");
  GOOGLE_CHECK(file != NULL);
  AttributeProto_descriptor_ = file->message_type(0);
  static const int AttributeProto_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, f_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, i_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, floats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, ints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, strings_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, tensors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, graphs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, shape_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, shapes_),
  };
  AttributeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AttributeProto_descriptor_,
      AttributeProto::internal_default_instance(),
      AttributeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, _has_bits_),
      -1,
      -1,
      sizeof(AttributeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AttributeProto, _internal_metadata_));
  ValueInfoProto_descriptor_ = file->message_type(1);
  static const int ValueInfoProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, type_),
  };
  ValueInfoProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ValueInfoProto_descriptor_,
      ValueInfoProto::internal_default_instance(),
      ValueInfoProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, _has_bits_),
      -1,
      -1,
      sizeof(ValueInfoProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueInfoProto, _internal_metadata_));
  NodeProto_descriptor_ = file->message_type(2);
  static const int NodeProto_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, op_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, attribute_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, input_arg_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, control_input_),
  };
  NodeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      NodeProto_descriptor_,
      NodeProto::internal_default_instance(),
      NodeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, _has_bits_),
      -1,
      -1,
      sizeof(NodeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeProto, _internal_metadata_));
  ModelProto_descriptor_ = file->message_type(3);
  static const int ModelProto_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, ir_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, producer_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, producer_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, model_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, graph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, model_author_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, model_license_),
  };
  ModelProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ModelProto_descriptor_,
      ModelProto::internal_default_instance(),
      ModelProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, _has_bits_),
      -1,
      -1,
      sizeof(ModelProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ModelProto, _internal_metadata_));
  GraphProto_descriptor_ = file->message_type(4);
  static const int GraphProto_offsets_[10] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, initializer_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, value_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, operator__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, imported_libraries_),
  };
  GraphProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GraphProto_descriptor_,
      GraphProto::internal_default_instance(),
      GraphProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, _has_bits_),
      -1,
      -1,
      sizeof(GraphProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GraphProto, _internal_metadata_));
  TensorProto_descriptor_ = file->message_type(5);
  static const int TensorProto_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, dims_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, data_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, segment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, float_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, int32_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, string_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, int64_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, raw_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, double_data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, uint64_data_),
  };
  TensorProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TensorProto_descriptor_,
      TensorProto::internal_default_instance(),
      TensorProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, _has_bits_),
      -1,
      -1,
      sizeof(TensorProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto, _internal_metadata_));
  TensorProto_Segment_descriptor_ = TensorProto_descriptor_->nested_type(0);
  static const int TensorProto_Segment_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, begin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, end_),
  };
  TensorProto_Segment_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TensorProto_Segment_descriptor_,
      TensorProto_Segment::internal_default_instance(),
      TensorProto_Segment_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, _has_bits_),
      -1,
      -1,
      sizeof(TensorProto_Segment),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TensorProto_Segment, _internal_metadata_));
  TensorProto_DataType_descriptor_ = TensorProto_descriptor_->enum_type(0);
  SparseTensorProto_descriptor_ = file->message_type(6);
  static const int SparseTensorProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseTensorProto, dims_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseTensorProto, indices_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseTensorProto, values_),
  };
  SparseTensorProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SparseTensorProto_descriptor_,
      SparseTensorProto::internal_default_instance(),
      SparseTensorProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseTensorProto, _has_bits_),
      -1,
      -1,
      sizeof(SparseTensorProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SparseTensorProto, _internal_metadata_));
  TypeProto_descriptor_ = file->message_type(7);
  static const int TypeProto_offsets_[7] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_default_oneof_instance_, tensor_type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_default_oneof_instance_, sparse_tensor_type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_default_oneof_instance_, handle_type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_default_oneof_instance_, tuple_type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_default_oneof_instance_, seq_type_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_default_oneof_instance_, map_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, value_),
  };
  TypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_descriptor_,
      TypeProto::internal_default_instance(),
      TypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _has_bits_),
      -1,
      -1,
      TypeProto_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _oneof_case_[0]),
      sizeof(TypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto, _internal_metadata_));
  TypeProto_TensorShapeProto_descriptor_ = TypeProto_descriptor_->nested_type(0);
  static const int TypeProto_TensorShapeProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorShapeProto, dim_),
  };
  TypeProto_TensorShapeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_TensorShapeProto_descriptor_,
      TypeProto_TensorShapeProto::internal_default_instance(),
      TypeProto_TensorShapeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorShapeProto, _has_bits_),
      -1,
      -1,
      sizeof(TypeProto_TensorShapeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorShapeProto, _internal_metadata_));
  TypeProto_TensorShapeProto_Dimension_descriptor_ = TypeProto_TensorShapeProto_descriptor_->nested_type(0);
  static const int TypeProto_TensorShapeProto_Dimension_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_TensorShapeProto_Dimension_default_oneof_instance_, dim_value_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(TypeProto_TensorShapeProto_Dimension_default_oneof_instance_, dim_param_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorShapeProto_Dimension, value_),
  };
  TypeProto_TensorShapeProto_Dimension_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_TensorShapeProto_Dimension_descriptor_,
      TypeProto_TensorShapeProto_Dimension::internal_default_instance(),
      TypeProto_TensorShapeProto_Dimension_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorShapeProto_Dimension, _has_bits_),
      -1,
      -1,
      TypeProto_TensorShapeProto_Dimension_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorShapeProto_Dimension, _oneof_case_[0]),
      sizeof(TypeProto_TensorShapeProto_Dimension),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorShapeProto_Dimension, _internal_metadata_));
  TypeProto_TensorTypeProto_descriptor_ = TypeProto_descriptor_->nested_type(1);
  static const int TypeProto_TensorTypeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorTypeProto, elem_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorTypeProto, shape_),
  };
  TypeProto_TensorTypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_TensorTypeProto_descriptor_,
      TypeProto_TensorTypeProto::internal_default_instance(),
      TypeProto_TensorTypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorTypeProto, _has_bits_),
      -1,
      -1,
      sizeof(TypeProto_TensorTypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TensorTypeProto, _internal_metadata_));
  TypeProto_SparseTensorTypeProto_descriptor_ = TypeProto_descriptor_->nested_type(2);
  static const int TypeProto_SparseTensorTypeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_SparseTensorTypeProto, elem_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_SparseTensorTypeProto, shape_),
  };
  TypeProto_SparseTensorTypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_SparseTensorTypeProto_descriptor_,
      TypeProto_SparseTensorTypeProto::internal_default_instance(),
      TypeProto_SparseTensorTypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_SparseTensorTypeProto, _has_bits_),
      -1,
      -1,
      sizeof(TypeProto_SparseTensorTypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_SparseTensorTypeProto, _internal_metadata_));
  TypeProto_HandleTypeProto_descriptor_ = TypeProto_descriptor_->nested_type(3);
  static const int TypeProto_HandleTypeProto_offsets_[1] = {
  };
  TypeProto_HandleTypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_HandleTypeProto_descriptor_,
      TypeProto_HandleTypeProto::internal_default_instance(),
      TypeProto_HandleTypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_HandleTypeProto, _has_bits_),
      -1,
      -1,
      sizeof(TypeProto_HandleTypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_HandleTypeProto, _internal_metadata_));
  TypeProto_TupleTypeProto_descriptor_ = TypeProto_descriptor_->nested_type(4);
  static const int TypeProto_TupleTypeProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TupleTypeProto, elem_type_),
  };
  TypeProto_TupleTypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_TupleTypeProto_descriptor_,
      TypeProto_TupleTypeProto::internal_default_instance(),
      TypeProto_TupleTypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TupleTypeProto, _has_bits_),
      -1,
      -1,
      sizeof(TypeProto_TupleTypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_TupleTypeProto, _internal_metadata_));
  TypeProto_SeqTypeProto_descriptor_ = TypeProto_descriptor_->nested_type(5);
  static const int TypeProto_SeqTypeProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_SeqTypeProto, elem_type_),
  };
  TypeProto_SeqTypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_SeqTypeProto_descriptor_,
      TypeProto_SeqTypeProto::internal_default_instance(),
      TypeProto_SeqTypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_SeqTypeProto, _has_bits_),
      -1,
      -1,
      sizeof(TypeProto_SeqTypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_SeqTypeProto, _internal_metadata_));
  TypeProto_MapTypeProto_descriptor_ = TypeProto_descriptor_->nested_type(6);
  static const int TypeProto_MapTypeProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_MapTypeProto, key_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_MapTypeProto, value_type_),
  };
  TypeProto_MapTypeProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TypeProto_MapTypeProto_descriptor_,
      TypeProto_MapTypeProto::internal_default_instance(),
      TypeProto_MapTypeProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_MapTypeProto, _has_bits_),
      -1,
      -1,
      sizeof(TypeProto_MapTypeProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TypeProto_MapTypeProto, _internal_metadata_));
  ValueProto_descriptor_ = file->message_type(8);
  static const int ValueProto_offsets_[7] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ValueProto_default_oneof_instance_, dense_tensor_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ValueProto_default_oneof_instance_, sparse_tensor_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ValueProto_default_oneof_instance_, handle_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ValueProto_default_oneof_instance_, tuple_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ValueProto_default_oneof_instance_, seq_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(ValueProto_default_oneof_instance_, map_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto, value_),
  };
  ValueProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ValueProto_descriptor_,
      ValueProto::internal_default_instance(),
      ValueProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto, _has_bits_),
      -1,
      -1,
      ValueProto_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto, _oneof_case_[0]),
      sizeof(ValueProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto, _internal_metadata_));
  ValueProto_HandleProto_descriptor_ = ValueProto_descriptor_->nested_type(0);
  static const int ValueProto_HandleProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_HandleProto, uid_),
  };
  ValueProto_HandleProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ValueProto_HandleProto_descriptor_,
      ValueProto_HandleProto::internal_default_instance(),
      ValueProto_HandleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_HandleProto, _has_bits_),
      -1,
      -1,
      sizeof(ValueProto_HandleProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_HandleProto, _internal_metadata_));
  ValueProto_TupleProto_descriptor_ = ValueProto_descriptor_->nested_type(1);
  static const int ValueProto_TupleProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_TupleProto, elems_),
  };
  ValueProto_TupleProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ValueProto_TupleProto_descriptor_,
      ValueProto_TupleProto::internal_default_instance(),
      ValueProto_TupleProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_TupleProto, _has_bits_),
      -1,
      -1,
      sizeof(ValueProto_TupleProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_TupleProto, _internal_metadata_));
  ValueProto_SequenceProto_descriptor_ = ValueProto_descriptor_->nested_type(2);
  static const int ValueProto_SequenceProto_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_SequenceProto, elems_),
  };
  ValueProto_SequenceProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ValueProto_SequenceProto_descriptor_,
      ValueProto_SequenceProto::internal_default_instance(),
      ValueProto_SequenceProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_SequenceProto, _has_bits_),
      -1,
      -1,
      sizeof(ValueProto_SequenceProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_SequenceProto, _internal_metadata_));
  ValueProto_MapProto_descriptor_ = ValueProto_descriptor_->nested_type(3);
  static const int ValueProto_MapProto_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_MapProto, keys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_MapProto, values_),
  };
  ValueProto_MapProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ValueProto_MapProto_descriptor_,
      ValueProto_MapProto::internal_default_instance(),
      ValueProto_MapProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_MapProto, _has_bits_),
      -1,
      -1,
      sizeof(ValueProto_MapProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ValueProto_MapProto, _internal_metadata_));
  ParameterDeclProto_descriptor_ = file->message_type(9);
  static const int ParameterDeclProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterDeclProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterDeclProto, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterDeclProto, doc_string_),
  };
  ParameterDeclProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ParameterDeclProto_descriptor_,
      ParameterDeclProto::internal_default_instance(),
      ParameterDeclProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterDeclProto, _has_bits_),
      -1,
      -1,
      sizeof(ParameterDeclProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParameterDeclProto, _internal_metadata_));
  FunctionDefProto_descriptor_ = file->message_type(10);
  static const int FunctionDefProto_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionDefProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionDefProto, input_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionDefProto, output_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionDefProto, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionDefProto, attr_),
  };
  FunctionDefProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      FunctionDefProto_descriptor_,
      FunctionDefProto::internal_default_instance(),
      FunctionDefProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionDefProto, _has_bits_),
      -1,
      -1,
      sizeof(FunctionDefProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FunctionDefProto, _internal_metadata_));
  SignatureDeclProto_descriptor_ = file->message_type(11);
  static const int SignatureDeclProto_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDeclProto, input_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDeclProto, output_params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDeclProto, input_attributes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDeclProto, doc_string_),
  };
  SignatureDeclProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SignatureDeclProto_descriptor_,
      SignatureDeclProto::internal_default_instance(),
      SignatureDeclProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDeclProto, _has_bits_),
      -1,
      -1,
      sizeof(SignatureDeclProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignatureDeclProto, _internal_metadata_));
  OperatorDeclProto_descriptor_ = file->message_type(12);
  static const int OperatorDeclProto_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorDeclProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorDeclProto, signature_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorDeclProto, doc_string_),
  };
  OperatorDeclProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      OperatorDeclProto_descriptor_,
      OperatorDeclProto::internal_default_instance(),
      OperatorDeclProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorDeclProto, _has_bits_),
      -1,
      -1,
      sizeof(OperatorDeclProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OperatorDeclProto, _internal_metadata_));
  LibraryProto_descriptor_ = file->message_type(13);
  static const int LibraryProto_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, ir_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, producer_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, producer_tag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, model_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, model_author_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, model_license_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, domain_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, doc_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, operator__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, imported_libraries_),
  };
  LibraryProto_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LibraryProto_descriptor_,
      LibraryProto::internal_default_instance(),
      LibraryProto_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, _has_bits_),
      -1,
      -1,
      sizeof(LibraryProto),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LibraryProto, _internal_metadata_));
  Version_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_graph_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AttributeProto_descriptor_, AttributeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ValueInfoProto_descriptor_, ValueInfoProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      NodeProto_descriptor_, NodeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ModelProto_descriptor_, ModelProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GraphProto_descriptor_, GraphProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TensorProto_descriptor_, TensorProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TensorProto_Segment_descriptor_, TensorProto_Segment::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SparseTensorProto_descriptor_, SparseTensorProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_descriptor_, TypeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_TensorShapeProto_descriptor_, TypeProto_TensorShapeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_TensorShapeProto_Dimension_descriptor_, TypeProto_TensorShapeProto_Dimension::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_TensorTypeProto_descriptor_, TypeProto_TensorTypeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_SparseTensorTypeProto_descriptor_, TypeProto_SparseTensorTypeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_HandleTypeProto_descriptor_, TypeProto_HandleTypeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_TupleTypeProto_descriptor_, TypeProto_TupleTypeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_SeqTypeProto_descriptor_, TypeProto_SeqTypeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TypeProto_MapTypeProto_descriptor_, TypeProto_MapTypeProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ValueProto_descriptor_, ValueProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ValueProto_HandleProto_descriptor_, ValueProto_HandleProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ValueProto_TupleProto_descriptor_, ValueProto_TupleProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ValueProto_SequenceProto_descriptor_, ValueProto_SequenceProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ValueProto_MapProto_descriptor_, ValueProto_MapProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ParameterDeclProto_descriptor_, ParameterDeclProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      FunctionDefProto_descriptor_, FunctionDefProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SignatureDeclProto_descriptor_, SignatureDeclProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      OperatorDeclProto_descriptor_, OperatorDeclProto::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LibraryProto_descriptor_, LibraryProto::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_graph_2eproto() {
  AttributeProto_default_instance_.Shutdown();
  delete AttributeProto_reflection_;
  ValueInfoProto_default_instance_.Shutdown();
  delete ValueInfoProto_reflection_;
  NodeProto_default_instance_.Shutdown();
  delete NodeProto_reflection_;
  ModelProto_default_instance_.Shutdown();
  delete ModelProto_reflection_;
  GraphProto_default_instance_.Shutdown();
  delete GraphProto_reflection_;
  TensorProto_default_instance_.Shutdown();
  delete TensorProto_reflection_;
  TensorProto_Segment_default_instance_.Shutdown();
  delete TensorProto_Segment_reflection_;
  SparseTensorProto_default_instance_.Shutdown();
  delete SparseTensorProto_reflection_;
  TypeProto_default_instance_.Shutdown();
  delete TypeProto_default_oneof_instance_;
  delete TypeProto_reflection_;
  TypeProto_TensorShapeProto_default_instance_.Shutdown();
  delete TypeProto_TensorShapeProto_reflection_;
  TypeProto_TensorShapeProto_Dimension_default_instance_.Shutdown();
  delete TypeProto_TensorShapeProto_Dimension_default_oneof_instance_;
  delete TypeProto_TensorShapeProto_Dimension_reflection_;
  TypeProto_TensorTypeProto_default_instance_.Shutdown();
  delete TypeProto_TensorTypeProto_reflection_;
  TypeProto_SparseTensorTypeProto_default_instance_.Shutdown();
  delete TypeProto_SparseTensorTypeProto_reflection_;
  TypeProto_HandleTypeProto_default_instance_.Shutdown();
  delete TypeProto_HandleTypeProto_reflection_;
  TypeProto_TupleTypeProto_default_instance_.Shutdown();
  delete TypeProto_TupleTypeProto_reflection_;
  TypeProto_SeqTypeProto_default_instance_.Shutdown();
  delete TypeProto_SeqTypeProto_reflection_;
  TypeProto_MapTypeProto_default_instance_.Shutdown();
  delete TypeProto_MapTypeProto_reflection_;
  ValueProto_default_instance_.Shutdown();
  delete ValueProto_default_oneof_instance_;
  delete ValueProto_reflection_;
  ValueProto_HandleProto_default_instance_.Shutdown();
  delete ValueProto_HandleProto_reflection_;
  ValueProto_TupleProto_default_instance_.Shutdown();
  delete ValueProto_TupleProto_reflection_;
  ValueProto_SequenceProto_default_instance_.Shutdown();
  delete ValueProto_SequenceProto_reflection_;
  ValueProto_MapProto_default_instance_.Shutdown();
  delete ValueProto_MapProto_reflection_;
  ParameterDeclProto_default_instance_.Shutdown();
  delete ParameterDeclProto_reflection_;
  FunctionDefProto_default_instance_.Shutdown();
  delete FunctionDefProto_reflection_;
  SignatureDeclProto_default_instance_.Shutdown();
  delete SignatureDeclProto_reflection_;
  OperatorDeclProto_default_instance_.Shutdown();
  delete OperatorDeclProto_reflection_;
  LibraryProto_default_instance_.Shutdown();
  delete LibraryProto_reflection_;
}

void protobuf_InitDefaults_graph_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  AttributeProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ValueInfoProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  NodeProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ModelProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GraphProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TensorProto_default_instance_.DefaultConstruct();
  TensorProto_Segment_default_instance_.DefaultConstruct();
  SparseTensorProto_default_instance_.DefaultConstruct();
  TypeProto_default_instance_.DefaultConstruct();
  TypeProto_default_oneof_instance_ = new TypeProtoOneofInstance();
  TypeProto_TensorShapeProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TypeProto_TensorShapeProto_Dimension_default_instance_.DefaultConstruct();
  TypeProto_TensorShapeProto_Dimension_default_oneof_instance_ = new TypeProto_TensorShapeProto_DimensionOneofInstance();
  TypeProto_TensorTypeProto_default_instance_.DefaultConstruct();
  TypeProto_SparseTensorTypeProto_default_instance_.DefaultConstruct();
  TypeProto_HandleTypeProto_default_instance_.DefaultConstruct();
  TypeProto_TupleTypeProto_default_instance_.DefaultConstruct();
  TypeProto_SeqTypeProto_default_instance_.DefaultConstruct();
  TypeProto_MapTypeProto_default_instance_.DefaultConstruct();
  ValueProto_default_instance_.DefaultConstruct();
  ValueProto_default_oneof_instance_ = new ValueProtoOneofInstance();
  ValueProto_HandleProto_default_instance_.DefaultConstruct();
  ValueProto_TupleProto_default_instance_.DefaultConstruct();
  ValueProto_SequenceProto_default_instance_.DefaultConstruct();
  ValueProto_MapProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ParameterDeclProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  FunctionDefProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SignatureDeclProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  OperatorDeclProto_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LibraryProto_default_instance_.DefaultConstruct();
  AttributeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ValueInfoProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  NodeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ModelProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  GraphProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TensorProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TensorProto_Segment_default_instance_.get_mutable()->InitAsDefaultInstance();
  SparseTensorProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_TensorShapeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_TensorShapeProto_Dimension_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_TensorTypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_SparseTensorTypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_HandleTypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_TupleTypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_SeqTypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  TypeProto_MapTypeProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ValueProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ValueProto_HandleProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ValueProto_TupleProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ValueProto_SequenceProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ValueProto_MapProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  ParameterDeclProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  FunctionDefProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  SignatureDeclProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  OperatorDeclProto_default_instance_.get_mutable()->InitAsDefaultInstance();
  LibraryProto_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_graph_2eproto_once_);
void protobuf_InitDefaults_graph_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_graph_2eproto_once_,
                 &protobuf_InitDefaults_graph_2eproto_impl);
}
void protobuf_AddDesc_graph_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_graph_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013graph.proto\022\006ONNXIR\"\241\003\n\016AttributeProto"
    "\022\014\n\004name\030\001 \001(\t\022\t\n\001f\030\002 \001(\002\022\t\n\001i\030\003 \001(\003\022\t\n\001"
    "s\030\004 \001(\014\022\036\n\001t\030\005 \001(\0132\023.ONNXIR.TensorProto\022"
    "\035\n\001g\030\006 \001(\0132\022.ONNXIR.GraphProto\022\016\n\006floats"
    "\030\007 \003(\002\022\014\n\004ints\030\010 \003(\003\022\017\n\007strings\030\t \003(\014\022$\n"
    "\007tensors\030\n \003(\0132\023.ONNXIR.TensorProto\022\"\n\006g"
    "raphs\030\013 \003(\0132\022.ONNXIR.GraphProto\022\037\n\004type\030"
    "3 \001(\0132\021.ONNXIR.TypeProto\022 \n\005types\0304 \003(\0132"
    "\021.ONNXIR.TypeProto\0221\n\005shape\0305 \001(\0132\".ONNX"
    "IR.TypeProto.TensorShapeProto\0222\n\006shapes\030"
    "6 \003(\0132\".ONNXIR.TypeProto.TensorShapeProt"
    "o\"\?\n\016ValueInfoProto\022\014\n\004name\030\001 \001(\t\022\037\n\004typ"
    "e\030\002 \001(\0132\021.ONNXIR.TypeProto\"\270\001\n\tNodeProto"
    "\022\r\n\005input\030\001 \003(\t\022\016\n\006output\030\002 \003(\t\022\014\n\004name\030"
    "\003 \001(\t\022\017\n\007op_type\030\004 \001(\t\022)\n\tattribute\030\005 \003("
    "\0132\026.ONNXIR.AttributeProto\022\022\n\ndoc_string\030"
    "\006 \001(\t\022\027\n\017input_arg_count\0302 \003(\005\022\025\n\rcontro"
    "l_input\0303 \003(\t\"\334\001\n\nModelProto\022\022\n\nir_versi"
    "on\030\001 \001(\003\022\025\n\rproducer_name\030\002 \001(\t\022\030\n\020produ"
    "cer_version\030\003 \001(\t\022\016\n\006domain\030\004 \001(\t\022\025\n\rmod"
    "el_version\030\005 \001(\003\022\022\n\ndoc_string\030\006 \001(\t\022!\n\005"
    "graph\030\007 \001(\0132\022.ONNXIR.GraphProto\022\024\n\014model"
    "_author\0302 \001(\t\022\025\n\rmodel_license\0303 \001(\t\"\360\002\n"
    "\nGraphProto\022\037\n\004node\030\001 \003(\0132\021.ONNXIR.NodeP"
    "roto\022\014\n\004name\030\002 \001(\t\022(\n\013initializer\030\005 \003(\0132"
    "\023.ONNXIR.TensorProto\022\022\n\ndoc_string\030\n \001(\t"
    "\022%\n\005input\030\013 \003(\0132\026.ONNXIR.ValueInfoProto\022"
    "&\n\006output\030\014 \003(\0132\026.ONNXIR.ValueInfoProto\022"
    "*\n\nvalue_info\030\r \003(\0132\026.ONNXIR.ValueInfoPr"
    "oto\022*\n\010function\0302 \003(\0132\030.ONNXIR.FunctionD"
    "efProto\022+\n\010operator\0303 \003(\0132\031.ONNXIR.Opera"
    "torDeclProto\022\032\n\022imported_libraries\0304 \003(\t"
    "J\005\010d\020\311\001\"\237\004\n\013TensorProto\022\014\n\004dims\030\001 \003(\003\022/\n"
    "\tdata_type\030\002 \001(\0162\034.ONNXIR.TensorProto.Da"
    "taType\022,\n\007segment\030\003 \001(\0132\033.ONNXIR.TensorP"
    "roto.Segment\022\026\n\nfloat_data\030\004 \003(\002B\002\020\001\022\026\n\n"
    "int32_data\030\005 \003(\005B\002\020\001\022\023\n\013string_data\030\006 \003("
    "\014\022\026\n\nint64_data\030\007 \003(\003B\002\020\001\022\014\n\004name\030\010 \001(\t\022"
    "\020\n\010raw_data\030\t \001(\014\022\027\n\013double_data\030\n \003(\001B\002"
    "\020\001\022\027\n\013uint64_data\030\013 \003(\004B\002\020\001\032%\n\007Segment\022\r"
    "\n\005begin\030\001 \001(\003\022\013\n\003end\030\002 \001(\003\"\314\001\n\010DataType\022"
    "\r\n\tUNDEFINED\020\000\022\t\n\005FLOAT\020\001\022\t\n\005UINT8\020\002\022\010\n\004"
    "INT8\020\003\022\n\n\006UINT16\020\004\022\t\n\005INT16\020\005\022\t\n\005INT32\020\006"
    "\022\t\n\005INT64\020\007\022\n\n\006STRING\020\010\022\010\n\004BOOL\020\t\022\013\n\007FLO"
    "AT16\020\n\022\n\n\006DOUBLE\020\013\022\n\n\006UINT32\020\014\022\n\n\006UINT64"
    "\020\r\022\r\n\tCOMPLEX64\020\016\022\016\n\nCOMPLEX128\020\017\"l\n\021Spa"
    "rseTensorProto\022\014\n\004dims\030\001 \003(\003\022$\n\007indices\030"
    "\002 \001(\0132\023.ONNXIR.TensorProto\022#\n\006values\030\003 \001"
    "(\0132\023.ONNXIR.TensorProto\"\346\007\n\tTypeProto\0228\n"
    "\013tensor_type\030\001 \001(\0132!.ONNXIR.TypeProto.Te"
    "nsorTypeProtoH\000\022E\n\022sparse_tensor_type\030\002 "
    "\001(\0132\'.ONNXIR.TypeProto.SparseTensorTypeP"
    "rotoH\000\0228\n\013handle_type\030\003 \001(\0132!.ONNXIR.Typ"
    "eProto.HandleTypeProtoH\000\0226\n\ntuple_type\030\004"
    " \001(\0132 .ONNXIR.TypeProto.TupleTypeProtoH\000"
    "\0222\n\010seq_type\030\005 \001(\0132\036.ONNXIR.TypeProto.Se"
    "qTypeProtoH\000\0222\n\010map_type\030\006 \001(\0132\036.ONNXIR."
    "TypeProto.MapTypeProtoH\000\032\215\001\n\020TensorShape"
    "Proto\0229\n\003dim\030\001 \003(\0132,.ONNXIR.TypeProto.Te"
    "nsorShapeProto.Dimension\032>\n\tDimension\022\023\n"
    "\tdim_value\030\001 \001(\003H\000\022\023\n\tdim_param\030\002 \001(\tH\000B"
    "\007\n\005value\032u\n\017TensorTypeProto\022/\n\telem_type"
    "\030\001 \001(\0162\034.ONNXIR.TensorProto.DataType\0221\n\005"
    "shape\030\002 \001(\0132\".ONNXIR.TypeProto.TensorSha"
    "peProto\032{\n\025SparseTensorTypeProto\022/\n\telem"
    "_type\030\001 \001(\0162\034.ONNXIR.TensorProto.DataTyp"
    "e\0221\n\005shape\030\002 \001(\0132\".ONNXIR.TypeProto.Tens"
    "orShapeProto\032\021\n\017HandleTypeProto\0326\n\016Tuple"
    "TypeProto\022$\n\telem_type\030\001 \003(\0132\021.ONNXIR.Ty"
    "peProto\0324\n\014SeqTypeProto\022$\n\telem_type\030\001 \001"
    "(\0132\021.ONNXIR.TypeProto\032p\n\014MapTypeProto\022.\n"
    "\010key_type\030\001 \001(\0162\034.ONNXIR.TensorProto.Dat"
    "aType\0220\n\nvalue_type\030\002 \001(\0162\034.ONNXIR.Tenso"
    "rProto.DataTypeB\007\n\005value\"\212\004\n\nValueProto\022"
    "+\n\014dense_tensor\030\001 \001(\0132\023.ONNXIR.TensorPro"
    "toH\000\0222\n\rsparse_tensor\030\002 \001(\0132\031.ONNXIR.Spa"
    "rseTensorProtoH\000\0220\n\006handle\030\003 \001(\0132\036.ONNXI"
    "R.ValueProto.HandleProtoH\000\022.\n\005tuple\030\004 \001("
    "\0132\035.ONNXIR.ValueProto.TupleProtoH\000\022/\n\003se"
    "q\030\005 \001(\0132 .ONNXIR.ValueProto.SequenceProt"
    "oH\000\022*\n\003map\030\006 \001(\0132\033.ONNXIR.ValueProto.Map"
    "ProtoH\000\032\032\n\013HandleProto\022\013\n\003uid\030\001 \001(\003\032/\n\nT"
    "upleProto\022!\n\005elems\030\001 \003(\0132\022.ONNXIR.ValueP"
    "roto\0322\n\rSequenceProto\022!\n\005elems\030\001 \003(\0132\022.O"
    "NNXIR.ValueProto\032R\n\010MapProto\022!\n\004keys\030\001 \001"
    "(\0132\023.ONNXIR.TensorProto\022#\n\006values\030\002 \001(\0132"
    "\023.ONNXIR.TensorProtoB\007\n\005value\"W\n\022Paramet"
    "erDeclProto\022\014\n\004name\030\001 \001(\t\022\037\n\004type\030\002 \001(\0132"
    "\021.ONNXIR.TypeProto\022\022\n\ndoc_string\030\003 \001(\t\"\314"
    "\001\n\020FunctionDefProto\022\014\n\004name\030\001 \001(\t\0220\n\014inp"
    "ut_params\030\002 \003(\0132\032.ONNXIR.ParameterDeclPr"
    "oto\0221\n\routput_params\030\003 \003(\0132\032.ONNXIR.Para"
    "meterDeclProto\022\037\n\004node\030\004 \003(\0132\021.ONNXIR.No"
    "deProto\022$\n\004attr\030\005 \003(\0132\026.ONNXIR.Attribute"
    "Proto\"\303\001\n\022SignatureDeclProto\0220\n\014input_pa"
    "rams\030\001 \003(\0132\032.ONNXIR.ParameterDeclProto\0221"
    "\n\routput_params\030\002 \003(\0132\032.ONNXIR.Parameter"
    "DeclProto\0224\n\020input_attributes\030\003 \003(\0132\032.ON"
    "NXIR.ParameterDeclProto\022\022\n\ndoc_string\030\004 "
    "\001(\t\"d\n\021OperatorDeclProto\022\014\n\004name\030\001 \001(\t\022-"
    "\n\tsignature\030\002 \003(\0132\032.ONNXIR.SignatureDecl"
    "Proto\022\022\n\ndoc_string\030\003 \001(\t\"\275\002\n\014LibraryPro"
    "to\022\022\n\nir_version\030\001 \001(\003\022\030\n\020producer_versi"
    "on\030\002 \001(\003\022\024\n\014producer_tag\030\003 \001(\t\022\025\n\rmodel_"
    "version\030\004 \001(\003\022\024\n\014model_author\030\005 \001(\t\022\025\n\rm"
    "odel_license\030\006 \001(\t\022\014\n\004name\030\007 \001(\t\022\016\n\006doma"
    "in\030\010 \001(\t\022\022\n\ndoc_string\030\t \001(\t\022+\n\010operator"
    "\030\n \003(\0132\031.ONNXIR.OperatorDeclProto\022*\n\010fun"
    "ction\030\013 \003(\0132\030.ONNXIR.FunctionDefProto\022\032\n"
    "\022imported_libraries\030\014 \003(\t*\031\n\007Version\022\016\n\n"
    "IR_VERSION\020\001", 4412);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "graph.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_graph_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_graph_2eproto_once_);
void protobuf_AddDesc_graph_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_graph_2eproto_once_,
                 &protobuf_AddDesc_graph_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_graph_2eproto {
  StaticDescriptorInitializer_graph_2eproto() {
    protobuf_AddDesc_graph_2eproto();
  }
} static_descriptor_initializer_graph_2eproto_;
const ::google::protobuf::EnumDescriptor* Version_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Version_descriptor_;
}
bool Version_IsValid(int value) {
  switch (value) {
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttributeProto::kNameFieldNumber;
const int AttributeProto::kFFieldNumber;
const int AttributeProto::kIFieldNumber;
const int AttributeProto::kSFieldNumber;
const int AttributeProto::kTFieldNumber;
const int AttributeProto::kGFieldNumber;
const int AttributeProto::kFloatsFieldNumber;
const int AttributeProto::kIntsFieldNumber;
const int AttributeProto::kStringsFieldNumber;
const int AttributeProto::kTensorsFieldNumber;
const int AttributeProto::kGraphsFieldNumber;
const int AttributeProto::kTypeFieldNumber;
const int AttributeProto::kTypesFieldNumber;
const int AttributeProto::kShapeFieldNumber;
const int AttributeProto::kShapesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttributeProto::AttributeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.AttributeProto)
}

void AttributeProto::InitAsDefaultInstance() {
  t_ = const_cast< ::ONNXIR::TensorProto*>(
      ::ONNXIR::TensorProto::internal_default_instance());
  g_ = const_cast< ::ONNXIR::GraphProto*>(
      ::ONNXIR::GraphProto::internal_default_instance());
  type_ = const_cast< ::ONNXIR::TypeProto*>(
      ::ONNXIR::TypeProto::internal_default_instance());
  shape_ = const_cast< ::ONNXIR::TypeProto_TensorShapeProto*>(
      ::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance());
}

AttributeProto::AttributeProto(const AttributeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.AttributeProto)
}

void AttributeProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  t_ = NULL;
  g_ = NULL;
  type_ = NULL;
  shape_ = NULL;
  ::memset(&i_, 0, reinterpret_cast<char*>(&f_) -
    reinterpret_cast<char*>(&i_) + sizeof(f_));
}

AttributeProto::~AttributeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.AttributeProto)
  SharedDtor();
}

void AttributeProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  s_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &AttributeProto_default_instance_.get()) {
    delete t_;
    delete g_;
    delete type_;
    delete shape_;
  }
}

void AttributeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AttributeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AttributeProto_descriptor_;
}

const AttributeProto& AttributeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AttributeProto> AttributeProto_default_instance_;

AttributeProto* AttributeProto::New(::google::protobuf::Arena* arena) const {
  AttributeProto* n = new AttributeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AttributeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.AttributeProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(AttributeProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<AttributeProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 63u) {
    ZR_(i_, f_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_s()) {
      s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_t()) {
      if (t_ != NULL) t_->::ONNXIR::TensorProto::Clear();
    }
    if (has_g()) {
      if (g_ != NULL) g_->::ONNXIR::GraphProto::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 10240u) {
    if (has_type()) {
      if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
    }
    if (has_shape()) {
      if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  floats_.Clear();
  ints_.Clear();
  strings_.Clear();
  tensors_.Clear();
  graphs_.Clear();
  types_.Clear();
  shapes_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool AttributeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.AttributeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.AttributeProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(21)) goto parse_f;
        break;
      }

      // optional float f = 2;
      case 2: {
        if (tag == 21) {
         parse_f:
          set_has_f();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_i;
        break;
      }

      // optional int64 i = 3;
      case 3: {
        if (tag == 24) {
         parse_i:
          set_has_i();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &i_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_s;
        break;
      }

      // optional bytes s = 4;
      case 4: {
        if (tag == 34) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_s()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_t;
        break;
      }

      // optional .ONNXIR.TensorProto t = 5;
      case 5: {
        if (tag == 42) {
         parse_t:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_t()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_g;
        break;
      }

      // optional .ONNXIR.GraphProto g = 6;
      case 6: {
        if (tag == 50) {
         parse_g:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_g()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_floats;
        break;
      }

      // repeated float floats = 7;
      case 7: {
        if (tag == 61) {
         parse_floats:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 61, input, this->mutable_floats())));
        } else if (tag == 58) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floats())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(61)) goto parse_floats;
        if (input->ExpectTag(64)) goto parse_ints;
        break;
      }

      // repeated int64 ints = 8;
      case 8: {
        if (tag == 64) {
         parse_ints:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 64, input, this->mutable_ints())));
        } else if (tag == 66) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_ints())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_ints;
        if (input->ExpectTag(74)) goto parse_strings;
        break;
      }

      // repeated bytes strings = 9;
      case 9: {
        if (tag == 74) {
         parse_strings:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_strings()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_strings;
        if (input->ExpectTag(82)) goto parse_tensors;
        break;
      }

      // repeated .ONNXIR.TensorProto tensors = 10;
      case 10: {
        if (tag == 82) {
         parse_tensors:
          DO_(input->IncrementRecursionDepth());
         parse_loop_tensors:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tensors()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_tensors;
        if (input->ExpectTag(90)) goto parse_loop_graphs;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.GraphProto graphs = 11;
      case 11: {
        if (tag == 90) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_graphs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_graphs()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_graphs;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(410)) goto parse_type;
        break;
      }

      // optional .ONNXIR.TypeProto type = 51;
      case 51: {
        if (tag == 410) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_types;
        break;
      }

      // repeated .ONNXIR.TypeProto types = 52;
      case 52: {
        if (tag == 418) {
         parse_types:
          DO_(input->IncrementRecursionDepth());
         parse_loop_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_types()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_loop_types;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(426)) goto parse_shape;
        break;
      }

      // optional .ONNXIR.TypeProto.TensorShapeProto shape = 53;
      case 53: {
        if (tag == 426) {
         parse_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_shapes;
        break;
      }

      // repeated .ONNXIR.TypeProto.TensorShapeProto shapes = 54;
      case 54: {
        if (tag == 434) {
         parse_shapes:
          DO_(input->IncrementRecursionDepth());
         parse_loop_shapes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_shapes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(434)) goto parse_loop_shapes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.AttributeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.AttributeProto)
  return false;
#undef DO_
}

void AttributeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.AttributeProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.AttributeProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional float f = 2;
  if (has_f()) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->f(), output);
  }

  // optional int64 i = 3;
  if (has_i()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->i(), output);
  }

  // optional bytes s = 4;
  if (has_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->s(), output);
  }

  // optional .ONNXIR.TensorProto t = 5;
  if (has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->t_, output);
  }

  // optional .ONNXIR.GraphProto g = 6;
  if (has_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->g_, output);
  }

  // repeated float floats = 7;
  for (int i = 0; i < this->floats_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      7, this->floats(i), output);
  }

  // repeated int64 ints = 8;
  for (int i = 0; i < this->ints_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      8, this->ints(i), output);
  }

  // repeated bytes strings = 9;
  for (int i = 0; i < this->strings_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      9, this->strings(i), output);
  }

  // repeated .ONNXIR.TensorProto tensors = 10;
  for (unsigned int i = 0, n = this->tensors_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->tensors(i), output);
  }

  // repeated .ONNXIR.GraphProto graphs = 11;
  for (unsigned int i = 0, n = this->graphs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->graphs(i), output);
  }

  // optional .ONNXIR.TypeProto type = 51;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, *this->type_, output);
  }

  // repeated .ONNXIR.TypeProto types = 52;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      52, this->types(i), output);
  }

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 53;
  if (has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53, *this->shape_, output);
  }

  // repeated .ONNXIR.TypeProto.TensorShapeProto shapes = 54;
  for (unsigned int i = 0, n = this->shapes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54, this->shapes(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.AttributeProto)
}

::google::protobuf::uint8* AttributeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.AttributeProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.AttributeProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional float f = 2;
  if (has_f()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->f(), target);
  }

  // optional int64 i = 3;
  if (has_i()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->i(), target);
  }

  // optional bytes s = 4;
  if (has_s()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->s(), target);
  }

  // optional .ONNXIR.TensorProto t = 5;
  if (has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->t_, false, target);
  }

  // optional .ONNXIR.GraphProto g = 6;
  if (has_g()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->g_, false, target);
  }

  // repeated float floats = 7;
  for (int i = 0; i < this->floats_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatToArray(7, this->floats(i), target);
  }

  // repeated int64 ints = 8;
  for (int i = 0; i < this->ints_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(8, this->ints(i), target);
  }

  // repeated bytes strings = 9;
  for (int i = 0; i < this->strings_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(9, this->strings(i), target);
  }

  // repeated .ONNXIR.TensorProto tensors = 10;
  for (unsigned int i = 0, n = this->tensors_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->tensors(i), false, target);
  }

  // repeated .ONNXIR.GraphProto graphs = 11;
  for (unsigned int i = 0, n = this->graphs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->graphs(i), false, target);
  }

  // optional .ONNXIR.TypeProto type = 51;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        51, *this->type_, false, target);
  }

  // repeated .ONNXIR.TypeProto types = 52;
  for (unsigned int i = 0, n = this->types_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        52, this->types(i), false, target);
  }

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 53;
  if (has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        53, *this->shape_, false, target);
  }

  // repeated .ONNXIR.TypeProto.TensorShapeProto shapes = 54;
  for (unsigned int i = 0, n = this->shapes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        54, this->shapes(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.AttributeProto)
  return target;
}

size_t AttributeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.AttributeProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional float f = 2;
    if (has_f()) {
      total_size += 1 + 4;
    }

    // optional int64 i = 3;
    if (has_i()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->i());
    }

    // optional bytes s = 4;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->s());
    }

    // optional .ONNXIR.TensorProto t = 5;
    if (has_t()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->t_);
    }

    // optional .ONNXIR.GraphProto g = 6;
    if (has_g()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->g_);
    }

  }
  if (_has_bits_[11 / 32] & 10240u) {
    // optional .ONNXIR.TypeProto type = 51;
    if (has_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->type_);
    }

    // optional .ONNXIR.TypeProto.TensorShapeProto shape = 53;
    if (has_shape()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->shape_);
    }

  }
  // repeated float floats = 7;
  {
    size_t data_size = 0;
    unsigned int count = this->floats_size();
    data_size = 4UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->floats_size());
    total_size += data_size;
  }

  // repeated int64 ints = 8;
  {
    size_t data_size = 0;
    unsigned int count = this->ints_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->ints(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->ints_size());
    total_size += data_size;
  }

  // repeated bytes strings = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strings_size());
  for (int i = 0; i < this->strings_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->strings(i));
  }

  // repeated .ONNXIR.TensorProto tensors = 10;
  {
    unsigned int count = this->tensors_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tensors(i));
    }
  }

  // repeated .ONNXIR.GraphProto graphs = 11;
  {
    unsigned int count = this->graphs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->graphs(i));
    }
  }

  // repeated .ONNXIR.TypeProto types = 52;
  {
    unsigned int count = this->types_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->types(i));
    }
  }

  // repeated .ONNXIR.TypeProto.TensorShapeProto shapes = 54;
  {
    unsigned int count = this->shapes_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->shapes(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AttributeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.AttributeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AttributeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttributeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.AttributeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.AttributeProto)
    UnsafeMergeFrom(*source);
  }
}

void AttributeProto::MergeFrom(const AttributeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.AttributeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AttributeProto::UnsafeMergeFrom(const AttributeProto& from) {
  GOOGLE_DCHECK(&from != this);
  floats_.UnsafeMergeFrom(from.floats_);
  ints_.UnsafeMergeFrom(from.ints_);
  strings_.UnsafeMergeFrom(from.strings_);
  tensors_.MergeFrom(from.tensors_);
  graphs_.MergeFrom(from.graphs_);
  types_.MergeFrom(from.types_);
  shapes_.MergeFrom(from.shapes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_f()) {
      set_f(from.f());
    }
    if (from.has_i()) {
      set_i(from.i());
    }
    if (from.has_s()) {
      set_has_s();
      s_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.s_);
    }
    if (from.has_t()) {
      mutable_t()->::ONNXIR::TensorProto::MergeFrom(from.t());
    }
    if (from.has_g()) {
      mutable_g()->::ONNXIR::GraphProto::MergeFrom(from.g());
    }
  }
  if (from._has_bits_[11 / 32] & (0xffu << (11 % 32))) {
    if (from.has_type()) {
      mutable_type()->::ONNXIR::TypeProto::MergeFrom(from.type());
    }
    if (from.has_shape()) {
      mutable_shape()->::ONNXIR::TypeProto_TensorShapeProto::MergeFrom(from.shape());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void AttributeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.AttributeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttributeProto::CopyFrom(const AttributeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.AttributeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AttributeProto::IsInitialized() const {

  return true;
}

void AttributeProto::Swap(AttributeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttributeProto::InternalSwap(AttributeProto* other) {
  name_.Swap(&other->name_);
  std::swap(f_, other->f_);
  std::swap(i_, other->i_);
  s_.Swap(&other->s_);
  std::swap(t_, other->t_);
  std::swap(g_, other->g_);
  floats_.UnsafeArenaSwap(&other->floats_);
  ints_.UnsafeArenaSwap(&other->ints_);
  strings_.UnsafeArenaSwap(&other->strings_);
  tensors_.UnsafeArenaSwap(&other->tensors_);
  graphs_.UnsafeArenaSwap(&other->graphs_);
  std::swap(type_, other->type_);
  types_.UnsafeArenaSwap(&other->types_);
  std::swap(shape_, other->shape_);
  shapes_.UnsafeArenaSwap(&other->shapes_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AttributeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AttributeProto_descriptor_;
  metadata.reflection = AttributeProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AttributeProto

// optional string name = 1;
bool AttributeProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AttributeProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void AttributeProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void AttributeProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& AttributeProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.name)
}
void AttributeProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.AttributeProto.name)
}
void AttributeProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.AttributeProto.name)
}
::std::string* AttributeProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttributeProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.name)
}

// optional float f = 2;
bool AttributeProto::has_f() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AttributeProto::set_has_f() {
  _has_bits_[0] |= 0x00000002u;
}
void AttributeProto::clear_has_f() {
  _has_bits_[0] &= ~0x00000002u;
}
void AttributeProto::clear_f() {
  f_ = 0;
  clear_has_f();
}
float AttributeProto::f() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.f)
  return f_;
}
void AttributeProto::set_f(float value) {
  set_has_f();
  f_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.f)
}

// optional int64 i = 3;
bool AttributeProto::has_i() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AttributeProto::set_has_i() {
  _has_bits_[0] |= 0x00000004u;
}
void AttributeProto::clear_has_i() {
  _has_bits_[0] &= ~0x00000004u;
}
void AttributeProto::clear_i() {
  i_ = GOOGLE_LONGLONG(0);
  clear_has_i();
}
::google::protobuf::int64 AttributeProto::i() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.i)
  return i_;
}
void AttributeProto::set_i(::google::protobuf::int64 value) {
  set_has_i();
  i_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.i)
}

// optional bytes s = 4;
bool AttributeProto::has_s() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AttributeProto::set_has_s() {
  _has_bits_[0] |= 0x00000008u;
}
void AttributeProto::clear_has_s() {
  _has_bits_[0] &= ~0x00000008u;
}
void AttributeProto::clear_s() {
  s_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_s();
}
const ::std::string& AttributeProto::s() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.s)
  return s_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_s(const ::std::string& value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.s)
}
void AttributeProto::set_s(const char* value) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.AttributeProto.s)
}
void AttributeProto::set_s(const void* value, size_t size) {
  set_has_s();
  s_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.AttributeProto.s)
}
::std::string* AttributeProto::mutable_s() {
  set_has_s();
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.s)
  return s_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AttributeProto::release_s() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.s)
  clear_has_s();
  return s_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AttributeProto::set_allocated_s(::std::string* s) {
  if (s != NULL) {
    set_has_s();
  } else {
    clear_has_s();
  }
  s_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), s);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.s)
}

// optional .ONNXIR.TensorProto t = 5;
bool AttributeProto::has_t() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void AttributeProto::set_has_t() {
  _has_bits_[0] |= 0x00000010u;
}
void AttributeProto::clear_has_t() {
  _has_bits_[0] &= ~0x00000010u;
}
void AttributeProto::clear_t() {
  if (t_ != NULL) t_->::ONNXIR::TensorProto::Clear();
  clear_has_t();
}
const ::ONNXIR::TensorProto& AttributeProto::t() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.t)
  return t_ != NULL ? *t_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
::ONNXIR::TensorProto* AttributeProto::mutable_t() {
  set_has_t();
  if (t_ == NULL) {
    t_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.t)
  return t_;
}
::ONNXIR::TensorProto* AttributeProto::release_t() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.t)
  clear_has_t();
  ::ONNXIR::TensorProto* temp = t_;
  t_ = NULL;
  return temp;
}
void AttributeProto::set_allocated_t(::ONNXIR::TensorProto* t) {
  delete t_;
  t_ = t;
  if (t) {
    set_has_t();
  } else {
    clear_has_t();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.t)
}

// optional .ONNXIR.GraphProto g = 6;
bool AttributeProto::has_g() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void AttributeProto::set_has_g() {
  _has_bits_[0] |= 0x00000020u;
}
void AttributeProto::clear_has_g() {
  _has_bits_[0] &= ~0x00000020u;
}
void AttributeProto::clear_g() {
  if (g_ != NULL) g_->::ONNXIR::GraphProto::Clear();
  clear_has_g();
}
const ::ONNXIR::GraphProto& AttributeProto::g() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.g)
  return g_ != NULL ? *g_
                         : *::ONNXIR::GraphProto::internal_default_instance();
}
::ONNXIR::GraphProto* AttributeProto::mutable_g() {
  set_has_g();
  if (g_ == NULL) {
    g_ = new ::ONNXIR::GraphProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.g)
  return g_;
}
::ONNXIR::GraphProto* AttributeProto::release_g() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.g)
  clear_has_g();
  ::ONNXIR::GraphProto* temp = g_;
  g_ = NULL;
  return temp;
}
void AttributeProto::set_allocated_g(::ONNXIR::GraphProto* g) {
  delete g_;
  g_ = g;
  if (g) {
    set_has_g();
  } else {
    clear_has_g();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.g)
}

// repeated float floats = 7;
int AttributeProto::floats_size() const {
  return floats_.size();
}
void AttributeProto::clear_floats() {
  floats_.Clear();
}
float AttributeProto::floats(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.floats)
  return floats_.Get(index);
}
void AttributeProto::set_floats(int index, float value) {
  floats_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.floats)
}
void AttributeProto::add_floats(float value) {
  floats_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.floats)
}
const ::google::protobuf::RepeatedField< float >&
AttributeProto::floats() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.floats)
  return floats_;
}
::google::protobuf::RepeatedField< float >*
AttributeProto::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.floats)
  return &floats_;
}

// repeated int64 ints = 8;
int AttributeProto::ints_size() const {
  return ints_.size();
}
void AttributeProto::clear_ints() {
  ints_.Clear();
}
::google::protobuf::int64 AttributeProto::ints(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.ints)
  return ints_.Get(index);
}
void AttributeProto::set_ints(int index, ::google::protobuf::int64 value) {
  ints_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.ints)
}
void AttributeProto::add_ints(::google::protobuf::int64 value) {
  ints_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.ints)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
AttributeProto::ints() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.ints)
  return ints_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
AttributeProto::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.ints)
  return &ints_;
}

// repeated bytes strings = 9;
int AttributeProto::strings_size() const {
  return strings_.size();
}
void AttributeProto::clear_strings() {
  strings_.Clear();
}
const ::std::string& AttributeProto::strings(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.strings)
  return strings_.Get(index);
}
::std::string* AttributeProto::mutable_strings(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.strings)
  return strings_.Mutable(index);
}
void AttributeProto::set_strings(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.AttributeProto.strings)
  strings_.Mutable(index)->assign(value);
}
void AttributeProto::set_strings(int index, const char* value) {
  strings_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.AttributeProto.strings)
}
void AttributeProto::set_strings(int index, const void* value, size_t size) {
  strings_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.AttributeProto.strings)
}
::std::string* AttributeProto::add_strings() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.AttributeProto.strings)
  return strings_.Add();
}
void AttributeProto::add_strings(const ::std::string& value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.strings)
}
void AttributeProto::add_strings(const char* value) {
  strings_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.AttributeProto.strings)
}
void AttributeProto::add_strings(const void* value, size_t size) {
  strings_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.AttributeProto.strings)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AttributeProto::strings() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.strings)
  return strings_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AttributeProto::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.strings)
  return &strings_;
}

// repeated .ONNXIR.TensorProto tensors = 10;
int AttributeProto::tensors_size() const {
  return tensors_.size();
}
void AttributeProto::clear_tensors() {
  tensors_.Clear();
}
const ::ONNXIR::TensorProto& AttributeProto::tensors(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.tensors)
  return tensors_.Get(index);
}
::ONNXIR::TensorProto* AttributeProto::mutable_tensors(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.tensors)
  return tensors_.Mutable(index);
}
::ONNXIR::TensorProto* AttributeProto::add_tensors() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.tensors)
  return tensors_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >*
AttributeProto::mutable_tensors() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.tensors)
  return &tensors_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >&
AttributeProto::tensors() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.tensors)
  return tensors_;
}

// repeated .ONNXIR.GraphProto graphs = 11;
int AttributeProto::graphs_size() const {
  return graphs_.size();
}
void AttributeProto::clear_graphs() {
  graphs_.Clear();
}
const ::ONNXIR::GraphProto& AttributeProto::graphs(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.graphs)
  return graphs_.Get(index);
}
::ONNXIR::GraphProto* AttributeProto::mutable_graphs(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.graphs)
  return graphs_.Mutable(index);
}
::ONNXIR::GraphProto* AttributeProto::add_graphs() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.graphs)
  return graphs_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::GraphProto >*
AttributeProto::mutable_graphs() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.graphs)
  return &graphs_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::GraphProto >&
AttributeProto::graphs() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.graphs)
  return graphs_;
}

// optional .ONNXIR.TypeProto type = 51;
bool AttributeProto::has_type() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void AttributeProto::set_has_type() {
  _has_bits_[0] |= 0x00000800u;
}
void AttributeProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000800u;
}
void AttributeProto::clear_type() {
  if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
  clear_has_type();
}
const ::ONNXIR::TypeProto& AttributeProto::type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.type)
  return type_ != NULL ? *type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
::ONNXIR::TypeProto* AttributeProto::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.type)
  return type_;
}
::ONNXIR::TypeProto* AttributeProto::release_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.type)
  clear_has_type();
  ::ONNXIR::TypeProto* temp = type_;
  type_ = NULL;
  return temp;
}
void AttributeProto::set_allocated_type(::ONNXIR::TypeProto* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.type)
}

// repeated .ONNXIR.TypeProto types = 52;
int AttributeProto::types_size() const {
  return types_.size();
}
void AttributeProto::clear_types() {
  types_.Clear();
}
const ::ONNXIR::TypeProto& AttributeProto::types(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.types)
  return types_.Get(index);
}
::ONNXIR::TypeProto* AttributeProto::mutable_types(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.types)
  return types_.Mutable(index);
}
::ONNXIR::TypeProto* AttributeProto::add_types() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.types)
  return types_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >*
AttributeProto::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.types)
  return &types_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >&
AttributeProto::types() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.types)
  return types_;
}

// optional .ONNXIR.TypeProto.TensorShapeProto shape = 53;
bool AttributeProto::has_shape() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void AttributeProto::set_has_shape() {
  _has_bits_[0] |= 0x00002000u;
}
void AttributeProto::clear_has_shape() {
  _has_bits_[0] &= ~0x00002000u;
}
void AttributeProto::clear_shape() {
  if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
  clear_has_shape();
}
const ::ONNXIR::TypeProto_TensorShapeProto& AttributeProto::shape() const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.shape)
  return shape_ != NULL ? *shape_
                         : *::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance();
}
::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) {
    shape_ = new ::ONNXIR::TypeProto_TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.shape)
  return shape_;
}
::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::release_shape() {
  // @@protoc_insertion_point(field_release:ONNXIR.AttributeProto.shape)
  clear_has_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void AttributeProto::set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.AttributeProto.shape)
}

// repeated .ONNXIR.TypeProto.TensorShapeProto shapes = 54;
int AttributeProto::shapes_size() const {
  return shapes_.size();
}
void AttributeProto::clear_shapes() {
  shapes_.Clear();
}
const ::ONNXIR::TypeProto_TensorShapeProto& AttributeProto::shapes(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.AttributeProto.shapes)
  return shapes_.Get(index);
}
::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::mutable_shapes(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.AttributeProto.shapes)
  return shapes_.Mutable(index);
}
::ONNXIR::TypeProto_TensorShapeProto* AttributeProto::add_shapes() {
  // @@protoc_insertion_point(field_add:ONNXIR.AttributeProto.shapes)
  return shapes_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto >*
AttributeProto::mutable_shapes() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.AttributeProto.shapes)
  return &shapes_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto >&
AttributeProto::shapes() const {
  // @@protoc_insertion_point(field_list:ONNXIR.AttributeProto.shapes)
  return shapes_;
}

inline const AttributeProto* AttributeProto::internal_default_instance() {
  return &AttributeProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueInfoProto::kNameFieldNumber;
const int ValueInfoProto::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueInfoProto::ValueInfoProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ValueInfoProto)
}

void ValueInfoProto::InitAsDefaultInstance() {
  type_ = const_cast< ::ONNXIR::TypeProto*>(
      ::ONNXIR::TypeProto::internal_default_instance());
}

ValueInfoProto::ValueInfoProto(const ValueInfoProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ValueInfoProto)
}

void ValueInfoProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
}

ValueInfoProto::~ValueInfoProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ValueInfoProto)
  SharedDtor();
}

void ValueInfoProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ValueInfoProto_default_instance_.get()) {
    delete type_;
  }
}

void ValueInfoProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueInfoProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValueInfoProto_descriptor_;
}

const ValueInfoProto& ValueInfoProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ValueInfoProto> ValueInfoProto_default_instance_;

ValueInfoProto* ValueInfoProto::New(::google::protobuf::Arena* arena) const {
  ValueInfoProto* n = new ValueInfoProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueInfoProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ValueInfoProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ValueInfoProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ValueInfoProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ValueInfoProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional .ONNXIR.TypeProto type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ValueInfoProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ValueInfoProto)
  return false;
#undef DO_
}

void ValueInfoProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ValueInfoProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ValueInfoProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .ONNXIR.TypeProto type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ValueInfoProto)
}

::google::protobuf::uint8* ValueInfoProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ValueInfoProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ValueInfoProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .ONNXIR.TypeProto type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ValueInfoProto)
  return target;
}

size_t ValueInfoProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ValueInfoProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .ONNXIR.TypeProto type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->type_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueInfoProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ValueInfoProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ValueInfoProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueInfoProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ValueInfoProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ValueInfoProto)
    UnsafeMergeFrom(*source);
  }
}

void ValueInfoProto::MergeFrom(const ValueInfoProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ValueInfoProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ValueInfoProto::UnsafeMergeFrom(const ValueInfoProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      mutable_type()->::ONNXIR::TypeProto::MergeFrom(from.type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ValueInfoProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ValueInfoProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueInfoProto::CopyFrom(const ValueInfoProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ValueInfoProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ValueInfoProto::IsInitialized() const {

  return true;
}

void ValueInfoProto::Swap(ValueInfoProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueInfoProto::InternalSwap(ValueInfoProto* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueInfoProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValueInfoProto_descriptor_;
  metadata.reflection = ValueInfoProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueInfoProto

// optional string name = 1;
bool ValueInfoProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ValueInfoProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ValueInfoProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ValueInfoProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ValueInfoProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueInfoProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ValueInfoProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ValueInfoProto.name)
}
void ValueInfoProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ValueInfoProto.name)
}
void ValueInfoProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ValueInfoProto.name)
}
::std::string* ValueInfoProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueInfoProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ValueInfoProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueInfoProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ValueInfoProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueInfoProto.name)
}

// optional .ONNXIR.TypeProto type = 2;
bool ValueInfoProto::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ValueInfoProto::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void ValueInfoProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void ValueInfoProto::clear_type() {
  if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
  clear_has_type();
}
const ::ONNXIR::TypeProto& ValueInfoProto::type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueInfoProto.type)
  return type_ != NULL ? *type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
::ONNXIR::TypeProto* ValueInfoProto::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueInfoProto.type)
  return type_;
}
::ONNXIR::TypeProto* ValueInfoProto::release_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueInfoProto.type)
  clear_has_type();
  ::ONNXIR::TypeProto* temp = type_;
  type_ = NULL;
  return temp;
}
void ValueInfoProto::set_allocated_type(::ONNXIR::TypeProto* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueInfoProto.type)
}

inline const ValueInfoProto* ValueInfoProto::internal_default_instance() {
  return &ValueInfoProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NodeProto::kInputFieldNumber;
const int NodeProto::kOutputFieldNumber;
const int NodeProto::kNameFieldNumber;
const int NodeProto::kOpTypeFieldNumber;
const int NodeProto::kAttributeFieldNumber;
const int NodeProto::kDocStringFieldNumber;
const int NodeProto::kInputArgCountFieldNumber;
const int NodeProto::kControlInputFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NodeProto::NodeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.NodeProto)
}

void NodeProto::InitAsDefaultInstance() {
}

NodeProto::NodeProto(const NodeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.NodeProto)
}

void NodeProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NodeProto::~NodeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.NodeProto)
  SharedDtor();
}

void NodeProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  op_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NodeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeProto_descriptor_;
}

const NodeProto& NodeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<NodeProto> NodeProto_default_instance_;

NodeProto* NodeProto::New(::google::protobuf::Arena* arena) const {
  NodeProto* n = new NodeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NodeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.NodeProto)
  if (_has_bits_[0 / 32] & 44u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_op_type()) {
      op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  input_.Clear();
  output_.Clear();
  attribute_.Clear();
  input_arg_count_.Clear();
  control_input_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool NodeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.NodeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string input = 1;
      case 1: {
        if (tag == 10) {
         parse_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_input()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->input(this->input_size() - 1).data(),
            this->input(this->input_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.NodeProto.input");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_input;
        if (input->ExpectTag(18)) goto parse_output;
        break;
      }

      // repeated string output = 2;
      case 2: {
        if (tag == 18) {
         parse_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->output(this->output_size() - 1).data(),
            this->output(this->output_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.NodeProto.output");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_output;
        if (input->ExpectTag(26)) goto parse_name;
        break;
      }

      // optional string name = 3;
      case 3: {
        if (tag == 26) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.NodeProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_op_type;
        break;
      }

      // optional string op_type = 4;
      case 4: {
        if (tag == 34) {
         parse_op_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_op_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->op_type().data(), this->op_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.NodeProto.op_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_attribute;
        break;
      }

      // repeated .ONNXIR.AttributeProto attribute = 5;
      case 5: {
        if (tag == 42) {
         parse_attribute:
          DO_(input->IncrementRecursionDepth());
         parse_loop_attribute:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attribute()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_attribute;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(50)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (tag == 50) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.NodeProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(400)) goto parse_input_arg_count;
        break;
      }

      // repeated int32 input_arg_count = 50;
      case 50: {
        if (tag == 400) {
         parse_input_arg_count:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 400, input, this->mutable_input_arg_count())));
        } else if (tag == 402) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_input_arg_count())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(400)) goto parse_input_arg_count;
        if (input->ExpectTag(410)) goto parse_control_input;
        break;
      }

      // repeated string control_input = 51;
      case 51: {
        if (tag == 410) {
         parse_control_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_control_input()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->control_input(this->control_input_size() - 1).data(),
            this->control_input(this->control_input_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.NodeProto.control_input");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_control_input;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.NodeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.NodeProto)
  return false;
#undef DO_
}

void NodeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.NodeProto)
  // repeated string input = 1;
  for (int i = 0; i < this->input_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), this->input(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.input");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->input(i), output);
  }

  // repeated string output = 2;
  for (int i = 0; i < this->output_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), this->output(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.output");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->output(i), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string op_type = 4;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.op_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->op_type(), output);
  }

  // repeated .ONNXIR.AttributeProto attribute = 5;
  for (unsigned int i = 0, n = this->attribute_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->attribute(i), output);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // repeated int32 input_arg_count = 50;
  for (int i = 0; i < this->input_arg_count_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      50, this->input_arg_count(i), output);
  }

  // repeated string control_input = 51;
  for (int i = 0; i < this->control_input_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->control_input(i).data(), this->control_input(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.control_input");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      51, this->control_input(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.NodeProto)
}

::google::protobuf::uint8* NodeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.NodeProto)
  // repeated string input = 1;
  for (int i = 0; i < this->input_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->input(i).data(), this->input(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.input");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->input(i), target);
  }

  // repeated string output = 2;
  for (int i = 0; i < this->output_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->output(i).data(), this->output(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.output");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->output(i), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string op_type = 4;
  if (has_op_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->op_type().data(), this->op_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.op_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->op_type(), target);
  }

  // repeated .ONNXIR.AttributeProto attribute = 5;
  for (unsigned int i = 0, n = this->attribute_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->attribute(i), false, target);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // repeated int32 input_arg_count = 50;
  for (int i = 0; i < this->input_arg_count_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(50, this->input_arg_count(i), target);
  }

  // repeated string control_input = 51;
  for (int i = 0; i < this->control_input_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->control_input(i).data(), this->control_input(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.NodeProto.control_input");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(51, this->control_input(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.NodeProto)
  return target;
}

size_t NodeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.NodeProto)
  size_t total_size = 0;

  if (_has_bits_[2 / 32] & 44u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string op_type = 4;
    if (has_op_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->op_type());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated string input = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->input_size());
  for (int i = 0; i < this->input_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->input(i));
  }

  // repeated string output = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->output_size());
  for (int i = 0; i < this->output_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->output(i));
  }

  // repeated .ONNXIR.AttributeProto attribute = 5;
  {
    unsigned int count = this->attribute_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attribute(i));
    }
  }

  // repeated int32 input_arg_count = 50;
  {
    size_t data_size = 0;
    unsigned int count = this->input_arg_count_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->input_arg_count(i));
    }
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->input_arg_count_size());
    total_size += data_size;
  }

  // repeated string control_input = 51;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->control_input_size());
  for (int i = 0; i < this->control_input_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->control_input(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.NodeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const NodeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NodeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.NodeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.NodeProto)
    UnsafeMergeFrom(*source);
  }
}

void NodeProto::MergeFrom(const NodeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.NodeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void NodeProto::UnsafeMergeFrom(const NodeProto& from) {
  GOOGLE_DCHECK(&from != this);
  input_.UnsafeMergeFrom(from.input_);
  output_.UnsafeMergeFrom(from.output_);
  attribute_.MergeFrom(from.attribute_);
  input_arg_count_.UnsafeMergeFrom(from.input_arg_count_);
  control_input_.UnsafeMergeFrom(from.control_input_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_op_type()) {
      set_has_op_type();
      op_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.op_type_);
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void NodeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.NodeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeProto::CopyFrom(const NodeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.NodeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool NodeProto::IsInitialized() const {

  return true;
}

void NodeProto::Swap(NodeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NodeProto::InternalSwap(NodeProto* other) {
  input_.UnsafeArenaSwap(&other->input_);
  output_.UnsafeArenaSwap(&other->output_);
  name_.Swap(&other->name_);
  op_type_.Swap(&other->op_type_);
  attribute_.UnsafeArenaSwap(&other->attribute_);
  doc_string_.Swap(&other->doc_string_);
  input_arg_count_.UnsafeArenaSwap(&other->input_arg_count_);
  control_input_.UnsafeArenaSwap(&other->control_input_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NodeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeProto_descriptor_;
  metadata.reflection = NodeProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NodeProto

// repeated string input = 1;
int NodeProto::input_size() const {
  return input_.size();
}
void NodeProto::clear_input() {
  input_.Clear();
}
const ::std::string& NodeProto::input(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.input)
  return input_.Get(index);
}
::std::string* NodeProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.input)
  return input_.Mutable(index);
}
void NodeProto::set_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.input)
  input_.Mutable(index)->assign(value);
}
void NodeProto::set_input(int index, const char* value) {
  input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.input)
}
void NodeProto::set_input(int index, const char* value, size_t size) {
  input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.input)
}
::std::string* NodeProto::add_input() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.NodeProto.input)
  return input_.Add();
}
void NodeProto::add_input(const ::std::string& value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.input)
}
void NodeProto::add_input(const char* value) {
  input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.NodeProto.input)
}
void NodeProto::add_input(const char* value, size_t size) {
  input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.NodeProto.input)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::input() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.input)
  return input_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.input)
  return &input_;
}

// repeated string output = 2;
int NodeProto::output_size() const {
  return output_.size();
}
void NodeProto::clear_output() {
  output_.Clear();
}
const ::std::string& NodeProto::output(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.output)
  return output_.Get(index);
}
::std::string* NodeProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.output)
  return output_.Mutable(index);
}
void NodeProto::set_output(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.output)
  output_.Mutable(index)->assign(value);
}
void NodeProto::set_output(int index, const char* value) {
  output_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.output)
}
void NodeProto::set_output(int index, const char* value, size_t size) {
  output_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.output)
}
::std::string* NodeProto::add_output() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.NodeProto.output)
  return output_.Add();
}
void NodeProto::add_output(const ::std::string& value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.output)
}
void NodeProto::add_output(const char* value) {
  output_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.NodeProto.output)
}
void NodeProto::add_output(const char* value, size_t size) {
  output_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.NodeProto.output)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::output() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.output)
  return output_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.output)
  return &output_;
}

// optional string name = 3;
bool NodeProto::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void NodeProto::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
void NodeProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
void NodeProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& NodeProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.name)
}
void NodeProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.name)
}
void NodeProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.name)
}
::std::string* NodeProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.NodeProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.NodeProto.name)
}

// optional string op_type = 4;
bool NodeProto::has_op_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void NodeProto::set_has_op_type() {
  _has_bits_[0] |= 0x00000008u;
}
void NodeProto::clear_has_op_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void NodeProto::clear_op_type() {
  op_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_op_type();
}
const ::std::string& NodeProto::op_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.op_type)
  return op_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_op_type(const ::std::string& value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.op_type)
}
void NodeProto::set_op_type(const char* value) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.op_type)
}
void NodeProto::set_op_type(const char* value, size_t size) {
  set_has_op_type();
  op_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.op_type)
}
::std::string* NodeProto::mutable_op_type() {
  set_has_op_type();
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.op_type)
  return op_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeProto::release_op_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.NodeProto.op_type)
  clear_has_op_type();
  return op_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_allocated_op_type(::std::string* op_type) {
  if (op_type != NULL) {
    set_has_op_type();
  } else {
    clear_has_op_type();
  }
  op_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), op_type);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.NodeProto.op_type)
}

// repeated .ONNXIR.AttributeProto attribute = 5;
int NodeProto::attribute_size() const {
  return attribute_.size();
}
void NodeProto::clear_attribute() {
  attribute_.Clear();
}
const ::ONNXIR::AttributeProto& NodeProto::attribute(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.attribute)
  return attribute_.Get(index);
}
::ONNXIR::AttributeProto* NodeProto::mutable_attribute(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.attribute)
  return attribute_.Mutable(index);
}
::ONNXIR::AttributeProto* NodeProto::add_attribute() {
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.attribute)
  return attribute_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >*
NodeProto::mutable_attribute() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.attribute)
  return &attribute_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >&
NodeProto::attribute() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.attribute)
  return attribute_;
}

// optional string doc_string = 6;
bool NodeProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void NodeProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000020u;
}
void NodeProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000020u;
}
void NodeProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& NodeProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.doc_string)
}
void NodeProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.doc_string)
}
void NodeProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.doc_string)
}
::std::string* NodeProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NodeProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.NodeProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NodeProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.NodeProto.doc_string)
}

// repeated int32 input_arg_count = 50;
int NodeProto::input_arg_count_size() const {
  return input_arg_count_.size();
}
void NodeProto::clear_input_arg_count() {
  input_arg_count_.Clear();
}
::google::protobuf::int32 NodeProto::input_arg_count(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.input_arg_count)
  return input_arg_count_.Get(index);
}
void NodeProto::set_input_arg_count(int index, ::google::protobuf::int32 value) {
  input_arg_count_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.input_arg_count)
}
void NodeProto::add_input_arg_count(::google::protobuf::int32 value) {
  input_arg_count_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.input_arg_count)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
NodeProto::input_arg_count() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.input_arg_count)
  return input_arg_count_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
NodeProto::mutable_input_arg_count() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.input_arg_count)
  return &input_arg_count_;
}

// repeated string control_input = 51;
int NodeProto::control_input_size() const {
  return control_input_.size();
}
void NodeProto::clear_control_input() {
  control_input_.Clear();
}
const ::std::string& NodeProto::control_input(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.NodeProto.control_input)
  return control_input_.Get(index);
}
::std::string* NodeProto::mutable_control_input(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.NodeProto.control_input)
  return control_input_.Mutable(index);
}
void NodeProto::set_control_input(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.NodeProto.control_input)
  control_input_.Mutable(index)->assign(value);
}
void NodeProto::set_control_input(int index, const char* value) {
  control_input_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.NodeProto.control_input)
}
void NodeProto::set_control_input(int index, const char* value, size_t size) {
  control_input_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.NodeProto.control_input)
}
::std::string* NodeProto::add_control_input() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.NodeProto.control_input)
  return control_input_.Add();
}
void NodeProto::add_control_input(const ::std::string& value) {
  control_input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.NodeProto.control_input)
}
void NodeProto::add_control_input(const char* value) {
  control_input_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.NodeProto.control_input)
}
void NodeProto::add_control_input(const char* value, size_t size) {
  control_input_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.NodeProto.control_input)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
NodeProto::control_input() const {
  // @@protoc_insertion_point(field_list:ONNXIR.NodeProto.control_input)
  return control_input_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
NodeProto::mutable_control_input() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.NodeProto.control_input)
  return &control_input_;
}

inline const NodeProto* NodeProto::internal_default_instance() {
  return &NodeProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelProto::kIrVersionFieldNumber;
const int ModelProto::kProducerNameFieldNumber;
const int ModelProto::kProducerVersionFieldNumber;
const int ModelProto::kDomainFieldNumber;
const int ModelProto::kModelVersionFieldNumber;
const int ModelProto::kDocStringFieldNumber;
const int ModelProto::kGraphFieldNumber;
const int ModelProto::kModelAuthorFieldNumber;
const int ModelProto::kModelLicenseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelProto::ModelProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ModelProto)
}

void ModelProto::InitAsDefaultInstance() {
  graph_ = const_cast< ::ONNXIR::GraphProto*>(
      ::ONNXIR::GraphProto::internal_default_instance());
}

ModelProto::ModelProto(const ModelProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ModelProto)
}

void ModelProto::SharedCtor() {
  _cached_size_ = 0;
  producer_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_license_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  graph_ = NULL;
  ::memset(&ir_version_, 0, reinterpret_cast<char*>(&model_version_) -
    reinterpret_cast<char*>(&ir_version_) + sizeof(model_version_));
}

ModelProto::~ModelProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ModelProto)
  SharedDtor();
}

void ModelProto::SharedDtor() {
  producer_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  producer_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_license_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ModelProto_default_instance_.get()) {
    delete graph_;
  }
}

void ModelProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ModelProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ModelProto_descriptor_;
}

const ModelProto& ModelProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ModelProto> ModelProto_default_instance_;

ModelProto* ModelProto::New(::google::protobuf::Arena* arena) const {
  ModelProto* n = new ModelProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ModelProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ModelProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ModelProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ModelProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(ir_version_, model_version_);
    if (has_producer_name()) {
      producer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_producer_version()) {
      producer_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_domain()) {
      domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_graph()) {
      if (graph_ != NULL) graph_->::ONNXIR::GraphProto::Clear();
    }
    if (has_model_author()) {
      model_author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_model_license()) {
    model_license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ModelProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ModelProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ir_version = 1;
      case 1: {
        if (tag == 8) {
          set_has_ir_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ir_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_producer_name;
        break;
      }

      // optional string producer_name = 2;
      case 2: {
        if (tag == 18) {
         parse_producer_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->producer_name().data(), this->producer_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ModelProto.producer_name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_producer_version;
        break;
      }

      // optional string producer_version = 3;
      case 3: {
        if (tag == 26) {
         parse_producer_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->producer_version().data(), this->producer_version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ModelProto.producer_version");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_domain;
        break;
      }

      // optional string domain = 4;
      case 4: {
        if (tag == 34) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ModelProto.domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_model_version;
        break;
      }

      // optional int64 model_version = 5;
      case 5: {
        if (tag == 40) {
         parse_model_version:
          set_has_model_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &model_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 6;
      case 6: {
        if (tag == 50) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ModelProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_graph;
        break;
      }

      // optional .ONNXIR.GraphProto graph = 7;
      case 7: {
        if (tag == 58) {
         parse_graph:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graph()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_model_author;
        break;
      }

      // optional string model_author = 50;
      case 50: {
        if (tag == 402) {
         parse_model_author:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_author()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_author().data(), this->model_author().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ModelProto.model_author");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_model_license;
        break;
      }

      // optional string model_license = 51;
      case 51: {
        if (tag == 410) {
         parse_model_license:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_license()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_license().data(), this->model_license().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ModelProto.model_license");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ModelProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ModelProto)
  return false;
#undef DO_
}

void ModelProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ModelProto)
  // optional int64 ir_version = 1;
  if (has_ir_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ir_version(), output);
  }

  // optional string producer_name = 2;
  if (has_producer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_name().data(), this->producer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.producer_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->producer_name(), output);
  }

  // optional string producer_version = 3;
  if (has_producer_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_version().data(), this->producer_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.producer_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->producer_version(), output);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->domain(), output);
  }

  // optional int64 model_version = 5;
  if (has_model_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->model_version(), output);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->doc_string(), output);
  }

  // optional .ONNXIR.GraphProto graph = 7;
  if (has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->graph_, output);
  }

  // optional string model_author = 50;
  if (has_model_author()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_author().data(), this->model_author().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.model_author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      50, this->model_author(), output);
  }

  // optional string model_license = 51;
  if (has_model_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_license().data(), this->model_license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.model_license");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      51, this->model_license(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ModelProto)
}

::google::protobuf::uint8* ModelProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ModelProto)
  // optional int64 ir_version = 1;
  if (has_ir_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ir_version(), target);
  }

  // optional string producer_name = 2;
  if (has_producer_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_name().data(), this->producer_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.producer_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->producer_name(), target);
  }

  // optional string producer_version = 3;
  if (has_producer_version()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_version().data(), this->producer_version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.producer_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->producer_version(), target);
  }

  // optional string domain = 4;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->domain(), target);
  }

  // optional int64 model_version = 5;
  if (has_model_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->model_version(), target);
  }

  // optional string doc_string = 6;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->doc_string(), target);
  }

  // optional .ONNXIR.GraphProto graph = 7;
  if (has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->graph_, false, target);
  }

  // optional string model_author = 50;
  if (has_model_author()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_author().data(), this->model_author().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.model_author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        50, this->model_author(), target);
  }

  // optional string model_license = 51;
  if (has_model_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_license().data(), this->model_license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ModelProto.model_license");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        51, this->model_license(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ModelProto)
  return target;
}

size_t ModelProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ModelProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int64 ir_version = 1;
    if (has_ir_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ir_version());
    }

    // optional string producer_name = 2;
    if (has_producer_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_name());
    }

    // optional string producer_version = 3;
    if (has_producer_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_version());
    }

    // optional string domain = 4;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

    // optional int64 model_version = 5;
    if (has_model_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->model_version());
    }

    // optional string doc_string = 6;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

    // optional .ONNXIR.GraphProto graph = 7;
    if (has_graph()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->graph_);
    }

    // optional string model_author = 50;
    if (has_model_author()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_author());
    }

  }
  // optional string model_license = 51;
  if (has_model_license()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->model_license());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ModelProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ModelProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ModelProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ModelProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ModelProto)
    UnsafeMergeFrom(*source);
  }
}

void ModelProto::MergeFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ModelProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ModelProto::UnsafeMergeFrom(const ModelProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ir_version()) {
      set_ir_version(from.ir_version());
    }
    if (from.has_producer_name()) {
      set_has_producer_name();
      producer_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_name_);
    }
    if (from.has_producer_version()) {
      set_has_producer_version();
      producer_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_version_);
    }
    if (from.has_domain()) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
    if (from.has_model_version()) {
      set_model_version(from.model_version());
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
    if (from.has_graph()) {
      mutable_graph()->::ONNXIR::GraphProto::MergeFrom(from.graph());
    }
    if (from.has_model_author()) {
      set_has_model_author();
      model_author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_author_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_model_license()) {
      set_has_model_license();
      model_license_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_license_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ModelProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ModelProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelProto::CopyFrom(const ModelProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ModelProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ModelProto::IsInitialized() const {

  return true;
}

void ModelProto::Swap(ModelProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelProto::InternalSwap(ModelProto* other) {
  std::swap(ir_version_, other->ir_version_);
  producer_name_.Swap(&other->producer_name_);
  producer_version_.Swap(&other->producer_version_);
  domain_.Swap(&other->domain_);
  std::swap(model_version_, other->model_version_);
  doc_string_.Swap(&other->doc_string_);
  std::swap(graph_, other->graph_);
  model_author_.Swap(&other->model_author_);
  model_license_.Swap(&other->model_license_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ModelProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ModelProto_descriptor_;
  metadata.reflection = ModelProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ModelProto

// optional int64 ir_version = 1;
bool ModelProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ModelProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000001u;
}
void ModelProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void ModelProto::clear_ir_version() {
  ir_version_ = GOOGLE_LONGLONG(0);
  clear_has_ir_version();
}
::google::protobuf::int64 ModelProto::ir_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.ir_version)
  return ir_version_;
}
void ModelProto::set_ir_version(::google::protobuf::int64 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.ir_version)
}

// optional string producer_name = 2;
bool ModelProto::has_producer_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ModelProto::set_has_producer_name() {
  _has_bits_[0] |= 0x00000002u;
}
void ModelProto::clear_has_producer_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void ModelProto::clear_producer_name() {
  producer_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_name();
}
const ::std::string& ModelProto::producer_name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.producer_name)
  return producer_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_producer_name(const ::std::string& value) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.producer_name)
}
void ModelProto::set_producer_name(const char* value) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.producer_name)
}
void ModelProto::set_producer_name(const char* value, size_t size) {
  set_has_producer_name();
  producer_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.producer_name)
}
::std::string* ModelProto::mutable_producer_name() {
  set_has_producer_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.producer_name)
  return producer_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_producer_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.producer_name)
  clear_has_producer_name();
  return producer_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_producer_name(::std::string* producer_name) {
  if (producer_name != NULL) {
    set_has_producer_name();
  } else {
    clear_has_producer_name();
  }
  producer_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.producer_name)
}

// optional string producer_version = 3;
bool ModelProto::has_producer_version() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ModelProto::set_has_producer_version() {
  _has_bits_[0] |= 0x00000004u;
}
void ModelProto::clear_has_producer_version() {
  _has_bits_[0] &= ~0x00000004u;
}
void ModelProto::clear_producer_version() {
  producer_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_version();
}
const ::std::string& ModelProto::producer_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.producer_version)
  return producer_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_producer_version(const ::std::string& value) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.producer_version)
}
void ModelProto::set_producer_version(const char* value) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.producer_version)
}
void ModelProto::set_producer_version(const char* value, size_t size) {
  set_has_producer_version();
  producer_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.producer_version)
}
::std::string* ModelProto::mutable_producer_version() {
  set_has_producer_version();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.producer_version)
  return producer_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_producer_version() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.producer_version)
  clear_has_producer_version();
  return producer_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_producer_version(::std::string* producer_version) {
  if (producer_version != NULL) {
    set_has_producer_version();
  } else {
    clear_has_producer_version();
  }
  producer_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_version);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.producer_version)
}

// optional string domain = 4;
bool ModelProto::has_domain() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ModelProto::set_has_domain() {
  _has_bits_[0] |= 0x00000008u;
}
void ModelProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000008u;
}
void ModelProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
const ::std::string& ModelProto::domain() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.domain)
}
void ModelProto::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.domain)
}
void ModelProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.domain)
}
::std::string* ModelProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_domain() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.domain)
}

// optional int64 model_version = 5;
bool ModelProto::has_model_version() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ModelProto::set_has_model_version() {
  _has_bits_[0] |= 0x00000010u;
}
void ModelProto::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000010u;
}
void ModelProto::clear_model_version() {
  model_version_ = GOOGLE_LONGLONG(0);
  clear_has_model_version();
}
::google::protobuf::int64 ModelProto::model_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.model_version)
  return model_version_;
}
void ModelProto::set_model_version(::google::protobuf::int64 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.model_version)
}

// optional string doc_string = 6;
bool ModelProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ModelProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000020u;
}
void ModelProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000020u;
}
void ModelProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& ModelProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.doc_string)
}
void ModelProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.doc_string)
}
void ModelProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.doc_string)
}
::std::string* ModelProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.doc_string)
}

// optional .ONNXIR.GraphProto graph = 7;
bool ModelProto::has_graph() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ModelProto::set_has_graph() {
  _has_bits_[0] |= 0x00000040u;
}
void ModelProto::clear_has_graph() {
  _has_bits_[0] &= ~0x00000040u;
}
void ModelProto::clear_graph() {
  if (graph_ != NULL) graph_->::ONNXIR::GraphProto::Clear();
  clear_has_graph();
}
const ::ONNXIR::GraphProto& ModelProto::graph() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.graph)
  return graph_ != NULL ? *graph_
                         : *::ONNXIR::GraphProto::internal_default_instance();
}
::ONNXIR::GraphProto* ModelProto::mutable_graph() {
  set_has_graph();
  if (graph_ == NULL) {
    graph_ = new ::ONNXIR::GraphProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.graph)
  return graph_;
}
::ONNXIR::GraphProto* ModelProto::release_graph() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.graph)
  clear_has_graph();
  ::ONNXIR::GraphProto* temp = graph_;
  graph_ = NULL;
  return temp;
}
void ModelProto::set_allocated_graph(::ONNXIR::GraphProto* graph) {
  delete graph_;
  graph_ = graph;
  if (graph) {
    set_has_graph();
  } else {
    clear_has_graph();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.graph)
}

// optional string model_author = 50;
bool ModelProto::has_model_author() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ModelProto::set_has_model_author() {
  _has_bits_[0] |= 0x00000080u;
}
void ModelProto::clear_has_model_author() {
  _has_bits_[0] &= ~0x00000080u;
}
void ModelProto::clear_model_author() {
  model_author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_author();
}
const ::std::string& ModelProto::model_author() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.model_author)
  return model_author_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_model_author(const ::std::string& value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.model_author)
}
void ModelProto::set_model_author(const char* value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.model_author)
}
void ModelProto::set_model_author(const char* value, size_t size) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.model_author)
}
::std::string* ModelProto::mutable_model_author() {
  set_has_model_author();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.model_author)
  return model_author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_model_author() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.model_author)
  clear_has_model_author();
  return model_author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_model_author(::std::string* model_author) {
  if (model_author != NULL) {
    set_has_model_author();
  } else {
    clear_has_model_author();
  }
  model_author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_author);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.model_author)
}

// optional string model_license = 51;
bool ModelProto::has_model_license() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ModelProto::set_has_model_license() {
  _has_bits_[0] |= 0x00000100u;
}
void ModelProto::clear_has_model_license() {
  _has_bits_[0] &= ~0x00000100u;
}
void ModelProto::clear_model_license() {
  model_license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_license();
}
const ::std::string& ModelProto::model_license() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ModelProto.model_license)
  return model_license_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_model_license(const ::std::string& value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ModelProto.model_license)
}
void ModelProto::set_model_license(const char* value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ModelProto.model_license)
}
void ModelProto::set_model_license(const char* value, size_t size) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ModelProto.model_license)
}
::std::string* ModelProto::mutable_model_license() {
  set_has_model_license();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ModelProto.model_license)
  return model_license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ModelProto::release_model_license() {
  // @@protoc_insertion_point(field_release:ONNXIR.ModelProto.model_license)
  clear_has_model_license();
  return model_license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ModelProto::set_allocated_model_license(::std::string* model_license) {
  if (model_license != NULL) {
    set_has_model_license();
  } else {
    clear_has_model_license();
  }
  model_license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_license);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ModelProto.model_license)
}

inline const ModelProto* ModelProto::internal_default_instance() {
  return &ModelProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GraphProto::kNodeFieldNumber;
const int GraphProto::kNameFieldNumber;
const int GraphProto::kInitializerFieldNumber;
const int GraphProto::kDocStringFieldNumber;
const int GraphProto::kInputFieldNumber;
const int GraphProto::kOutputFieldNumber;
const int GraphProto::kValueInfoFieldNumber;
const int GraphProto::kFunctionFieldNumber;
const int GraphProto::kOperatorFieldNumber;
const int GraphProto::kImportedLibrariesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GraphProto::GraphProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.GraphProto)
}

void GraphProto::InitAsDefaultInstance() {
}

GraphProto::GraphProto(const GraphProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.GraphProto)
}

void GraphProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GraphProto::~GraphProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.GraphProto)
  SharedDtor();
}

void GraphProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GraphProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GraphProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GraphProto_descriptor_;
}

const GraphProto& GraphProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GraphProto> GraphProto_default_instance_;

GraphProto* GraphProto::New(::google::protobuf::Arena* arena) const {
  GraphProto* n = new GraphProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GraphProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.GraphProto)
  if (_has_bits_[0 / 32] & 10u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  node_.Clear();
  initializer_.Clear();
  input_.Clear();
  output_.Clear();
  value_info_.Clear();
  function_.Clear();
  operator__.Clear();
  imported_libraries_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool GraphProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.GraphProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ONNXIR.NodeProto node = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_node()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_node;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.GraphProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_initializer;
        break;
      }

      // repeated .ONNXIR.TensorProto initializer = 5;
      case 5: {
        if (tag == 42) {
         parse_initializer:
          DO_(input->IncrementRecursionDepth());
         parse_loop_initializer:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_initializer()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_initializer;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(82)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 10;
      case 10: {
        if (tag == 82) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.GraphProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_input;
        break;
      }

      // repeated .ONNXIR.ValueInfoProto input = 11;
      case 11: {
        if (tag == 90) {
         parse_input:
          DO_(input->IncrementRecursionDepth());
         parse_loop_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_input;
        if (input->ExpectTag(98)) goto parse_loop_output;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.ValueInfoProto output = 12;
      case 12: {
        if (tag == 98) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_output()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_loop_output;
        if (input->ExpectTag(106)) goto parse_loop_value_info;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.ValueInfoProto value_info = 13;
      case 13: {
        if (tag == 106) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_value_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_value_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_loop_value_info;
        if (input->ExpectTag(402)) goto parse_loop_function;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.FunctionDefProto function = 50;
      case 50: {
        if (tag == 402) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_function()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(402)) goto parse_loop_function;
        if (input->ExpectTag(410)) goto parse_loop_operator;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.OperatorDeclProto operator = 51;
      case 51: {
        if (tag == 410) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_operator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operator_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(410)) goto parse_loop_operator;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(418)) goto parse_imported_libraries;
        break;
      }

      // repeated string imported_libraries = 52;
      case 52: {
        if (tag == 418) {
         parse_imported_libraries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_imported_libraries()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imported_libraries(this->imported_libraries_size() - 1).data(),
            this->imported_libraries(this->imported_libraries_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.GraphProto.imported_libraries");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(418)) goto parse_imported_libraries;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.GraphProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.GraphProto)
  return false;
#undef DO_
}

void GraphProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.GraphProto)
  // repeated .ONNXIR.NodeProto node = 1;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(i), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.GraphProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // repeated .ONNXIR.TensorProto initializer = 5;
  for (unsigned int i = 0, n = this->initializer_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->initializer(i), output);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.GraphProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->doc_string(), output);
  }

  // repeated .ONNXIR.ValueInfoProto input = 11;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->input(i), output);
  }

  // repeated .ONNXIR.ValueInfoProto output = 12;
  for (unsigned int i = 0, n = this->output_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->output(i), output);
  }

  // repeated .ONNXIR.ValueInfoProto value_info = 13;
  for (unsigned int i = 0, n = this->value_info_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->value_info(i), output);
  }

  // repeated .ONNXIR.FunctionDefProto function = 50;
  for (unsigned int i = 0, n = this->function_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50, this->function(i), output);
  }

  // repeated .ONNXIR.OperatorDeclProto operator = 51;
  for (unsigned int i = 0, n = this->operator__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51, this->operator_(i), output);
  }

  // repeated string imported_libraries = 52;
  for (int i = 0; i < this->imported_libraries_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imported_libraries(i).data(), this->imported_libraries(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.GraphProto.imported_libraries");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      52, this->imported_libraries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.GraphProto)
}

::google::protobuf::uint8* GraphProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.GraphProto)
  // repeated .ONNXIR.NodeProto node = 1;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->node(i), false, target);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.GraphProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // repeated .ONNXIR.TensorProto initializer = 5;
  for (unsigned int i = 0, n = this->initializer_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->initializer(i), false, target);
  }

  // optional string doc_string = 10;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.GraphProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->doc_string(), target);
  }

  // repeated .ONNXIR.ValueInfoProto input = 11;
  for (unsigned int i = 0, n = this->input_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->input(i), false, target);
  }

  // repeated .ONNXIR.ValueInfoProto output = 12;
  for (unsigned int i = 0, n = this->output_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->output(i), false, target);
  }

  // repeated .ONNXIR.ValueInfoProto value_info = 13;
  for (unsigned int i = 0, n = this->value_info_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, this->value_info(i), false, target);
  }

  // repeated .ONNXIR.FunctionDefProto function = 50;
  for (unsigned int i = 0, n = this->function_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        50, this->function(i), false, target);
  }

  // repeated .ONNXIR.OperatorDeclProto operator = 51;
  for (unsigned int i = 0, n = this->operator__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        51, this->operator_(i), false, target);
  }

  // repeated string imported_libraries = 52;
  for (int i = 0; i < this->imported_libraries_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imported_libraries(i).data(), this->imported_libraries(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.GraphProto.imported_libraries");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(52, this->imported_libraries(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.GraphProto)
  return target;
}

size_t GraphProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.GraphProto)
  size_t total_size = 0;

  if (_has_bits_[1 / 32] & 10u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string doc_string = 10;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated .ONNXIR.NodeProto node = 1;
  {
    unsigned int count = this->node_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node(i));
    }
  }

  // repeated .ONNXIR.TensorProto initializer = 5;
  {
    unsigned int count = this->initializer_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->initializer(i));
    }
  }

  // repeated .ONNXIR.ValueInfoProto input = 11;
  {
    unsigned int count = this->input_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input(i));
    }
  }

  // repeated .ONNXIR.ValueInfoProto output = 12;
  {
    unsigned int count = this->output_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output(i));
    }
  }

  // repeated .ONNXIR.ValueInfoProto value_info = 13;
  {
    unsigned int count = this->value_info_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->value_info(i));
    }
  }

  // repeated .ONNXIR.FunctionDefProto function = 50;
  {
    unsigned int count = this->function_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function(i));
    }
  }

  // repeated .ONNXIR.OperatorDeclProto operator = 51;
  {
    unsigned int count = this->operator__size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->operator_(i));
    }
  }

  // repeated string imported_libraries = 52;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->imported_libraries_size());
  for (int i = 0; i < this->imported_libraries_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->imported_libraries(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GraphProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.GraphProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GraphProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GraphProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.GraphProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.GraphProto)
    UnsafeMergeFrom(*source);
  }
}

void GraphProto::MergeFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.GraphProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GraphProto::UnsafeMergeFrom(const GraphProto& from) {
  GOOGLE_DCHECK(&from != this);
  node_.MergeFrom(from.node_);
  initializer_.MergeFrom(from.initializer_);
  input_.MergeFrom(from.input_);
  output_.MergeFrom(from.output_);
  value_info_.MergeFrom(from.value_info_);
  function_.MergeFrom(from.function_);
  operator__.MergeFrom(from.operator__);
  imported_libraries_.UnsafeMergeFrom(from.imported_libraries_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void GraphProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.GraphProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GraphProto::CopyFrom(const GraphProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.GraphProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GraphProto::IsInitialized() const {

  return true;
}

void GraphProto::Swap(GraphProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GraphProto::InternalSwap(GraphProto* other) {
  node_.UnsafeArenaSwap(&other->node_);
  name_.Swap(&other->name_);
  initializer_.UnsafeArenaSwap(&other->initializer_);
  doc_string_.Swap(&other->doc_string_);
  input_.UnsafeArenaSwap(&other->input_);
  output_.UnsafeArenaSwap(&other->output_);
  value_info_.UnsafeArenaSwap(&other->value_info_);
  function_.UnsafeArenaSwap(&other->function_);
  operator__.UnsafeArenaSwap(&other->operator__);
  imported_libraries_.UnsafeArenaSwap(&other->imported_libraries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GraphProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GraphProto_descriptor_;
  metadata.reflection = GraphProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GraphProto

// repeated .ONNXIR.NodeProto node = 1;
int GraphProto::node_size() const {
  return node_.size();
}
void GraphProto::clear_node() {
  node_.Clear();
}
const ::ONNXIR::NodeProto& GraphProto::node(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.node)
  return node_.Get(index);
}
::ONNXIR::NodeProto* GraphProto::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.node)
  return node_.Mutable(index);
}
::ONNXIR::NodeProto* GraphProto::add_node() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.node)
  return node_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >*
GraphProto::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.node)
  return &node_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >&
GraphProto::node() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.node)
  return node_;
}

// optional string name = 2;
bool GraphProto::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GraphProto::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void GraphProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void GraphProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& GraphProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GraphProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.GraphProto.name)
}
void GraphProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.GraphProto.name)
}
void GraphProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.GraphProto.name)
}
::std::string* GraphProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GraphProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.GraphProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GraphProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.GraphProto.name)
}

// repeated .ONNXIR.TensorProto initializer = 5;
int GraphProto::initializer_size() const {
  return initializer_.size();
}
void GraphProto::clear_initializer() {
  initializer_.Clear();
}
const ::ONNXIR::TensorProto& GraphProto::initializer(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.initializer)
  return initializer_.Get(index);
}
::ONNXIR::TensorProto* GraphProto::mutable_initializer(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.initializer)
  return initializer_.Mutable(index);
}
::ONNXIR::TensorProto* GraphProto::add_initializer() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.initializer)
  return initializer_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >*
GraphProto::mutable_initializer() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.initializer)
  return &initializer_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TensorProto >&
GraphProto::initializer() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.initializer)
  return initializer_;
}

// optional string doc_string = 10;
bool GraphProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GraphProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
void GraphProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
void GraphProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& GraphProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GraphProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.GraphProto.doc_string)
}
void GraphProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.GraphProto.doc_string)
}
void GraphProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.GraphProto.doc_string)
}
::std::string* GraphProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GraphProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.GraphProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GraphProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.GraphProto.doc_string)
}

// repeated .ONNXIR.ValueInfoProto input = 11;
int GraphProto::input_size() const {
  return input_.size();
}
void GraphProto::clear_input() {
  input_.Clear();
}
const ::ONNXIR::ValueInfoProto& GraphProto::input(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.input)
  return input_.Get(index);
}
::ONNXIR::ValueInfoProto* GraphProto::mutable_input(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.input)
  return input_.Mutable(index);
}
::ONNXIR::ValueInfoProto* GraphProto::add_input() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.input)
  return input_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
GraphProto::mutable_input() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.input)
  return &input_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
GraphProto::input() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.input)
  return input_;
}

// repeated .ONNXIR.ValueInfoProto output = 12;
int GraphProto::output_size() const {
  return output_.size();
}
void GraphProto::clear_output() {
  output_.Clear();
}
const ::ONNXIR::ValueInfoProto& GraphProto::output(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.output)
  return output_.Get(index);
}
::ONNXIR::ValueInfoProto* GraphProto::mutable_output(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.output)
  return output_.Mutable(index);
}
::ONNXIR::ValueInfoProto* GraphProto::add_output() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.output)
  return output_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
GraphProto::mutable_output() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.output)
  return &output_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
GraphProto::output() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.output)
  return output_;
}

// repeated .ONNXIR.ValueInfoProto value_info = 13;
int GraphProto::value_info_size() const {
  return value_info_.size();
}
void GraphProto::clear_value_info() {
  value_info_.Clear();
}
const ::ONNXIR::ValueInfoProto& GraphProto::value_info(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.value_info)
  return value_info_.Get(index);
}
::ONNXIR::ValueInfoProto* GraphProto::mutable_value_info(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.value_info)
  return value_info_.Mutable(index);
}
::ONNXIR::ValueInfoProto* GraphProto::add_value_info() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.value_info)
  return value_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >*
GraphProto::mutable_value_info() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.value_info)
  return &value_info_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueInfoProto >&
GraphProto::value_info() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.value_info)
  return value_info_;
}

// repeated .ONNXIR.FunctionDefProto function = 50;
int GraphProto::function_size() const {
  return function_.size();
}
void GraphProto::clear_function() {
  function_.Clear();
}
const ::ONNXIR::FunctionDefProto& GraphProto::function(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.function)
  return function_.Get(index);
}
::ONNXIR::FunctionDefProto* GraphProto::mutable_function(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.function)
  return function_.Mutable(index);
}
::ONNXIR::FunctionDefProto* GraphProto::add_function() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.function)
  return function_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >*
GraphProto::mutable_function() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.function)
  return &function_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >&
GraphProto::function() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.function)
  return function_;
}

// repeated .ONNXIR.OperatorDeclProto operator = 51;
int GraphProto::operator__size() const {
  return operator__.size();
}
void GraphProto::clear_operator_() {
  operator__.Clear();
}
const ::ONNXIR::OperatorDeclProto& GraphProto::operator_(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.operator)
  return operator__.Get(index);
}
::ONNXIR::OperatorDeclProto* GraphProto::mutable_operator_(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.operator)
  return operator__.Mutable(index);
}
::ONNXIR::OperatorDeclProto* GraphProto::add_operator_() {
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.operator)
  return operator__.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >*
GraphProto::mutable_operator_() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.operator)
  return &operator__;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >&
GraphProto::operator_() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.operator)
  return operator__;
}

// repeated string imported_libraries = 52;
int GraphProto::imported_libraries_size() const {
  return imported_libraries_.size();
}
void GraphProto::clear_imported_libraries() {
  imported_libraries_.Clear();
}
const ::std::string& GraphProto::imported_libraries(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_.Get(index);
}
::std::string* GraphProto::mutable_imported_libraries(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_.Mutable(index);
}
void GraphProto::set_imported_libraries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.GraphProto.imported_libraries)
  imported_libraries_.Mutable(index)->assign(value);
}
void GraphProto::set_imported_libraries(int index, const char* value) {
  imported_libraries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.GraphProto.imported_libraries)
}
void GraphProto::set_imported_libraries(int index, const char* value, size_t size) {
  imported_libraries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.GraphProto.imported_libraries)
}
::std::string* GraphProto::add_imported_libraries() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_.Add();
}
void GraphProto::add_imported_libraries(const ::std::string& value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.GraphProto.imported_libraries)
}
void GraphProto::add_imported_libraries(const char* value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.GraphProto.imported_libraries)
}
void GraphProto::add_imported_libraries(const char* value, size_t size) {
  imported_libraries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.GraphProto.imported_libraries)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
GraphProto::imported_libraries() const {
  // @@protoc_insertion_point(field_list:ONNXIR.GraphProto.imported_libraries)
  return imported_libraries_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
GraphProto::mutable_imported_libraries() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.GraphProto.imported_libraries)
  return &imported_libraries_;
}

inline const GraphProto* GraphProto::internal_default_instance() {
  return &GraphProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* TensorProto_DataType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorProto_DataType_descriptor_;
}
bool TensorProto_DataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const TensorProto_DataType TensorProto::UNDEFINED;
const TensorProto_DataType TensorProto::FLOAT;
const TensorProto_DataType TensorProto::UINT8;
const TensorProto_DataType TensorProto::INT8;
const TensorProto_DataType TensorProto::UINT16;
const TensorProto_DataType TensorProto::INT16;
const TensorProto_DataType TensorProto::INT32;
const TensorProto_DataType TensorProto::INT64;
const TensorProto_DataType TensorProto::STRING;
const TensorProto_DataType TensorProto::BOOL;
const TensorProto_DataType TensorProto::FLOAT16;
const TensorProto_DataType TensorProto::DOUBLE;
const TensorProto_DataType TensorProto::UINT32;
const TensorProto_DataType TensorProto::UINT64;
const TensorProto_DataType TensorProto::COMPLEX64;
const TensorProto_DataType TensorProto::COMPLEX128;
const TensorProto_DataType TensorProto::DataType_MIN;
const TensorProto_DataType TensorProto::DataType_MAX;
const int TensorProto::DataType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorProto_Segment::kBeginFieldNumber;
const int TensorProto_Segment::kEndFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorProto_Segment::TensorProto_Segment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TensorProto.Segment)
}

void TensorProto_Segment::InitAsDefaultInstance() {
}

TensorProto_Segment::TensorProto_Segment(const TensorProto_Segment& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TensorProto.Segment)
}

void TensorProto_Segment::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&begin_, 0, reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&begin_) + sizeof(end_));
}

TensorProto_Segment::~TensorProto_Segment() {
  // @@protoc_insertion_point(destructor:ONNXIR.TensorProto.Segment)
  SharedDtor();
}

void TensorProto_Segment::SharedDtor() {
}

void TensorProto_Segment::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorProto_Segment::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorProto_Segment_descriptor_;
}

const TensorProto_Segment& TensorProto_Segment::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TensorProto_Segment> TensorProto_Segment_default_instance_;

TensorProto_Segment* TensorProto_Segment::New(::google::protobuf::Arena* arena) const {
  TensorProto_Segment* n = new TensorProto_Segment;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorProto_Segment::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TensorProto.Segment)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TensorProto_Segment, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TensorProto_Segment*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(begin_, end_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TensorProto_Segment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TensorProto.Segment)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 begin = 1;
      case 1: {
        if (tag == 8) {
          set_has_begin();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &begin_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_end;
        break;
      }

      // optional int64 end = 2;
      case 2: {
        if (tag == 16) {
         parse_end:
          set_has_end();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &end_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TensorProto.Segment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TensorProto.Segment)
  return false;
#undef DO_
}

void TensorProto_Segment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TensorProto.Segment)
  // optional int64 begin = 1;
  if (has_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->begin(), output);
  }

  // optional int64 end = 2;
  if (has_end()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->end(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TensorProto.Segment)
}

::google::protobuf::uint8* TensorProto_Segment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TensorProto.Segment)
  // optional int64 begin = 1;
  if (has_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->begin(), target);
  }

  // optional int64 end = 2;
  if (has_end()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->end(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TensorProto.Segment)
  return target;
}

size_t TensorProto_Segment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TensorProto.Segment)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 begin = 1;
    if (has_begin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->begin());
    }

    // optional int64 end = 2;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->end());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorProto_Segment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TensorProto.Segment)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TensorProto_Segment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorProto_Segment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TensorProto.Segment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TensorProto.Segment)
    UnsafeMergeFrom(*source);
  }
}

void TensorProto_Segment::MergeFrom(const TensorProto_Segment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TensorProto.Segment)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TensorProto_Segment::UnsafeMergeFrom(const TensorProto_Segment& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_begin()) {
      set_begin(from.begin());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TensorProto_Segment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TensorProto.Segment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorProto_Segment::CopyFrom(const TensorProto_Segment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TensorProto.Segment)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TensorProto_Segment::IsInitialized() const {

  return true;
}

void TensorProto_Segment::Swap(TensorProto_Segment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorProto_Segment::InternalSwap(TensorProto_Segment* other) {
  std::swap(begin_, other->begin_);
  std::swap(end_, other->end_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorProto_Segment::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorProto_Segment_descriptor_;
  metadata.reflection = TensorProto_Segment_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TensorProto::kDimsFieldNumber;
const int TensorProto::kDataTypeFieldNumber;
const int TensorProto::kSegmentFieldNumber;
const int TensorProto::kFloatDataFieldNumber;
const int TensorProto::kInt32DataFieldNumber;
const int TensorProto::kStringDataFieldNumber;
const int TensorProto::kInt64DataFieldNumber;
const int TensorProto::kNameFieldNumber;
const int TensorProto::kRawDataFieldNumber;
const int TensorProto::kDoubleDataFieldNumber;
const int TensorProto::kUint64DataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TensorProto::TensorProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TensorProto)
}

void TensorProto::InitAsDefaultInstance() {
  segment_ = const_cast< ::ONNXIR::TensorProto_Segment*>(
      ::ONNXIR::TensorProto_Segment::internal_default_instance());
}

TensorProto::TensorProto(const TensorProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TensorProto)
}

void TensorProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  segment_ = NULL;
  data_type_ = 0;
}

TensorProto::~TensorProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TensorProto)
  SharedDtor();
}

void TensorProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  raw_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &TensorProto_default_instance_.get()) {
    delete segment_;
  }
}

void TensorProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TensorProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TensorProto_descriptor_;
}

const TensorProto& TensorProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TensorProto> TensorProto_default_instance_;

TensorProto* TensorProto::New(::google::protobuf::Arena* arena) const {
  TensorProto* n = new TensorProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TensorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TensorProto)
  if (_has_bits_[0 / 32] & 134u) {
    data_type_ = 0;
    if (has_segment()) {
      if (segment_ != NULL) segment_->::ONNXIR::TensorProto_Segment::Clear();
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_raw_data()) {
    raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  dims_.Clear();
  float_data_.Clear();
  int32_data_.Clear();
  string_data_.Clear();
  int64_data_.Clear();
  double_data_.Clear();
  uint64_data_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TensorProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TensorProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 dims = 1;
      case 1: {
        if (tag == 8) {
         parse_dims:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_dims())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_dims;
        if (input->ExpectTag(16)) goto parse_data_type;
        break;
      }

      // optional .ONNXIR.TensorProto.DataType data_type = 2;
      case 2: {
        if (tag == 16) {
         parse_data_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ONNXIR::TensorProto_DataType_IsValid(value)) {
            set_data_type(static_cast< ::ONNXIR::TensorProto_DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_segment;
        break;
      }

      // optional .ONNXIR.TensorProto.Segment segment = 3;
      case 3: {
        if (tag == 26) {
         parse_segment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_float_data;
        break;
      }

      // repeated float float_data = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_float_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_float_data())));
        } else if (tag == 37) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 34, input, this->mutable_float_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_int32_data;
        break;
      }

      // repeated int32 int32_data = 5 [packed = true];
      case 5: {
        if (tag == 42) {
         parse_int32_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_int32_data())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 42, input, this->mutable_int32_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_string_data;
        break;
      }

      // repeated bytes string_data = 6;
      case 6: {
        if (tag == 50) {
         parse_string_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_string_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_string_data;
        if (input->ExpectTag(58)) goto parse_int64_data;
        break;
      }

      // repeated int64 int64_data = 7 [packed = true];
      case 7: {
        if (tag == 58) {
         parse_int64_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64_data())));
        } else if (tag == 56) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 58, input, this->mutable_int64_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_name;
        break;
      }

      // optional string name = 8;
      case 8: {
        if (tag == 66) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.TensorProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_raw_data;
        break;
      }

      // optional bytes raw_data = 9;
      case 9: {
        if (tag == 74) {
         parse_raw_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_raw_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_double_data;
        break;
      }

      // repeated double double_data = 10 [packed = true];
      case 10: {
        if (tag == 82) {
         parse_double_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_double_data())));
        } else if (tag == 81) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 82, input, this->mutable_double_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_uint64_data;
        break;
      }

      // repeated uint64 uint64_data = 11 [packed = true];
      case 11: {
        if (tag == 90) {
         parse_uint64_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uint64_data())));
        } else if (tag == 88) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 90, input, this->mutable_uint64_data())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TensorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TensorProto)
  return false;
#undef DO_
}

void TensorProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TensorProto)
  // repeated int64 dims = 1;
  for (int i = 0; i < this->dims_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->dims(i), output);
  }

  // optional .ONNXIR.TensorProto.DataType data_type = 2;
  if (has_data_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->data_type(), output);
  }

  // optional .ONNXIR.TensorProto.Segment segment = 3;
  if (has_segment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->segment_, output);
  }

  // repeated float float_data = 4 [packed = true];
  if (this->float_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_float_data_cached_byte_size_);
  }
  for (int i = 0; i < this->float_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloatNoTag(
      this->float_data(i), output);
  }

  // repeated int32 int32_data = 5 [packed = true];
  if (this->int32_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int32_data_cached_byte_size_);
  }
  for (int i = 0; i < this->int32_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->int32_data(i), output);
  }

  // repeated bytes string_data = 6;
  for (int i = 0; i < this->string_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->string_data(i), output);
  }

  // repeated int64 int64_data = 7 [packed = true];
  if (this->int64_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(7, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_int64_data_cached_byte_size_);
  }
  for (int i = 0; i < this->int64_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->int64_data(i), output);
  }

  // optional string name = 8;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.TensorProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->name(), output);
  }

  // optional bytes raw_data = 9;
  if (has_raw_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->raw_data(), output);
  }

  // repeated double double_data = 10 [packed = true];
  if (this->double_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_double_data_cached_byte_size_);
  }
  for (int i = 0; i < this->double_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDoubleNoTag(
      this->double_data(i), output);
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  if (this->uint64_data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(11, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_uint64_data_cached_byte_size_);
  }
  for (int i = 0; i < this->uint64_data_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->uint64_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TensorProto)
}

::google::protobuf::uint8* TensorProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TensorProto)
  // repeated int64 dims = 1;
  for (int i = 0; i < this->dims_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->dims(i), target);
  }

  // optional .ONNXIR.TensorProto.DataType data_type = 2;
  if (has_data_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->data_type(), target);
  }

  // optional .ONNXIR.TensorProto.Segment segment = 3;
  if (has_segment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->segment_, false, target);
  }

  // repeated float float_data = 4 [packed = true];
  if (this->float_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _float_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->float_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->float_data(i), target);
  }

  // repeated int32 int32_data = 5 [packed = true];
  if (this->int32_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _int32_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->int32_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->int32_data(i), target);
  }

  // repeated bytes string_data = 6;
  for (int i = 0; i < this->string_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->string_data(i), target);
  }

  // repeated int64 int64_data = 7 [packed = true];
  if (this->int64_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      7,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _int64_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->int64_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->int64_data(i), target);
  }

  // optional string name = 8;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.TensorProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->name(), target);
  }

  // optional bytes raw_data = 9;
  if (has_raw_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->raw_data(), target);
  }

  // repeated double double_data = 10 [packed = true];
  if (this->double_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _double_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->double_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->double_data(i), target);
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  if (this->uint64_data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      11,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _uint64_data_cached_byte_size_, target);
  }
  for (int i = 0; i < this->uint64_data_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->uint64_data(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TensorProto)
  return target;
}

size_t TensorProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TensorProto)
  size_t total_size = 0;

  if (_has_bits_[1 / 32] & 134u) {
    // optional .ONNXIR.TensorProto.DataType data_type = 2;
    if (has_data_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->data_type());
    }

    // optional .ONNXIR.TensorProto.Segment segment = 3;
    if (has_segment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->segment_);
    }

    // optional string name = 8;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

  }
  // optional bytes raw_data = 9;
  if (has_raw_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->raw_data());
  }

  // repeated int64 dims = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->dims_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->dims(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  // repeated float float_data = 4 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->float_data_size();
    data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _float_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 int32_data = 5 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->int32_data_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->int32_data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int32_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bytes string_data = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_data_size());
  for (int i = 0; i < this->string_data_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->string_data(i));
  }

  // repeated int64 int64_data = 7 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->int64_data_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->int64_data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int64_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double double_data = 10 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->double_data_size();
    data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _double_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 uint64_data = 11 [packed = true];
  {
    size_t data_size = 0;
    unsigned int count = this->uint64_data_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt64Size(this->uint64_data(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uint64_data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TensorProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TensorProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TensorProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TensorProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TensorProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TensorProto)
    UnsafeMergeFrom(*source);
  }
}

void TensorProto::MergeFrom(const TensorProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TensorProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TensorProto::UnsafeMergeFrom(const TensorProto& from) {
  GOOGLE_DCHECK(&from != this);
  dims_.UnsafeMergeFrom(from.dims_);
  float_data_.UnsafeMergeFrom(from.float_data_);
  int32_data_.UnsafeMergeFrom(from.int32_data_);
  string_data_.UnsafeMergeFrom(from.string_data_);
  int64_data_.UnsafeMergeFrom(from.int64_data_);
  double_data_.UnsafeMergeFrom(from.double_data_);
  uint64_data_.UnsafeMergeFrom(from.uint64_data_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_data_type()) {
      set_data_type(from.data_type());
    }
    if (from.has_segment()) {
      mutable_segment()->::ONNXIR::TensorProto_Segment::MergeFrom(from.segment());
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_raw_data()) {
      set_has_raw_data();
      raw_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_data_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TensorProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TensorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TensorProto::CopyFrom(const TensorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TensorProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TensorProto::IsInitialized() const {

  return true;
}

void TensorProto::Swap(TensorProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TensorProto::InternalSwap(TensorProto* other) {
  dims_.UnsafeArenaSwap(&other->dims_);
  std::swap(data_type_, other->data_type_);
  std::swap(segment_, other->segment_);
  float_data_.UnsafeArenaSwap(&other->float_data_);
  int32_data_.UnsafeArenaSwap(&other->int32_data_);
  string_data_.UnsafeArenaSwap(&other->string_data_);
  int64_data_.UnsafeArenaSwap(&other->int64_data_);
  name_.Swap(&other->name_);
  raw_data_.Swap(&other->raw_data_);
  double_data_.UnsafeArenaSwap(&other->double_data_);
  uint64_data_.UnsafeArenaSwap(&other->uint64_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TensorProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TensorProto_descriptor_;
  metadata.reflection = TensorProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TensorProto_Segment

// optional int64 begin = 1;
bool TensorProto_Segment::has_begin() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TensorProto_Segment::set_has_begin() {
  _has_bits_[0] |= 0x00000001u;
}
void TensorProto_Segment::clear_has_begin() {
  _has_bits_[0] &= ~0x00000001u;
}
void TensorProto_Segment::clear_begin() {
  begin_ = GOOGLE_LONGLONG(0);
  clear_has_begin();
}
::google::protobuf::int64 TensorProto_Segment::begin() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.Segment.begin)
  return begin_;
}
void TensorProto_Segment::set_begin(::google::protobuf::int64 value) {
  set_has_begin();
  begin_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.Segment.begin)
}

// optional int64 end = 2;
bool TensorProto_Segment::has_end() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TensorProto_Segment::set_has_end() {
  _has_bits_[0] |= 0x00000002u;
}
void TensorProto_Segment::clear_has_end() {
  _has_bits_[0] &= ~0x00000002u;
}
void TensorProto_Segment::clear_end() {
  end_ = GOOGLE_LONGLONG(0);
  clear_has_end();
}
::google::protobuf::int64 TensorProto_Segment::end() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.Segment.end)
  return end_;
}
void TensorProto_Segment::set_end(::google::protobuf::int64 value) {
  set_has_end();
  end_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.Segment.end)
}

inline const TensorProto_Segment* TensorProto_Segment::internal_default_instance() {
  return &TensorProto_Segment_default_instance_.get();
}
// -------------------------------------------------------------------

// TensorProto

// repeated int64 dims = 1;
int TensorProto::dims_size() const {
  return dims_.size();
}
void TensorProto::clear_dims() {
  dims_.Clear();
}
::google::protobuf::int64 TensorProto::dims(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.dims)
  return dims_.Get(index);
}
void TensorProto::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.dims)
}
void TensorProto::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.dims)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorProto::dims() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.dims)
  return dims_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorProto::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.dims)
  return &dims_;
}

// optional .ONNXIR.TensorProto.DataType data_type = 2;
bool TensorProto::has_data_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TensorProto::set_has_data_type() {
  _has_bits_[0] |= 0x00000002u;
}
void TensorProto::clear_has_data_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void TensorProto::clear_data_type() {
  data_type_ = 0;
  clear_has_data_type();
}
::ONNXIR::TensorProto_DataType TensorProto::data_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.data_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(data_type_);
}
void TensorProto::set_data_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_data_type();
  data_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.data_type)
}

// optional .ONNXIR.TensorProto.Segment segment = 3;
bool TensorProto::has_segment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TensorProto::set_has_segment() {
  _has_bits_[0] |= 0x00000004u;
}
void TensorProto::clear_has_segment() {
  _has_bits_[0] &= ~0x00000004u;
}
void TensorProto::clear_segment() {
  if (segment_ != NULL) segment_->::ONNXIR::TensorProto_Segment::Clear();
  clear_has_segment();
}
const ::ONNXIR::TensorProto_Segment& TensorProto::segment() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.segment)
  return segment_ != NULL ? *segment_
                         : *::ONNXIR::TensorProto_Segment::internal_default_instance();
}
::ONNXIR::TensorProto_Segment* TensorProto::mutable_segment() {
  set_has_segment();
  if (segment_ == NULL) {
    segment_ = new ::ONNXIR::TensorProto_Segment;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.segment)
  return segment_;
}
::ONNXIR::TensorProto_Segment* TensorProto::release_segment() {
  // @@protoc_insertion_point(field_release:ONNXIR.TensorProto.segment)
  clear_has_segment();
  ::ONNXIR::TensorProto_Segment* temp = segment_;
  segment_ = NULL;
  return temp;
}
void TensorProto::set_allocated_segment(::ONNXIR::TensorProto_Segment* segment) {
  delete segment_;
  segment_ = segment;
  if (segment) {
    set_has_segment();
  } else {
    clear_has_segment();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TensorProto.segment)
}

// repeated float float_data = 4 [packed = true];
int TensorProto::float_data_size() const {
  return float_data_.size();
}
void TensorProto::clear_float_data() {
  float_data_.Clear();
}
float TensorProto::float_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.float_data)
  return float_data_.Get(index);
}
void TensorProto::set_float_data(int index, float value) {
  float_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.float_data)
}
void TensorProto::add_float_data(float value) {
  float_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.float_data)
}
const ::google::protobuf::RepeatedField< float >&
TensorProto::float_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.float_data)
  return float_data_;
}
::google::protobuf::RepeatedField< float >*
TensorProto::mutable_float_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.float_data)
  return &float_data_;
}

// repeated int32 int32_data = 5 [packed = true];
int TensorProto::int32_data_size() const {
  return int32_data_.size();
}
void TensorProto::clear_int32_data() {
  int32_data_.Clear();
}
::google::protobuf::int32 TensorProto::int32_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.int32_data)
  return int32_data_.Get(index);
}
void TensorProto::set_int32_data(int index, ::google::protobuf::int32 value) {
  int32_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.int32_data)
}
void TensorProto::add_int32_data(::google::protobuf::int32 value) {
  int32_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.int32_data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
TensorProto::int32_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.int32_data)
  return int32_data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
TensorProto::mutable_int32_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.int32_data)
  return &int32_data_;
}

// repeated bytes string_data = 6;
int TensorProto::string_data_size() const {
  return string_data_.size();
}
void TensorProto::clear_string_data() {
  string_data_.Clear();
}
const ::std::string& TensorProto::string_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.string_data)
  return string_data_.Get(index);
}
::std::string* TensorProto::mutable_string_data(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.string_data)
  return string_data_.Mutable(index);
}
void TensorProto::set_string_data(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.string_data)
  string_data_.Mutable(index)->assign(value);
}
void TensorProto::set_string_data(int index, const char* value) {
  string_data_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.TensorProto.string_data)
}
void TensorProto::set_string_data(int index, const void* value, size_t size) {
  string_data_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TensorProto.string_data)
}
::std::string* TensorProto::add_string_data() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.TensorProto.string_data)
  return string_data_.Add();
}
void TensorProto::add_string_data(const ::std::string& value) {
  string_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.string_data)
}
void TensorProto::add_string_data(const char* value) {
  string_data_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.TensorProto.string_data)
}
void TensorProto::add_string_data(const void* value, size_t size) {
  string_data_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.TensorProto.string_data)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
TensorProto::string_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.string_data)
  return string_data_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
TensorProto::mutable_string_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.string_data)
  return &string_data_;
}

// repeated int64 int64_data = 7 [packed = true];
int TensorProto::int64_data_size() const {
  return int64_data_.size();
}
void TensorProto::clear_int64_data() {
  int64_data_.Clear();
}
::google::protobuf::int64 TensorProto::int64_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.int64_data)
  return int64_data_.Get(index);
}
void TensorProto::set_int64_data(int index, ::google::protobuf::int64 value) {
  int64_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.int64_data)
}
void TensorProto::add_int64_data(::google::protobuf::int64 value) {
  int64_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.int64_data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
TensorProto::int64_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.int64_data)
  return int64_data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
TensorProto::mutable_int64_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.int64_data)
  return &int64_data_;
}

// optional string name = 8;
bool TensorProto::has_name() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void TensorProto::set_has_name() {
  _has_bits_[0] |= 0x00000080u;
}
void TensorProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000080u;
}
void TensorProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& TensorProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.name)
}
void TensorProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.TensorProto.name)
}
void TensorProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TensorProto.name)
}
::std::string* TensorProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TensorProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.TensorProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TensorProto.name)
}

// optional bytes raw_data = 9;
bool TensorProto::has_raw_data() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void TensorProto::set_has_raw_data() {
  _has_bits_[0] |= 0x00000100u;
}
void TensorProto::clear_has_raw_data() {
  _has_bits_[0] &= ~0x00000100u;
}
void TensorProto::clear_raw_data() {
  raw_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_raw_data();
}
const ::std::string& TensorProto::raw_data() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.raw_data)
  return raw_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorProto::set_raw_data(const ::std::string& value) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.raw_data)
}
void TensorProto::set_raw_data(const char* value) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.TensorProto.raw_data)
}
void TensorProto::set_raw_data(const void* value, size_t size) {
  set_has_raw_data();
  raw_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TensorProto.raw_data)
}
::std::string* TensorProto::mutable_raw_data() {
  set_has_raw_data();
  // @@protoc_insertion_point(field_mutable:ONNXIR.TensorProto.raw_data)
  return raw_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TensorProto::release_raw_data() {
  // @@protoc_insertion_point(field_release:ONNXIR.TensorProto.raw_data)
  clear_has_raw_data();
  return raw_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TensorProto::set_allocated_raw_data(::std::string* raw_data) {
  if (raw_data != NULL) {
    set_has_raw_data();
  } else {
    clear_has_raw_data();
  }
  raw_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_data);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TensorProto.raw_data)
}

// repeated double double_data = 10 [packed = true];
int TensorProto::double_data_size() const {
  return double_data_.size();
}
void TensorProto::clear_double_data() {
  double_data_.Clear();
}
double TensorProto::double_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.double_data)
  return double_data_.Get(index);
}
void TensorProto::set_double_data(int index, double value) {
  double_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.double_data)
}
void TensorProto::add_double_data(double value) {
  double_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.double_data)
}
const ::google::protobuf::RepeatedField< double >&
TensorProto::double_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.double_data)
  return double_data_;
}
::google::protobuf::RepeatedField< double >*
TensorProto::mutable_double_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.double_data)
  return &double_data_;
}

// repeated uint64 uint64_data = 11 [packed = true];
int TensorProto::uint64_data_size() const {
  return uint64_data_.size();
}
void TensorProto::clear_uint64_data() {
  uint64_data_.Clear();
}
::google::protobuf::uint64 TensorProto::uint64_data(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TensorProto.uint64_data)
  return uint64_data_.Get(index);
}
void TensorProto::set_uint64_data(int index, ::google::protobuf::uint64 value) {
  uint64_data_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.TensorProto.uint64_data)
}
void TensorProto::add_uint64_data(::google::protobuf::uint64 value) {
  uint64_data_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.TensorProto.uint64_data)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
TensorProto::uint64_data() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TensorProto.uint64_data)
  return uint64_data_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
TensorProto::mutable_uint64_data() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TensorProto.uint64_data)
  return &uint64_data_;
}

inline const TensorProto* TensorProto::internal_default_instance() {
  return &TensorProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SparseTensorProto::kDimsFieldNumber;
const int SparseTensorProto::kIndicesFieldNumber;
const int SparseTensorProto::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SparseTensorProto::SparseTensorProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.SparseTensorProto)
}

void SparseTensorProto::InitAsDefaultInstance() {
  indices_ = const_cast< ::ONNXIR::TensorProto*>(
      ::ONNXIR::TensorProto::internal_default_instance());
  values_ = const_cast< ::ONNXIR::TensorProto*>(
      ::ONNXIR::TensorProto::internal_default_instance());
}

SparseTensorProto::SparseTensorProto(const SparseTensorProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.SparseTensorProto)
}

void SparseTensorProto::SharedCtor() {
  _cached_size_ = 0;
  indices_ = NULL;
  values_ = NULL;
}

SparseTensorProto::~SparseTensorProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.SparseTensorProto)
  SharedDtor();
}

void SparseTensorProto::SharedDtor() {
  if (this != &SparseTensorProto_default_instance_.get()) {
    delete indices_;
    delete values_;
  }
}

void SparseTensorProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SparseTensorProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SparseTensorProto_descriptor_;
}

const SparseTensorProto& SparseTensorProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SparseTensorProto> SparseTensorProto_default_instance_;

SparseTensorProto* SparseTensorProto::New(::google::protobuf::Arena* arena) const {
  SparseTensorProto* n = new SparseTensorProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SparseTensorProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.SparseTensorProto)
  if (_has_bits_[0 / 32] & 6u) {
    if (has_indices()) {
      if (indices_ != NULL) indices_->::ONNXIR::TensorProto::Clear();
    }
    if (has_values()) {
      if (values_ != NULL) values_->::ONNXIR::TensorProto::Clear();
    }
  }
  dims_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SparseTensorProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.SparseTensorProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 dims = 1;
      case 1: {
        if (tag == 8) {
         parse_dims:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 8, input, this->mutable_dims())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_dims())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_dims;
        if (input->ExpectTag(18)) goto parse_indices;
        break;
      }

      // optional .ONNXIR.TensorProto indices = 2;
      case 2: {
        if (tag == 18) {
         parse_indices:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_indices()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_values;
        break;
      }

      // optional .ONNXIR.TensorProto values = 3;
      case 3: {
        if (tag == 26) {
         parse_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.SparseTensorProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.SparseTensorProto)
  return false;
#undef DO_
}

void SparseTensorProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.SparseTensorProto)
  // repeated int64 dims = 1;
  for (int i = 0; i < this->dims_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      1, this->dims(i), output);
  }

  // optional .ONNXIR.TensorProto indices = 2;
  if (has_indices()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->indices_, output);
  }

  // optional .ONNXIR.TensorProto values = 3;
  if (has_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->values_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.SparseTensorProto)
}

::google::protobuf::uint8* SparseTensorProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.SparseTensorProto)
  // repeated int64 dims = 1;
  for (int i = 0; i < this->dims_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64ToArray(1, this->dims(i), target);
  }

  // optional .ONNXIR.TensorProto indices = 2;
  if (has_indices()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->indices_, false, target);
  }

  // optional .ONNXIR.TensorProto values = 3;
  if (has_values()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->values_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.SparseTensorProto)
  return target;
}

size_t SparseTensorProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.SparseTensorProto)
  size_t total_size = 0;

  if (_has_bits_[1 / 32] & 6u) {
    // optional .ONNXIR.TensorProto indices = 2;
    if (has_indices()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->indices_);
    }

    // optional .ONNXIR.TensorProto values = 3;
    if (has_values()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->values_);
    }

  }
  // repeated int64 dims = 1;
  {
    size_t data_size = 0;
    unsigned int count = this->dims_size();
    for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int64Size(this->dims(i));
    }
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->dims_size());
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SparseTensorProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.SparseTensorProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SparseTensorProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SparseTensorProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.SparseTensorProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.SparseTensorProto)
    UnsafeMergeFrom(*source);
  }
}

void SparseTensorProto::MergeFrom(const SparseTensorProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.SparseTensorProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SparseTensorProto::UnsafeMergeFrom(const SparseTensorProto& from) {
  GOOGLE_DCHECK(&from != this);
  dims_.UnsafeMergeFrom(from.dims_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_indices()) {
      mutable_indices()->::ONNXIR::TensorProto::MergeFrom(from.indices());
    }
    if (from.has_values()) {
      mutable_values()->::ONNXIR::TensorProto::MergeFrom(from.values());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SparseTensorProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.SparseTensorProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SparseTensorProto::CopyFrom(const SparseTensorProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.SparseTensorProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SparseTensorProto::IsInitialized() const {

  return true;
}

void SparseTensorProto::Swap(SparseTensorProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SparseTensorProto::InternalSwap(SparseTensorProto* other) {
  dims_.UnsafeArenaSwap(&other->dims_);
  std::swap(indices_, other->indices_);
  std::swap(values_, other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SparseTensorProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SparseTensorProto_descriptor_;
  metadata.reflection = SparseTensorProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SparseTensorProto

// repeated int64 dims = 1;
int SparseTensorProto::dims_size() const {
  return dims_.size();
}
void SparseTensorProto::clear_dims() {
  dims_.Clear();
}
::google::protobuf::int64 SparseTensorProto::dims(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SparseTensorProto.dims)
  return dims_.Get(index);
}
void SparseTensorProto::set_dims(int index, ::google::protobuf::int64 value) {
  dims_.Set(index, value);
  // @@protoc_insertion_point(field_set:ONNXIR.SparseTensorProto.dims)
}
void SparseTensorProto::add_dims(::google::protobuf::int64 value) {
  dims_.Add(value);
  // @@protoc_insertion_point(field_add:ONNXIR.SparseTensorProto.dims)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
SparseTensorProto::dims() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SparseTensorProto.dims)
  return dims_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
SparseTensorProto::mutable_dims() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SparseTensorProto.dims)
  return &dims_;
}

// optional .ONNXIR.TensorProto indices = 2;
bool SparseTensorProto::has_indices() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SparseTensorProto::set_has_indices() {
  _has_bits_[0] |= 0x00000002u;
}
void SparseTensorProto::clear_has_indices() {
  _has_bits_[0] &= ~0x00000002u;
}
void SparseTensorProto::clear_indices() {
  if (indices_ != NULL) indices_->::ONNXIR::TensorProto::Clear();
  clear_has_indices();
}
const ::ONNXIR::TensorProto& SparseTensorProto::indices() const {
  // @@protoc_insertion_point(field_get:ONNXIR.SparseTensorProto.indices)
  return indices_ != NULL ? *indices_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
::ONNXIR::TensorProto* SparseTensorProto::mutable_indices() {
  set_has_indices();
  if (indices_ == NULL) {
    indices_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.SparseTensorProto.indices)
  return indices_;
}
::ONNXIR::TensorProto* SparseTensorProto::release_indices() {
  // @@protoc_insertion_point(field_release:ONNXIR.SparseTensorProto.indices)
  clear_has_indices();
  ::ONNXIR::TensorProto* temp = indices_;
  indices_ = NULL;
  return temp;
}
void SparseTensorProto::set_allocated_indices(::ONNXIR::TensorProto* indices) {
  delete indices_;
  indices_ = indices;
  if (indices) {
    set_has_indices();
  } else {
    clear_has_indices();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.SparseTensorProto.indices)
}

// optional .ONNXIR.TensorProto values = 3;
bool SparseTensorProto::has_values() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SparseTensorProto::set_has_values() {
  _has_bits_[0] |= 0x00000004u;
}
void SparseTensorProto::clear_has_values() {
  _has_bits_[0] &= ~0x00000004u;
}
void SparseTensorProto::clear_values() {
  if (values_ != NULL) values_->::ONNXIR::TensorProto::Clear();
  clear_has_values();
}
const ::ONNXIR::TensorProto& SparseTensorProto::values() const {
  // @@protoc_insertion_point(field_get:ONNXIR.SparseTensorProto.values)
  return values_ != NULL ? *values_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
::ONNXIR::TensorProto* SparseTensorProto::mutable_values() {
  set_has_values();
  if (values_ == NULL) {
    values_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.SparseTensorProto.values)
  return values_;
}
::ONNXIR::TensorProto* SparseTensorProto::release_values() {
  // @@protoc_insertion_point(field_release:ONNXIR.SparseTensorProto.values)
  clear_has_values();
  ::ONNXIR::TensorProto* temp = values_;
  values_ = NULL;
  return temp;
}
void SparseTensorProto::set_allocated_values(::ONNXIR::TensorProto* values) {
  delete values_;
  values_ = values;
  if (values) {
    set_has_values();
  } else {
    clear_has_values();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.SparseTensorProto.values)
}

inline const SparseTensorProto* SparseTensorProto::internal_default_instance() {
  return &SparseTensorProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_TensorShapeProto_Dimension::kDimValueFieldNumber;
const int TypeProto_TensorShapeProto_Dimension::kDimParamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_TensorShapeProto_Dimension::TypeProto_TensorShapeProto_Dimension()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.TensorShapeProto.Dimension)
}

void TypeProto_TensorShapeProto_Dimension::InitAsDefaultInstance() {
  TypeProto_TensorShapeProto_Dimension_default_oneof_instance_->dim_value_ = GOOGLE_LONGLONG(0);
  TypeProto_TensorShapeProto_Dimension_default_oneof_instance_->dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TypeProto_TensorShapeProto_Dimension::TypeProto_TensorShapeProto_Dimension(const TypeProto_TensorShapeProto_Dimension& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.TensorShapeProto.Dimension)
}

void TypeProto_TensorShapeProto_Dimension::SharedCtor() {
  _cached_size_ = 0;
  clear_has_value();
}

TypeProto_TensorShapeProto_Dimension::~TypeProto_TensorShapeProto_Dimension() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  SharedDtor();
}

void TypeProto_TensorShapeProto_Dimension::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void TypeProto_TensorShapeProto_Dimension::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_TensorShapeProto_Dimension::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_TensorShapeProto_Dimension_descriptor_;
}

const TypeProto_TensorShapeProto_Dimension& TypeProto_TensorShapeProto_Dimension::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TensorShapeProto_Dimension> TypeProto_TensorShapeProto_Dimension_default_instance_;

TypeProto_TensorShapeProto_Dimension* TypeProto_TensorShapeProto_Dimension::New(::google::protobuf::Arena* arena) const {
  TypeProto_TensorShapeProto_Dimension* n = new TypeProto_TensorShapeProto_Dimension;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_TensorShapeProto_Dimension::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  switch (value_case()) {
    case kDimValue: {
      // No need to clear
      break;
    }
    case kDimParam: {
      value_.dim_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypeProto_TensorShapeProto_Dimension::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  clear_value();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_TensorShapeProto_Dimension::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 dim_value = 1;
      case 1: {
        if (tag == 8) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.dim_value_)));
          set_has_dim_value();
        } else {
          goto handle_unusual;
        }
        goto after_dim_param;
        break;
      }

      // optional string dim_param = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dim_param()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dim_param().data(), this->dim_param().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param");
        } else {
          goto handle_unusual;
        }
       after_dim_param:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  return false;
#undef DO_
}

void TypeProto_TensorShapeProto_Dimension::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  switch (value_case()) {
    case kDimValue:
      ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->dim_value(), output);
      break;
    case kDimParam:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->dim_param().data(), this->dim_param().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param");
      ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
        2, this->dim_param(), output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.TensorShapeProto.Dimension)
}

::google::protobuf::uint8* TypeProto_TensorShapeProto_Dimension::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  switch (value_case()) {
    case kDimValue:
      target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->dim_value(), target);
      break;
    case kDimParam:
      ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
        this->dim_param().data(), this->dim_param().length(),
        ::google::protobuf::internal::WireFormat::SERIALIZE,
        "ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param");
      target =
        ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
          2, this->dim_param(), target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  return target;
}

size_t TypeProto_TensorShapeProto_Dimension::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  size_t total_size = 0;

  switch (value_case()) {
    // optional int64 dim_value = 1;
    case kDimValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->dim_value());
      break;
    }
    // optional string dim_param = 2;
    case kDimParam: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_TensorShapeProto_Dimension::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_TensorShapeProto_Dimension* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_TensorShapeProto_Dimension>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.TensorShapeProto.Dimension)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.TensorShapeProto.Dimension)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_TensorShapeProto_Dimension::MergeFrom(const TypeProto_TensorShapeProto_Dimension& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_TensorShapeProto_Dimension::UnsafeMergeFrom(const TypeProto_TensorShapeProto_Dimension& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.value_case()) {
    case kDimValue: {
      set_dim_value(from.dim_value());
      break;
    }
    case kDimParam: {
      set_dim_param(from.dim_param());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_TensorShapeProto_Dimension::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_TensorShapeProto_Dimension::CopyFrom(const TypeProto_TensorShapeProto_Dimension& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.TensorShapeProto.Dimension)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_TensorShapeProto_Dimension::IsInitialized() const {

  return true;
}

void TypeProto_TensorShapeProto_Dimension::Swap(TypeProto_TensorShapeProto_Dimension* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_TensorShapeProto_Dimension::InternalSwap(TypeProto_TensorShapeProto_Dimension* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_TensorShapeProto_Dimension::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_TensorShapeProto_Dimension_descriptor_;
  metadata.reflection = TypeProto_TensorShapeProto_Dimension_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_TensorShapeProto::kDimFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_TensorShapeProto::TypeProto_TensorShapeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.TensorShapeProto)
}

void TypeProto_TensorShapeProto::InitAsDefaultInstance() {
}

TypeProto_TensorShapeProto::TypeProto_TensorShapeProto(const TypeProto_TensorShapeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.TensorShapeProto)
}

void TypeProto_TensorShapeProto::SharedCtor() {
  _cached_size_ = 0;
}

TypeProto_TensorShapeProto::~TypeProto_TensorShapeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.TensorShapeProto)
  SharedDtor();
}

void TypeProto_TensorShapeProto::SharedDtor() {
}

void TypeProto_TensorShapeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_TensorShapeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_TensorShapeProto_descriptor_;
}

const TypeProto_TensorShapeProto& TypeProto_TensorShapeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TensorShapeProto> TypeProto_TensorShapeProto_default_instance_;

TypeProto_TensorShapeProto* TypeProto_TensorShapeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto_TensorShapeProto* n = new TypeProto_TensorShapeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_TensorShapeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.TensorShapeProto)
  dim_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_TensorShapeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.TensorShapeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ONNXIR.TypeProto.TensorShapeProto.Dimension dim = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_dim:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_dim()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_dim;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.TensorShapeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.TensorShapeProto)
  return false;
#undef DO_
}

void TypeProto_TensorShapeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.TensorShapeProto)
  // repeated .ONNXIR.TypeProto.TensorShapeProto.Dimension dim = 1;
  for (unsigned int i = 0, n = this->dim_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->dim(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.TensorShapeProto)
}

::google::protobuf::uint8* TypeProto_TensorShapeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.TensorShapeProto)
  // repeated .ONNXIR.TypeProto.TensorShapeProto.Dimension dim = 1;
  for (unsigned int i = 0, n = this->dim_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->dim(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.TensorShapeProto)
  return target;
}

size_t TypeProto_TensorShapeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.TensorShapeProto)
  size_t total_size = 0;

  // repeated .ONNXIR.TypeProto.TensorShapeProto.Dimension dim = 1;
  {
    unsigned int count = this->dim_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->dim(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_TensorShapeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.TensorShapeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_TensorShapeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_TensorShapeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.TensorShapeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.TensorShapeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_TensorShapeProto::MergeFrom(const TypeProto_TensorShapeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.TensorShapeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_TensorShapeProto::UnsafeMergeFrom(const TypeProto_TensorShapeProto& from) {
  GOOGLE_DCHECK(&from != this);
  dim_.MergeFrom(from.dim_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_TensorShapeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.TensorShapeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_TensorShapeProto::CopyFrom(const TypeProto_TensorShapeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.TensorShapeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_TensorShapeProto::IsInitialized() const {

  return true;
}

void TypeProto_TensorShapeProto::Swap(TypeProto_TensorShapeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_TensorShapeProto::InternalSwap(TypeProto_TensorShapeProto* other) {
  dim_.UnsafeArenaSwap(&other->dim_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_TensorShapeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_TensorShapeProto_descriptor_;
  metadata.reflection = TypeProto_TensorShapeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_TensorTypeProto::kElemTypeFieldNumber;
const int TypeProto_TensorTypeProto::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_TensorTypeProto::TypeProto_TensorTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.TensorTypeProto)
}

void TypeProto_TensorTypeProto::InitAsDefaultInstance() {
  shape_ = const_cast< ::ONNXIR::TypeProto_TensorShapeProto*>(
      ::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance());
}

TypeProto_TensorTypeProto::TypeProto_TensorTypeProto(const TypeProto_TensorTypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.TensorTypeProto)
}

void TypeProto_TensorTypeProto::SharedCtor() {
  _cached_size_ = 0;
  shape_ = NULL;
  elem_type_ = 0;
}

TypeProto_TensorTypeProto::~TypeProto_TensorTypeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.TensorTypeProto)
  SharedDtor();
}

void TypeProto_TensorTypeProto::SharedDtor() {
  if (this != &TypeProto_TensorTypeProto_default_instance_.get()) {
    delete shape_;
  }
}

void TypeProto_TensorTypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_TensorTypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_TensorTypeProto_descriptor_;
}

const TypeProto_TensorTypeProto& TypeProto_TensorTypeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TensorTypeProto> TypeProto_TensorTypeProto_default_instance_;

TypeProto_TensorTypeProto* TypeProto_TensorTypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto_TensorTypeProto* n = new TypeProto_TensorTypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_TensorTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.TensorTypeProto)
  if (_has_bits_[0 / 32] & 3u) {
    elem_type_ = 0;
    if (has_shape()) {
      if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_TensorTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.TensorTypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ONNXIR.TensorProto.DataType elem_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ONNXIR::TensorProto_DataType_IsValid(value)) {
            set_elem_type(static_cast< ::ONNXIR::TensorProto_DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shape;
        break;
      }

      // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
      case 2: {
        if (tag == 18) {
         parse_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.TensorTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.TensorTypeProto)
  return false;
#undef DO_
}

void TypeProto_TensorTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.TensorTypeProto)
  // optional .ONNXIR.TensorProto.DataType elem_type = 1;
  if (has_elem_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->elem_type(), output);
  }

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
  if (has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->shape_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.TensorTypeProto)
}

::google::protobuf::uint8* TypeProto_TensorTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.TensorTypeProto)
  // optional .ONNXIR.TensorProto.DataType elem_type = 1;
  if (has_elem_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->elem_type(), target);
  }

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
  if (has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->shape_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.TensorTypeProto)
  return target;
}

size_t TypeProto_TensorTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.TensorTypeProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ONNXIR.TensorProto.DataType elem_type = 1;
    if (has_elem_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->elem_type());
    }

    // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->shape_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_TensorTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.TensorTypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_TensorTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_TensorTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.TensorTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.TensorTypeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_TensorTypeProto::MergeFrom(const TypeProto_TensorTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.TensorTypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_TensorTypeProto::UnsafeMergeFrom(const TypeProto_TensorTypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_elem_type()) {
      set_elem_type(from.elem_type());
    }
    if (from.has_shape()) {
      mutable_shape()->::ONNXIR::TypeProto_TensorShapeProto::MergeFrom(from.shape());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_TensorTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.TensorTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_TensorTypeProto::CopyFrom(const TypeProto_TensorTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.TensorTypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_TensorTypeProto::IsInitialized() const {

  return true;
}

void TypeProto_TensorTypeProto::Swap(TypeProto_TensorTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_TensorTypeProto::InternalSwap(TypeProto_TensorTypeProto* other) {
  std::swap(elem_type_, other->elem_type_);
  std::swap(shape_, other->shape_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_TensorTypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_TensorTypeProto_descriptor_;
  metadata.reflection = TypeProto_TensorTypeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_SparseTensorTypeProto::kElemTypeFieldNumber;
const int TypeProto_SparseTensorTypeProto::kShapeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_SparseTensorTypeProto::TypeProto_SparseTensorTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.SparseTensorTypeProto)
}

void TypeProto_SparseTensorTypeProto::InitAsDefaultInstance() {
  shape_ = const_cast< ::ONNXIR::TypeProto_TensorShapeProto*>(
      ::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance());
}

TypeProto_SparseTensorTypeProto::TypeProto_SparseTensorTypeProto(const TypeProto_SparseTensorTypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.SparseTensorTypeProto)
}

void TypeProto_SparseTensorTypeProto::SharedCtor() {
  _cached_size_ = 0;
  shape_ = NULL;
  elem_type_ = 0;
}

TypeProto_SparseTensorTypeProto::~TypeProto_SparseTensorTypeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.SparseTensorTypeProto)
  SharedDtor();
}

void TypeProto_SparseTensorTypeProto::SharedDtor() {
  if (this != &TypeProto_SparseTensorTypeProto_default_instance_.get()) {
    delete shape_;
  }
}

void TypeProto_SparseTensorTypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_SparseTensorTypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_SparseTensorTypeProto_descriptor_;
}

const TypeProto_SparseTensorTypeProto& TypeProto_SparseTensorTypeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_SparseTensorTypeProto> TypeProto_SparseTensorTypeProto_default_instance_;

TypeProto_SparseTensorTypeProto* TypeProto_SparseTensorTypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto_SparseTensorTypeProto* n = new TypeProto_SparseTensorTypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_SparseTensorTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  if (_has_bits_[0 / 32] & 3u) {
    elem_type_ = 0;
    if (has_shape()) {
      if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_SparseTensorTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ONNXIR.TensorProto.DataType elem_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ONNXIR::TensorProto_DataType_IsValid(value)) {
            set_elem_type(static_cast< ::ONNXIR::TensorProto_DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_shape;
        break;
      }

      // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
      case 2: {
        if (tag == 18) {
         parse_shape:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_shape()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.SparseTensorTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.SparseTensorTypeProto)
  return false;
#undef DO_
}

void TypeProto_SparseTensorTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  // optional .ONNXIR.TensorProto.DataType elem_type = 1;
  if (has_elem_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->elem_type(), output);
  }

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
  if (has_shape()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->shape_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.SparseTensorTypeProto)
}

::google::protobuf::uint8* TypeProto_SparseTensorTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  // optional .ONNXIR.TensorProto.DataType elem_type = 1;
  if (has_elem_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->elem_type(), target);
  }

  // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
  if (has_shape()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->shape_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.SparseTensorTypeProto)
  return target;
}

size_t TypeProto_SparseTensorTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ONNXIR.TensorProto.DataType elem_type = 1;
    if (has_elem_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->elem_type());
    }

    // optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
    if (has_shape()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->shape_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_SparseTensorTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_SparseTensorTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_SparseTensorTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.SparseTensorTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.SparseTensorTypeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_SparseTensorTypeProto::MergeFrom(const TypeProto_SparseTensorTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_SparseTensorTypeProto::UnsafeMergeFrom(const TypeProto_SparseTensorTypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_elem_type()) {
      set_elem_type(from.elem_type());
    }
    if (from.has_shape()) {
      mutable_shape()->::ONNXIR::TypeProto_TensorShapeProto::MergeFrom(from.shape());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_SparseTensorTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_SparseTensorTypeProto::CopyFrom(const TypeProto_SparseTensorTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.SparseTensorTypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_SparseTensorTypeProto::IsInitialized() const {

  return true;
}

void TypeProto_SparseTensorTypeProto::Swap(TypeProto_SparseTensorTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_SparseTensorTypeProto::InternalSwap(TypeProto_SparseTensorTypeProto* other) {
  std::swap(elem_type_, other->elem_type_);
  std::swap(shape_, other->shape_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_SparseTensorTypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_SparseTensorTypeProto_descriptor_;
  metadata.reflection = TypeProto_SparseTensorTypeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_HandleTypeProto::TypeProto_HandleTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.HandleTypeProto)
}

void TypeProto_HandleTypeProto::InitAsDefaultInstance() {
}

TypeProto_HandleTypeProto::TypeProto_HandleTypeProto(const TypeProto_HandleTypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.HandleTypeProto)
}

void TypeProto_HandleTypeProto::SharedCtor() {
  _cached_size_ = 0;
}

TypeProto_HandleTypeProto::~TypeProto_HandleTypeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.HandleTypeProto)
  SharedDtor();
}

void TypeProto_HandleTypeProto::SharedDtor() {
}

void TypeProto_HandleTypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_HandleTypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_HandleTypeProto_descriptor_;
}

const TypeProto_HandleTypeProto& TypeProto_HandleTypeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_HandleTypeProto> TypeProto_HandleTypeProto_default_instance_;

TypeProto_HandleTypeProto* TypeProto_HandleTypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto_HandleTypeProto* n = new TypeProto_HandleTypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_HandleTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.HandleTypeProto)
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_HandleTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.HandleTypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.HandleTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.HandleTypeProto)
  return false;
#undef DO_
}

void TypeProto_HandleTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.HandleTypeProto)
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.HandleTypeProto)
}

::google::protobuf::uint8* TypeProto_HandleTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.HandleTypeProto)
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.HandleTypeProto)
  return target;
}

size_t TypeProto_HandleTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.HandleTypeProto)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_HandleTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.HandleTypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_HandleTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_HandleTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.HandleTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.HandleTypeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_HandleTypeProto::MergeFrom(const TypeProto_HandleTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.HandleTypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_HandleTypeProto::UnsafeMergeFrom(const TypeProto_HandleTypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_HandleTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.HandleTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_HandleTypeProto::CopyFrom(const TypeProto_HandleTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.HandleTypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_HandleTypeProto::IsInitialized() const {

  return true;
}

void TypeProto_HandleTypeProto::Swap(TypeProto_HandleTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_HandleTypeProto::InternalSwap(TypeProto_HandleTypeProto* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_HandleTypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_HandleTypeProto_descriptor_;
  metadata.reflection = TypeProto_HandleTypeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_TupleTypeProto::kElemTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_TupleTypeProto::TypeProto_TupleTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.TupleTypeProto)
}

void TypeProto_TupleTypeProto::InitAsDefaultInstance() {
}

TypeProto_TupleTypeProto::TypeProto_TupleTypeProto(const TypeProto_TupleTypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.TupleTypeProto)
}

void TypeProto_TupleTypeProto::SharedCtor() {
  _cached_size_ = 0;
}

TypeProto_TupleTypeProto::~TypeProto_TupleTypeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.TupleTypeProto)
  SharedDtor();
}

void TypeProto_TupleTypeProto::SharedDtor() {
}

void TypeProto_TupleTypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_TupleTypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_TupleTypeProto_descriptor_;
}

const TypeProto_TupleTypeProto& TypeProto_TupleTypeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_TupleTypeProto> TypeProto_TupleTypeProto_default_instance_;

TypeProto_TupleTypeProto* TypeProto_TupleTypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto_TupleTypeProto* n = new TypeProto_TupleTypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_TupleTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.TupleTypeProto)
  elem_type_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_TupleTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.TupleTypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ONNXIR.TypeProto elem_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elem_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elem_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elem_type;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.TupleTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.TupleTypeProto)
  return false;
#undef DO_
}

void TypeProto_TupleTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.TupleTypeProto)
  // repeated .ONNXIR.TypeProto elem_type = 1;
  for (unsigned int i = 0, n = this->elem_type_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elem_type(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.TupleTypeProto)
}

::google::protobuf::uint8* TypeProto_TupleTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.TupleTypeProto)
  // repeated .ONNXIR.TypeProto elem_type = 1;
  for (unsigned int i = 0, n = this->elem_type_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elem_type(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.TupleTypeProto)
  return target;
}

size_t TypeProto_TupleTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.TupleTypeProto)
  size_t total_size = 0;

  // repeated .ONNXIR.TypeProto elem_type = 1;
  {
    unsigned int count = this->elem_type_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->elem_type(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_TupleTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.TupleTypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_TupleTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_TupleTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.TupleTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.TupleTypeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_TupleTypeProto::MergeFrom(const TypeProto_TupleTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.TupleTypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_TupleTypeProto::UnsafeMergeFrom(const TypeProto_TupleTypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  elem_type_.MergeFrom(from.elem_type_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_TupleTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.TupleTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_TupleTypeProto::CopyFrom(const TypeProto_TupleTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.TupleTypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_TupleTypeProto::IsInitialized() const {

  return true;
}

void TypeProto_TupleTypeProto::Swap(TypeProto_TupleTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_TupleTypeProto::InternalSwap(TypeProto_TupleTypeProto* other) {
  elem_type_.UnsafeArenaSwap(&other->elem_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_TupleTypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_TupleTypeProto_descriptor_;
  metadata.reflection = TypeProto_TupleTypeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_SeqTypeProto::kElemTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_SeqTypeProto::TypeProto_SeqTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.SeqTypeProto)
}

void TypeProto_SeqTypeProto::InitAsDefaultInstance() {
  elem_type_ = const_cast< ::ONNXIR::TypeProto*>(
      ::ONNXIR::TypeProto::internal_default_instance());
}

TypeProto_SeqTypeProto::TypeProto_SeqTypeProto(const TypeProto_SeqTypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.SeqTypeProto)
}

void TypeProto_SeqTypeProto::SharedCtor() {
  _cached_size_ = 0;
  elem_type_ = NULL;
}

TypeProto_SeqTypeProto::~TypeProto_SeqTypeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.SeqTypeProto)
  SharedDtor();
}

void TypeProto_SeqTypeProto::SharedDtor() {
  if (this != &TypeProto_SeqTypeProto_default_instance_.get()) {
    delete elem_type_;
  }
}

void TypeProto_SeqTypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_SeqTypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_SeqTypeProto_descriptor_;
}

const TypeProto_SeqTypeProto& TypeProto_SeqTypeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_SeqTypeProto> TypeProto_SeqTypeProto_default_instance_;

TypeProto_SeqTypeProto* TypeProto_SeqTypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto_SeqTypeProto* n = new TypeProto_SeqTypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_SeqTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.SeqTypeProto)
  if (has_elem_type()) {
    if (elem_type_ != NULL) elem_type_->::ONNXIR::TypeProto::Clear();
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_SeqTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.SeqTypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ONNXIR.TypeProto elem_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_elem_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.SeqTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.SeqTypeProto)
  return false;
#undef DO_
}

void TypeProto_SeqTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.SeqTypeProto)
  // optional .ONNXIR.TypeProto elem_type = 1;
  if (has_elem_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->elem_type_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.SeqTypeProto)
}

::google::protobuf::uint8* TypeProto_SeqTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.SeqTypeProto)
  // optional .ONNXIR.TypeProto elem_type = 1;
  if (has_elem_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->elem_type_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.SeqTypeProto)
  return target;
}

size_t TypeProto_SeqTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.SeqTypeProto)
  size_t total_size = 0;

  // optional .ONNXIR.TypeProto elem_type = 1;
  if (has_elem_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->elem_type_);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_SeqTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.SeqTypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_SeqTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_SeqTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.SeqTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.SeqTypeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_SeqTypeProto::MergeFrom(const TypeProto_SeqTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.SeqTypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_SeqTypeProto::UnsafeMergeFrom(const TypeProto_SeqTypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_elem_type()) {
      mutable_elem_type()->::ONNXIR::TypeProto::MergeFrom(from.elem_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_SeqTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.SeqTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_SeqTypeProto::CopyFrom(const TypeProto_SeqTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.SeqTypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_SeqTypeProto::IsInitialized() const {

  return true;
}

void TypeProto_SeqTypeProto::Swap(TypeProto_SeqTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_SeqTypeProto::InternalSwap(TypeProto_SeqTypeProto* other) {
  std::swap(elem_type_, other->elem_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_SeqTypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_SeqTypeProto_descriptor_;
  metadata.reflection = TypeProto_SeqTypeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto_MapTypeProto::kKeyTypeFieldNumber;
const int TypeProto_MapTypeProto::kValueTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto_MapTypeProto::TypeProto_MapTypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto.MapTypeProto)
}

void TypeProto_MapTypeProto::InitAsDefaultInstance() {
}

TypeProto_MapTypeProto::TypeProto_MapTypeProto(const TypeProto_MapTypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto.MapTypeProto)
}

void TypeProto_MapTypeProto::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&key_type_, 0, reinterpret_cast<char*>(&value_type_) -
    reinterpret_cast<char*>(&key_type_) + sizeof(value_type_));
}

TypeProto_MapTypeProto::~TypeProto_MapTypeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto.MapTypeProto)
  SharedDtor();
}

void TypeProto_MapTypeProto::SharedDtor() {
}

void TypeProto_MapTypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto_MapTypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_MapTypeProto_descriptor_;
}

const TypeProto_MapTypeProto& TypeProto_MapTypeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto_MapTypeProto> TypeProto_MapTypeProto_default_instance_;

TypeProto_MapTypeProto* TypeProto_MapTypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto_MapTypeProto* n = new TypeProto_MapTypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto_MapTypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto.MapTypeProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(TypeProto_MapTypeProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<TypeProto_MapTypeProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(key_type_, value_type_);

#undef ZR_HELPER_
#undef ZR_

  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto_MapTypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto.MapTypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ONNXIR.TensorProto.DataType key_type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ONNXIR::TensorProto_DataType_IsValid(value)) {
            set_key_type(static_cast< ::ONNXIR::TensorProto_DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_value_type;
        break;
      }

      // optional .ONNXIR.TensorProto.DataType value_type = 2;
      case 2: {
        if (tag == 16) {
         parse_value_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ONNXIR::TensorProto_DataType_IsValid(value)) {
            set_value_type(static_cast< ::ONNXIR::TensorProto_DataType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto.MapTypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto.MapTypeProto)
  return false;
#undef DO_
}

void TypeProto_MapTypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto.MapTypeProto)
  // optional .ONNXIR.TensorProto.DataType key_type = 1;
  if (has_key_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->key_type(), output);
  }

  // optional .ONNXIR.TensorProto.DataType value_type = 2;
  if (has_value_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->value_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto.MapTypeProto)
}

::google::protobuf::uint8* TypeProto_MapTypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto.MapTypeProto)
  // optional .ONNXIR.TensorProto.DataType key_type = 1;
  if (has_key_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->key_type(), target);
  }

  // optional .ONNXIR.TensorProto.DataType value_type = 2;
  if (has_value_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->value_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto.MapTypeProto)
  return target;
}

size_t TypeProto_MapTypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto.MapTypeProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ONNXIR.TensorProto.DataType key_type = 1;
    if (has_key_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->key_type());
    }

    // optional .ONNXIR.TensorProto.DataType value_type = 2;
    if (has_value_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->value_type());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto_MapTypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto.MapTypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto_MapTypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto_MapTypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto.MapTypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto.MapTypeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto_MapTypeProto::MergeFrom(const TypeProto_MapTypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto.MapTypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto_MapTypeProto::UnsafeMergeFrom(const TypeProto_MapTypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_key_type()) {
      set_key_type(from.key_type());
    }
    if (from.has_value_type()) {
      set_value_type(from.value_type());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto_MapTypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto.MapTypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto_MapTypeProto::CopyFrom(const TypeProto_MapTypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto.MapTypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto_MapTypeProto::IsInitialized() const {

  return true;
}

void TypeProto_MapTypeProto::Swap(TypeProto_MapTypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto_MapTypeProto::InternalSwap(TypeProto_MapTypeProto* other) {
  std::swap(key_type_, other->key_type_);
  std::swap(value_type_, other->value_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto_MapTypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_MapTypeProto_descriptor_;
  metadata.reflection = TypeProto_MapTypeProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TypeProto::kTensorTypeFieldNumber;
const int TypeProto::kSparseTensorTypeFieldNumber;
const int TypeProto::kHandleTypeFieldNumber;
const int TypeProto::kTupleTypeFieldNumber;
const int TypeProto::kSeqTypeFieldNumber;
const int TypeProto::kMapTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TypeProto::TypeProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.TypeProto)
}

void TypeProto::InitAsDefaultInstance() {
  TypeProto_default_oneof_instance_->tensor_type_ = const_cast< ::ONNXIR::TypeProto_TensorTypeProto*>(
      ::ONNXIR::TypeProto_TensorTypeProto::internal_default_instance());
  TypeProto_default_oneof_instance_->sparse_tensor_type_ = const_cast< ::ONNXIR::TypeProto_SparseTensorTypeProto*>(
      ::ONNXIR::TypeProto_SparseTensorTypeProto::internal_default_instance());
  TypeProto_default_oneof_instance_->handle_type_ = const_cast< ::ONNXIR::TypeProto_HandleTypeProto*>(
      ::ONNXIR::TypeProto_HandleTypeProto::internal_default_instance());
  TypeProto_default_oneof_instance_->tuple_type_ = const_cast< ::ONNXIR::TypeProto_TupleTypeProto*>(
      ::ONNXIR::TypeProto_TupleTypeProto::internal_default_instance());
  TypeProto_default_oneof_instance_->seq_type_ = const_cast< ::ONNXIR::TypeProto_SeqTypeProto*>(
      ::ONNXIR::TypeProto_SeqTypeProto::internal_default_instance());
  TypeProto_default_oneof_instance_->map_type_ = const_cast< ::ONNXIR::TypeProto_MapTypeProto*>(
      ::ONNXIR::TypeProto_MapTypeProto::internal_default_instance());
}

TypeProto::TypeProto(const TypeProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.TypeProto)
}

void TypeProto::SharedCtor() {
  _cached_size_ = 0;
  clear_has_value();
}

TypeProto::~TypeProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.TypeProto)
  SharedDtor();
}

void TypeProto::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void TypeProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TypeProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TypeProto_descriptor_;
}

const TypeProto& TypeProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TypeProto> TypeProto_default_instance_;

TypeProto* TypeProto::New(::google::protobuf::Arena* arena) const {
  TypeProto* n = new TypeProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TypeProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:ONNXIR.TypeProto)
  switch (value_case()) {
    case kTensorType: {
      delete value_.tensor_type_;
      break;
    }
    case kSparseTensorType: {
      delete value_.sparse_tensor_type_;
      break;
    }
    case kHandleType: {
      delete value_.handle_type_;
      break;
    }
    case kTupleType: {
      delete value_.tuple_type_;
      break;
    }
    case kSeqType: {
      delete value_.seq_type_;
      break;
    }
    case kMapType: {
      delete value_.map_type_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void TypeProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.TypeProto)
  clear_value();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool TypeProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.TypeProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ONNXIR.TypeProto.TensorTypeProto tensor_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tensor_type()));
        } else {
          goto handle_unusual;
        }
        goto after_map_type;
        break;
      }

      // optional .ONNXIR.TypeProto.SparseTensorTypeProto sparse_tensor_type = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sparse_tensor_type()));
        } else {
          goto handle_unusual;
        }
        goto after_map_type;
        break;
      }

      // optional .ONNXIR.TypeProto.HandleTypeProto handle_type = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_handle_type()));
        } else {
          goto handle_unusual;
        }
        goto after_map_type;
        break;
      }

      // optional .ONNXIR.TypeProto.TupleTypeProto tuple_type = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple_type()));
        } else {
          goto handle_unusual;
        }
        goto after_map_type;
        break;
      }

      // optional .ONNXIR.TypeProto.SeqTypeProto seq_type = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seq_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_map_type;
        break;
      }

      // optional .ONNXIR.TypeProto.MapTypeProto map_type = 6;
      case 6: {
        if (tag == 50) {
         parse_map_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map_type()));
        } else {
          goto handle_unusual;
        }
       after_map_type:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.TypeProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.TypeProto)
  return false;
#undef DO_
}

void TypeProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.TypeProto)
  switch (value_case()) {
    case kTensorType:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *value_.tensor_type_, output);
      break;
    case kSparseTensorType:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, *value_.sparse_tensor_type_, output);
      break;
    case kHandleType:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *value_.handle_type_, output);
      break;
    case kTupleType:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, *value_.tuple_type_, output);
      break;
    case kSeqType:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, *value_.seq_type_, output);
      break;
    case kMapType:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, *value_.map_type_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.TypeProto)
}

::google::protobuf::uint8* TypeProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.TypeProto)
  switch (value_case()) {
    case kTensorType:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          1, *value_.tensor_type_, false, target);
      break;
    case kSparseTensorType:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          2, *value_.sparse_tensor_type_, false, target);
      break;
    case kHandleType:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          3, *value_.handle_type_, false, target);
      break;
    case kTupleType:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          4, *value_.tuple_type_, false, target);
      break;
    case kSeqType:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          5, *value_.seq_type_, false, target);
      break;
    case kMapType:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          6, *value_.map_type_, false, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.TypeProto)
  return target;
}

size_t TypeProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.TypeProto)
  size_t total_size = 0;

  switch (value_case()) {
    // optional .ONNXIR.TypeProto.TensorTypeProto tensor_type = 1;
    case kTensorType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.tensor_type_);
      break;
    }
    // optional .ONNXIR.TypeProto.SparseTensorTypeProto sparse_tensor_type = 2;
    case kSparseTensorType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.sparse_tensor_type_);
      break;
    }
    // optional .ONNXIR.TypeProto.HandleTypeProto handle_type = 3;
    case kHandleType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.handle_type_);
      break;
    }
    // optional .ONNXIR.TypeProto.TupleTypeProto tuple_type = 4;
    case kTupleType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.tuple_type_);
      break;
    }
    // optional .ONNXIR.TypeProto.SeqTypeProto seq_type = 5;
    case kSeqType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.seq_type_);
      break;
    }
    // optional .ONNXIR.TypeProto.MapTypeProto map_type = 6;
    case kMapType: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.map_type_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TypeProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.TypeProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TypeProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TypeProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.TypeProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.TypeProto)
    UnsafeMergeFrom(*source);
  }
}

void TypeProto::MergeFrom(const TypeProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.TypeProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TypeProto::UnsafeMergeFrom(const TypeProto& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.value_case()) {
    case kTensorType: {
      mutable_tensor_type()->::ONNXIR::TypeProto_TensorTypeProto::MergeFrom(from.tensor_type());
      break;
    }
    case kSparseTensorType: {
      mutable_sparse_tensor_type()->::ONNXIR::TypeProto_SparseTensorTypeProto::MergeFrom(from.sparse_tensor_type());
      break;
    }
    case kHandleType: {
      mutable_handle_type()->::ONNXIR::TypeProto_HandleTypeProto::MergeFrom(from.handle_type());
      break;
    }
    case kTupleType: {
      mutable_tuple_type()->::ONNXIR::TypeProto_TupleTypeProto::MergeFrom(from.tuple_type());
      break;
    }
    case kSeqType: {
      mutable_seq_type()->::ONNXIR::TypeProto_SeqTypeProto::MergeFrom(from.seq_type());
      break;
    }
    case kMapType: {
      mutable_map_type()->::ONNXIR::TypeProto_MapTypeProto::MergeFrom(from.map_type());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void TypeProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.TypeProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeProto::CopyFrom(const TypeProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.TypeProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TypeProto::IsInitialized() const {

  return true;
}

void TypeProto::Swap(TypeProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TypeProto::InternalSwap(TypeProto* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TypeProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TypeProto_descriptor_;
  metadata.reflection = TypeProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TypeProto_TensorShapeProto_Dimension

// optional int64 dim_value = 1;
bool TypeProto_TensorShapeProto_Dimension::has_dim_value() const {
  return value_case() == kDimValue;
}
void TypeProto_TensorShapeProto_Dimension::set_has_dim_value() {
  _oneof_case_[0] = kDimValue;
}
void TypeProto_TensorShapeProto_Dimension::clear_dim_value() {
  if (has_dim_value()) {
    value_.dim_value_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
::google::protobuf::int64 TypeProto_TensorShapeProto_Dimension::dim_value() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_value)
  if (has_dim_value()) {
    return value_.dim_value_;
  }
  return GOOGLE_LONGLONG(0);
}
void TypeProto_TensorShapeProto_Dimension::set_dim_value(::google::protobuf::int64 value) {
  if (!has_dim_value()) {
    clear_value();
    set_has_dim_value();
  }
  value_.dim_value_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_value)
}

// optional string dim_param = 2;
bool TypeProto_TensorShapeProto_Dimension::has_dim_param() const {
  return value_case() == kDimParam;
}
void TypeProto_TensorShapeProto_Dimension::set_has_dim_param() {
  _oneof_case_[0] = kDimParam;
}
void TypeProto_TensorShapeProto_Dimension::clear_dim_param() {
  if (has_dim_param()) {
    value_.dim_param_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
const ::std::string& TypeProto_TensorShapeProto_Dimension::dim_param() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  if (has_dim_param()) {
    return value_.dim_param_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void TypeProto_TensorShapeProto_Dimension::set_dim_param(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}
void TypeProto_TensorShapeProto_Dimension::set_dim_param(const char* value) {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}
void TypeProto_TensorShapeProto_Dimension::set_dim_param(const char* value, size_t size) {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.dim_param_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}
::std::string* TypeProto_TensorShapeProto_Dimension::mutable_dim_param() {
  if (!has_dim_param()) {
    clear_value();
    set_has_dim_param();
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  return value_.dim_param_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TypeProto_TensorShapeProto_Dimension::release_dim_param() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
  if (has_dim_param()) {
    clear_has_value();
    return value_.dim_param_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void TypeProto_TensorShapeProto_Dimension::set_allocated_dim_param(::std::string* dim_param) {
  if (!has_dim_param()) {
    value_.dim_param_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (dim_param != NULL) {
    set_has_dim_param();
    value_.dim_param_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        dim_param);
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.TensorShapeProto.Dimension.dim_param)
}

bool TypeProto_TensorShapeProto_Dimension::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void TypeProto_TensorShapeProto_Dimension::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
TypeProto_TensorShapeProto_Dimension::ValueCase TypeProto_TensorShapeProto_Dimension::value_case() const {
  return TypeProto_TensorShapeProto_Dimension::ValueCase(_oneof_case_[0]);
}
inline const TypeProto_TensorShapeProto_Dimension* TypeProto_TensorShapeProto_Dimension::internal_default_instance() {
  return &TypeProto_TensorShapeProto_Dimension_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_TensorShapeProto

// repeated .ONNXIR.TypeProto.TensorShapeProto.Dimension dim = 1;
int TypeProto_TensorShapeProto::dim_size() const {
  return dim_.size();
}
void TypeProto_TensorShapeProto::clear_dim() {
  dim_.Clear();
}
const ::ONNXIR::TypeProto_TensorShapeProto_Dimension& TypeProto_TensorShapeProto::dim(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_.Get(index);
}
::ONNXIR::TypeProto_TensorShapeProto_Dimension* TypeProto_TensorShapeProto::mutable_dim(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_.Mutable(index);
}
::ONNXIR::TypeProto_TensorShapeProto_Dimension* TypeProto_TensorShapeProto::add_dim() {
  // @@protoc_insertion_point(field_add:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto_Dimension >*
TypeProto_TensorShapeProto::mutable_dim() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TypeProto.TensorShapeProto.dim)
  return &dim_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto_TensorShapeProto_Dimension >&
TypeProto_TensorShapeProto::dim() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TypeProto.TensorShapeProto.dim)
  return dim_;
}

inline const TypeProto_TensorShapeProto* TypeProto_TensorShapeProto::internal_default_instance() {
  return &TypeProto_TensorShapeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_TensorTypeProto

// optional .ONNXIR.TensorProto.DataType elem_type = 1;
bool TypeProto_TensorTypeProto::has_elem_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeProto_TensorTypeProto::set_has_elem_type() {
  _has_bits_[0] |= 0x00000001u;
}
void TypeProto_TensorTypeProto::clear_has_elem_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void TypeProto_TensorTypeProto::clear_elem_type() {
  elem_type_ = 0;
  clear_has_elem_type();
}
::ONNXIR::TensorProto_DataType TypeProto_TensorTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorTypeProto.elem_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(elem_type_);
}
void TypeProto_TensorTypeProto::set_elem_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_elem_type();
  elem_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.TensorTypeProto.elem_type)
}

// optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
bool TypeProto_TensorTypeProto::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TypeProto_TensorTypeProto::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
void TypeProto_TensorTypeProto::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
void TypeProto_TensorTypeProto::clear_shape() {
  if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
  clear_has_shape();
}
const ::ONNXIR::TypeProto_TensorShapeProto& TypeProto_TensorTypeProto::shape() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TensorTypeProto.shape)
  return shape_ != NULL ? *shape_
                         : *::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance();
}
::ONNXIR::TypeProto_TensorShapeProto* TypeProto_TensorTypeProto::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) {
    shape_ = new ::ONNXIR::TypeProto_TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TensorTypeProto.shape)
  return shape_;
}
::ONNXIR::TypeProto_TensorShapeProto* TypeProto_TensorTypeProto::release_shape() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.TensorTypeProto.shape)
  clear_has_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void TypeProto_TensorTypeProto::set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.TensorTypeProto.shape)
}

inline const TypeProto_TensorTypeProto* TypeProto_TensorTypeProto::internal_default_instance() {
  return &TypeProto_TensorTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_SparseTensorTypeProto

// optional .ONNXIR.TensorProto.DataType elem_type = 1;
bool TypeProto_SparseTensorTypeProto::has_elem_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeProto_SparseTensorTypeProto::set_has_elem_type() {
  _has_bits_[0] |= 0x00000001u;
}
void TypeProto_SparseTensorTypeProto::clear_has_elem_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void TypeProto_SparseTensorTypeProto::clear_elem_type() {
  elem_type_ = 0;
  clear_has_elem_type();
}
::ONNXIR::TensorProto_DataType TypeProto_SparseTensorTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.SparseTensorTypeProto.elem_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(elem_type_);
}
void TypeProto_SparseTensorTypeProto::set_elem_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_elem_type();
  elem_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.SparseTensorTypeProto.elem_type)
}

// optional .ONNXIR.TypeProto.TensorShapeProto shape = 2;
bool TypeProto_SparseTensorTypeProto::has_shape() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TypeProto_SparseTensorTypeProto::set_has_shape() {
  _has_bits_[0] |= 0x00000002u;
}
void TypeProto_SparseTensorTypeProto::clear_has_shape() {
  _has_bits_[0] &= ~0x00000002u;
}
void TypeProto_SparseTensorTypeProto::clear_shape() {
  if (shape_ != NULL) shape_->::ONNXIR::TypeProto_TensorShapeProto::Clear();
  clear_has_shape();
}
const ::ONNXIR::TypeProto_TensorShapeProto& TypeProto_SparseTensorTypeProto::shape() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
  return shape_ != NULL ? *shape_
                         : *::ONNXIR::TypeProto_TensorShapeProto::internal_default_instance();
}
::ONNXIR::TypeProto_TensorShapeProto* TypeProto_SparseTensorTypeProto::mutable_shape() {
  set_has_shape();
  if (shape_ == NULL) {
    shape_ = new ::ONNXIR::TypeProto_TensorShapeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
  return shape_;
}
::ONNXIR::TypeProto_TensorShapeProto* TypeProto_SparseTensorTypeProto::release_shape() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
  clear_has_shape();
  ::ONNXIR::TypeProto_TensorShapeProto* temp = shape_;
  shape_ = NULL;
  return temp;
}
void TypeProto_SparseTensorTypeProto::set_allocated_shape(::ONNXIR::TypeProto_TensorShapeProto* shape) {
  delete shape_;
  shape_ = shape;
  if (shape) {
    set_has_shape();
  } else {
    clear_has_shape();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.SparseTensorTypeProto.shape)
}

inline const TypeProto_SparseTensorTypeProto* TypeProto_SparseTensorTypeProto::internal_default_instance() {
  return &TypeProto_SparseTensorTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_HandleTypeProto

inline const TypeProto_HandleTypeProto* TypeProto_HandleTypeProto::internal_default_instance() {
  return &TypeProto_HandleTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_TupleTypeProto

// repeated .ONNXIR.TypeProto elem_type = 1;
int TypeProto_TupleTypeProto::elem_type_size() const {
  return elem_type_.size();
}
void TypeProto_TupleTypeProto::clear_elem_type() {
  elem_type_.Clear();
}
const ::ONNXIR::TypeProto& TypeProto_TupleTypeProto::elem_type(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_.Get(index);
}
::ONNXIR::TypeProto* TypeProto_TupleTypeProto::mutable_elem_type(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_.Mutable(index);
}
::ONNXIR::TypeProto* TypeProto_TupleTypeProto::add_elem_type() {
  // @@protoc_insertion_point(field_add:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >*
TypeProto_TupleTypeProto::mutable_elem_type() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return &elem_type_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::TypeProto >&
TypeProto_TupleTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_list:ONNXIR.TypeProto.TupleTypeProto.elem_type)
  return elem_type_;
}

inline const TypeProto_TupleTypeProto* TypeProto_TupleTypeProto::internal_default_instance() {
  return &TypeProto_TupleTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_SeqTypeProto

// optional .ONNXIR.TypeProto elem_type = 1;
bool TypeProto_SeqTypeProto::has_elem_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeProto_SeqTypeProto::set_has_elem_type() {
  _has_bits_[0] |= 0x00000001u;
}
void TypeProto_SeqTypeProto::clear_has_elem_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void TypeProto_SeqTypeProto::clear_elem_type() {
  if (elem_type_ != NULL) elem_type_->::ONNXIR::TypeProto::Clear();
  clear_has_elem_type();
}
const ::ONNXIR::TypeProto& TypeProto_SeqTypeProto::elem_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.SeqTypeProto.elem_type)
  return elem_type_ != NULL ? *elem_type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
::ONNXIR::TypeProto* TypeProto_SeqTypeProto::mutable_elem_type() {
  set_has_elem_type();
  if (elem_type_ == NULL) {
    elem_type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.SeqTypeProto.elem_type)
  return elem_type_;
}
::ONNXIR::TypeProto* TypeProto_SeqTypeProto::release_elem_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.SeqTypeProto.elem_type)
  clear_has_elem_type();
  ::ONNXIR::TypeProto* temp = elem_type_;
  elem_type_ = NULL;
  return temp;
}
void TypeProto_SeqTypeProto::set_allocated_elem_type(::ONNXIR::TypeProto* elem_type) {
  delete elem_type_;
  elem_type_ = elem_type;
  if (elem_type) {
    set_has_elem_type();
  } else {
    clear_has_elem_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.SeqTypeProto.elem_type)
}

inline const TypeProto_SeqTypeProto* TypeProto_SeqTypeProto::internal_default_instance() {
  return &TypeProto_SeqTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto_MapTypeProto

// optional .ONNXIR.TensorProto.DataType key_type = 1;
bool TypeProto_MapTypeProto::has_key_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TypeProto_MapTypeProto::set_has_key_type() {
  _has_bits_[0] |= 0x00000001u;
}
void TypeProto_MapTypeProto::clear_has_key_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void TypeProto_MapTypeProto::clear_key_type() {
  key_type_ = 0;
  clear_has_key_type();
}
::ONNXIR::TensorProto_DataType TypeProto_MapTypeProto::key_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.MapTypeProto.key_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(key_type_);
}
void TypeProto_MapTypeProto::set_key_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_key_type();
  key_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.MapTypeProto.key_type)
}

// optional .ONNXIR.TensorProto.DataType value_type = 2;
bool TypeProto_MapTypeProto::has_value_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TypeProto_MapTypeProto::set_has_value_type() {
  _has_bits_[0] |= 0x00000002u;
}
void TypeProto_MapTypeProto::clear_has_value_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void TypeProto_MapTypeProto::clear_value_type() {
  value_type_ = 0;
  clear_has_value_type();
}
::ONNXIR::TensorProto_DataType TypeProto_MapTypeProto::value_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.MapTypeProto.value_type)
  return static_cast< ::ONNXIR::TensorProto_DataType >(value_type_);
}
void TypeProto_MapTypeProto::set_value_type(::ONNXIR::TensorProto_DataType value) {
  assert(::ONNXIR::TensorProto_DataType_IsValid(value));
  set_has_value_type();
  value_type_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.TypeProto.MapTypeProto.value_type)
}

inline const TypeProto_MapTypeProto* TypeProto_MapTypeProto::internal_default_instance() {
  return &TypeProto_MapTypeProto_default_instance_.get();
}
// -------------------------------------------------------------------

// TypeProto

// optional .ONNXIR.TypeProto.TensorTypeProto tensor_type = 1;
bool TypeProto::has_tensor_type() const {
  return value_case() == kTensorType;
}
void TypeProto::set_has_tensor_type() {
  _oneof_case_[0] = kTensorType;
}
void TypeProto::clear_tensor_type() {
  if (has_tensor_type()) {
    delete value_.tensor_type_;
    clear_has_value();
  }
}
 const ::ONNXIR::TypeProto_TensorTypeProto& TypeProto::tensor_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.tensor_type)
  return has_tensor_type()
      ? *value_.tensor_type_
      : ::ONNXIR::TypeProto_TensorTypeProto::default_instance();
}
::ONNXIR::TypeProto_TensorTypeProto* TypeProto::mutable_tensor_type() {
  if (!has_tensor_type()) {
    clear_value();
    set_has_tensor_type();
    value_.tensor_type_ = new ::ONNXIR::TypeProto_TensorTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.tensor_type)
  return value_.tensor_type_;
}
::ONNXIR::TypeProto_TensorTypeProto* TypeProto::release_tensor_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.tensor_type)
  if (has_tensor_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_TensorTypeProto* temp = value_.tensor_type_;
    value_.tensor_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypeProto::set_allocated_tensor_type(::ONNXIR::TypeProto_TensorTypeProto* tensor_type) {
  clear_value();
  if (tensor_type) {
    set_has_tensor_type();
    value_.tensor_type_ = tensor_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.tensor_type)
}

// optional .ONNXIR.TypeProto.SparseTensorTypeProto sparse_tensor_type = 2;
bool TypeProto::has_sparse_tensor_type() const {
  return value_case() == kSparseTensorType;
}
void TypeProto::set_has_sparse_tensor_type() {
  _oneof_case_[0] = kSparseTensorType;
}
void TypeProto::clear_sparse_tensor_type() {
  if (has_sparse_tensor_type()) {
    delete value_.sparse_tensor_type_;
    clear_has_value();
  }
}
 const ::ONNXIR::TypeProto_SparseTensorTypeProto& TypeProto::sparse_tensor_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.sparse_tensor_type)
  return has_sparse_tensor_type()
      ? *value_.sparse_tensor_type_
      : ::ONNXIR::TypeProto_SparseTensorTypeProto::default_instance();
}
::ONNXIR::TypeProto_SparseTensorTypeProto* TypeProto::mutable_sparse_tensor_type() {
  if (!has_sparse_tensor_type()) {
    clear_value();
    set_has_sparse_tensor_type();
    value_.sparse_tensor_type_ = new ::ONNXIR::TypeProto_SparseTensorTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.sparse_tensor_type)
  return value_.sparse_tensor_type_;
}
::ONNXIR::TypeProto_SparseTensorTypeProto* TypeProto::release_sparse_tensor_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.sparse_tensor_type)
  if (has_sparse_tensor_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_SparseTensorTypeProto* temp = value_.sparse_tensor_type_;
    value_.sparse_tensor_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypeProto::set_allocated_sparse_tensor_type(::ONNXIR::TypeProto_SparseTensorTypeProto* sparse_tensor_type) {
  clear_value();
  if (sparse_tensor_type) {
    set_has_sparse_tensor_type();
    value_.sparse_tensor_type_ = sparse_tensor_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.sparse_tensor_type)
}

// optional .ONNXIR.TypeProto.HandleTypeProto handle_type = 3;
bool TypeProto::has_handle_type() const {
  return value_case() == kHandleType;
}
void TypeProto::set_has_handle_type() {
  _oneof_case_[0] = kHandleType;
}
void TypeProto::clear_handle_type() {
  if (has_handle_type()) {
    delete value_.handle_type_;
    clear_has_value();
  }
}
 const ::ONNXIR::TypeProto_HandleTypeProto& TypeProto::handle_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.handle_type)
  return has_handle_type()
      ? *value_.handle_type_
      : ::ONNXIR::TypeProto_HandleTypeProto::default_instance();
}
::ONNXIR::TypeProto_HandleTypeProto* TypeProto::mutable_handle_type() {
  if (!has_handle_type()) {
    clear_value();
    set_has_handle_type();
    value_.handle_type_ = new ::ONNXIR::TypeProto_HandleTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.handle_type)
  return value_.handle_type_;
}
::ONNXIR::TypeProto_HandleTypeProto* TypeProto::release_handle_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.handle_type)
  if (has_handle_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_HandleTypeProto* temp = value_.handle_type_;
    value_.handle_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypeProto::set_allocated_handle_type(::ONNXIR::TypeProto_HandleTypeProto* handle_type) {
  clear_value();
  if (handle_type) {
    set_has_handle_type();
    value_.handle_type_ = handle_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.handle_type)
}

// optional .ONNXIR.TypeProto.TupleTypeProto tuple_type = 4;
bool TypeProto::has_tuple_type() const {
  return value_case() == kTupleType;
}
void TypeProto::set_has_tuple_type() {
  _oneof_case_[0] = kTupleType;
}
void TypeProto::clear_tuple_type() {
  if (has_tuple_type()) {
    delete value_.tuple_type_;
    clear_has_value();
  }
}
 const ::ONNXIR::TypeProto_TupleTypeProto& TypeProto::tuple_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.tuple_type)
  return has_tuple_type()
      ? *value_.tuple_type_
      : ::ONNXIR::TypeProto_TupleTypeProto::default_instance();
}
::ONNXIR::TypeProto_TupleTypeProto* TypeProto::mutable_tuple_type() {
  if (!has_tuple_type()) {
    clear_value();
    set_has_tuple_type();
    value_.tuple_type_ = new ::ONNXIR::TypeProto_TupleTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.tuple_type)
  return value_.tuple_type_;
}
::ONNXIR::TypeProto_TupleTypeProto* TypeProto::release_tuple_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.tuple_type)
  if (has_tuple_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_TupleTypeProto* temp = value_.tuple_type_;
    value_.tuple_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypeProto::set_allocated_tuple_type(::ONNXIR::TypeProto_TupleTypeProto* tuple_type) {
  clear_value();
  if (tuple_type) {
    set_has_tuple_type();
    value_.tuple_type_ = tuple_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.tuple_type)
}

// optional .ONNXIR.TypeProto.SeqTypeProto seq_type = 5;
bool TypeProto::has_seq_type() const {
  return value_case() == kSeqType;
}
void TypeProto::set_has_seq_type() {
  _oneof_case_[0] = kSeqType;
}
void TypeProto::clear_seq_type() {
  if (has_seq_type()) {
    delete value_.seq_type_;
    clear_has_value();
  }
}
 const ::ONNXIR::TypeProto_SeqTypeProto& TypeProto::seq_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.seq_type)
  return has_seq_type()
      ? *value_.seq_type_
      : ::ONNXIR::TypeProto_SeqTypeProto::default_instance();
}
::ONNXIR::TypeProto_SeqTypeProto* TypeProto::mutable_seq_type() {
  if (!has_seq_type()) {
    clear_value();
    set_has_seq_type();
    value_.seq_type_ = new ::ONNXIR::TypeProto_SeqTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.seq_type)
  return value_.seq_type_;
}
::ONNXIR::TypeProto_SeqTypeProto* TypeProto::release_seq_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.seq_type)
  if (has_seq_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_SeqTypeProto* temp = value_.seq_type_;
    value_.seq_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypeProto::set_allocated_seq_type(::ONNXIR::TypeProto_SeqTypeProto* seq_type) {
  clear_value();
  if (seq_type) {
    set_has_seq_type();
    value_.seq_type_ = seq_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.seq_type)
}

// optional .ONNXIR.TypeProto.MapTypeProto map_type = 6;
bool TypeProto::has_map_type() const {
  return value_case() == kMapType;
}
void TypeProto::set_has_map_type() {
  _oneof_case_[0] = kMapType;
}
void TypeProto::clear_map_type() {
  if (has_map_type()) {
    delete value_.map_type_;
    clear_has_value();
  }
}
 const ::ONNXIR::TypeProto_MapTypeProto& TypeProto::map_type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.TypeProto.map_type)
  return has_map_type()
      ? *value_.map_type_
      : ::ONNXIR::TypeProto_MapTypeProto::default_instance();
}
::ONNXIR::TypeProto_MapTypeProto* TypeProto::mutable_map_type() {
  if (!has_map_type()) {
    clear_value();
    set_has_map_type();
    value_.map_type_ = new ::ONNXIR::TypeProto_MapTypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.TypeProto.map_type)
  return value_.map_type_;
}
::ONNXIR::TypeProto_MapTypeProto* TypeProto::release_map_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.TypeProto.map_type)
  if (has_map_type()) {
    clear_has_value();
    ::ONNXIR::TypeProto_MapTypeProto* temp = value_.map_type_;
    value_.map_type_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void TypeProto::set_allocated_map_type(::ONNXIR::TypeProto_MapTypeProto* map_type) {
  clear_value();
  if (map_type) {
    set_has_map_type();
    value_.map_type_ = map_type;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.TypeProto.map_type)
}

bool TypeProto::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void TypeProto::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
TypeProto::ValueCase TypeProto::value_case() const {
  return TypeProto::ValueCase(_oneof_case_[0]);
}
inline const TypeProto* TypeProto::internal_default_instance() {
  return &TypeProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto_HandleProto::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto_HandleProto::ValueProto_HandleProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ValueProto.HandleProto)
}

void ValueProto_HandleProto::InitAsDefaultInstance() {
}

ValueProto_HandleProto::ValueProto_HandleProto(const ValueProto_HandleProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ValueProto.HandleProto)
}

void ValueProto_HandleProto::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_LONGLONG(0);
}

ValueProto_HandleProto::~ValueProto_HandleProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ValueProto.HandleProto)
  SharedDtor();
}

void ValueProto_HandleProto::SharedDtor() {
}

void ValueProto_HandleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueProto_HandleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValueProto_HandleProto_descriptor_;
}

const ValueProto_HandleProto& ValueProto_HandleProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ValueProto_HandleProto> ValueProto_HandleProto_default_instance_;

ValueProto_HandleProto* ValueProto_HandleProto::New(::google::protobuf::Arena* arena) const {
  ValueProto_HandleProto* n = new ValueProto_HandleProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueProto_HandleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ValueProto.HandleProto)
  uid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ValueProto_HandleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ValueProto.HandleProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 uid = 1;
      case 1: {
        if (tag == 8) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ValueProto.HandleProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ValueProto.HandleProto)
  return false;
#undef DO_
}

void ValueProto_HandleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ValueProto.HandleProto)
  // optional int64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ValueProto.HandleProto)
}

::google::protobuf::uint8* ValueProto_HandleProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ValueProto.HandleProto)
  // optional int64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ValueProto.HandleProto)
  return target;
}

size_t ValueProto_HandleProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ValueProto.HandleProto)
  size_t total_size = 0;

  // optional int64 uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->uid());
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueProto_HandleProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ValueProto.HandleProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ValueProto_HandleProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto_HandleProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ValueProto.HandleProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ValueProto.HandleProto)
    UnsafeMergeFrom(*source);
  }
}

void ValueProto_HandleProto::MergeFrom(const ValueProto_HandleProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ValueProto.HandleProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ValueProto_HandleProto::UnsafeMergeFrom(const ValueProto_HandleProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ValueProto_HandleProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ValueProto.HandleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto_HandleProto::CopyFrom(const ValueProto_HandleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ValueProto.HandleProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ValueProto_HandleProto::IsInitialized() const {

  return true;
}

void ValueProto_HandleProto::Swap(ValueProto_HandleProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueProto_HandleProto::InternalSwap(ValueProto_HandleProto* other) {
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueProto_HandleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValueProto_HandleProto_descriptor_;
  metadata.reflection = ValueProto_HandleProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto_TupleProto::kElemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto_TupleProto::ValueProto_TupleProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ValueProto.TupleProto)
}

void ValueProto_TupleProto::InitAsDefaultInstance() {
}

ValueProto_TupleProto::ValueProto_TupleProto(const ValueProto_TupleProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ValueProto.TupleProto)
}

void ValueProto_TupleProto::SharedCtor() {
  _cached_size_ = 0;
}

ValueProto_TupleProto::~ValueProto_TupleProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ValueProto.TupleProto)
  SharedDtor();
}

void ValueProto_TupleProto::SharedDtor() {
}

void ValueProto_TupleProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueProto_TupleProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValueProto_TupleProto_descriptor_;
}

const ValueProto_TupleProto& ValueProto_TupleProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ValueProto_TupleProto> ValueProto_TupleProto_default_instance_;

ValueProto_TupleProto* ValueProto_TupleProto::New(::google::protobuf::Arena* arena) const {
  ValueProto_TupleProto* n = new ValueProto_TupleProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueProto_TupleProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ValueProto.TupleProto)
  elems_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ValueProto_TupleProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ValueProto.TupleProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ONNXIR.ValueProto elems = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elems;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ValueProto.TupleProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ValueProto.TupleProto)
  return false;
#undef DO_
}

void ValueProto_TupleProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ValueProto.TupleProto)
  // repeated .ONNXIR.ValueProto elems = 1;
  for (unsigned int i = 0, n = this->elems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elems(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ValueProto.TupleProto)
}

::google::protobuf::uint8* ValueProto_TupleProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ValueProto.TupleProto)
  // repeated .ONNXIR.ValueProto elems = 1;
  for (unsigned int i = 0, n = this->elems_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elems(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ValueProto.TupleProto)
  return target;
}

size_t ValueProto_TupleProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ValueProto.TupleProto)
  size_t total_size = 0;

  // repeated .ONNXIR.ValueProto elems = 1;
  {
    unsigned int count = this->elems_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->elems(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueProto_TupleProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ValueProto.TupleProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ValueProto_TupleProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto_TupleProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ValueProto.TupleProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ValueProto.TupleProto)
    UnsafeMergeFrom(*source);
  }
}

void ValueProto_TupleProto::MergeFrom(const ValueProto_TupleProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ValueProto.TupleProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ValueProto_TupleProto::UnsafeMergeFrom(const ValueProto_TupleProto& from) {
  GOOGLE_DCHECK(&from != this);
  elems_.MergeFrom(from.elems_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ValueProto_TupleProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ValueProto.TupleProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto_TupleProto::CopyFrom(const ValueProto_TupleProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ValueProto.TupleProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ValueProto_TupleProto::IsInitialized() const {

  return true;
}

void ValueProto_TupleProto::Swap(ValueProto_TupleProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueProto_TupleProto::InternalSwap(ValueProto_TupleProto* other) {
  elems_.UnsafeArenaSwap(&other->elems_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueProto_TupleProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValueProto_TupleProto_descriptor_;
  metadata.reflection = ValueProto_TupleProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto_SequenceProto::kElemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto_SequenceProto::ValueProto_SequenceProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ValueProto.SequenceProto)
}

void ValueProto_SequenceProto::InitAsDefaultInstance() {
}

ValueProto_SequenceProto::ValueProto_SequenceProto(const ValueProto_SequenceProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ValueProto.SequenceProto)
}

void ValueProto_SequenceProto::SharedCtor() {
  _cached_size_ = 0;
}

ValueProto_SequenceProto::~ValueProto_SequenceProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ValueProto.SequenceProto)
  SharedDtor();
}

void ValueProto_SequenceProto::SharedDtor() {
}

void ValueProto_SequenceProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueProto_SequenceProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValueProto_SequenceProto_descriptor_;
}

const ValueProto_SequenceProto& ValueProto_SequenceProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ValueProto_SequenceProto> ValueProto_SequenceProto_default_instance_;

ValueProto_SequenceProto* ValueProto_SequenceProto::New(::google::protobuf::Arena* arena) const {
  ValueProto_SequenceProto* n = new ValueProto_SequenceProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueProto_SequenceProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ValueProto.SequenceProto)
  elems_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ValueProto_SequenceProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ValueProto.SequenceProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ONNXIR.ValueProto elems = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_elems:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_elems()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_elems;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ValueProto.SequenceProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ValueProto.SequenceProto)
  return false;
#undef DO_
}

void ValueProto_SequenceProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ValueProto.SequenceProto)
  // repeated .ONNXIR.ValueProto elems = 1;
  for (unsigned int i = 0, n = this->elems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->elems(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ValueProto.SequenceProto)
}

::google::protobuf::uint8* ValueProto_SequenceProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ValueProto.SequenceProto)
  // repeated .ONNXIR.ValueProto elems = 1;
  for (unsigned int i = 0, n = this->elems_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->elems(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ValueProto.SequenceProto)
  return target;
}

size_t ValueProto_SequenceProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ValueProto.SequenceProto)
  size_t total_size = 0;

  // repeated .ONNXIR.ValueProto elems = 1;
  {
    unsigned int count = this->elems_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->elems(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueProto_SequenceProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ValueProto.SequenceProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ValueProto_SequenceProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto_SequenceProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ValueProto.SequenceProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ValueProto.SequenceProto)
    UnsafeMergeFrom(*source);
  }
}

void ValueProto_SequenceProto::MergeFrom(const ValueProto_SequenceProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ValueProto.SequenceProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ValueProto_SequenceProto::UnsafeMergeFrom(const ValueProto_SequenceProto& from) {
  GOOGLE_DCHECK(&from != this);
  elems_.MergeFrom(from.elems_);
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ValueProto_SequenceProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ValueProto.SequenceProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto_SequenceProto::CopyFrom(const ValueProto_SequenceProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ValueProto.SequenceProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ValueProto_SequenceProto::IsInitialized() const {

  return true;
}

void ValueProto_SequenceProto::Swap(ValueProto_SequenceProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueProto_SequenceProto::InternalSwap(ValueProto_SequenceProto* other) {
  elems_.UnsafeArenaSwap(&other->elems_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueProto_SequenceProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValueProto_SequenceProto_descriptor_;
  metadata.reflection = ValueProto_SequenceProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto_MapProto::kKeysFieldNumber;
const int ValueProto_MapProto::kValuesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto_MapProto::ValueProto_MapProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ValueProto.MapProto)
}

void ValueProto_MapProto::InitAsDefaultInstance() {
  keys_ = const_cast< ::ONNXIR::TensorProto*>(
      ::ONNXIR::TensorProto::internal_default_instance());
  values_ = const_cast< ::ONNXIR::TensorProto*>(
      ::ONNXIR::TensorProto::internal_default_instance());
}

ValueProto_MapProto::ValueProto_MapProto(const ValueProto_MapProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ValueProto.MapProto)
}

void ValueProto_MapProto::SharedCtor() {
  _cached_size_ = 0;
  keys_ = NULL;
  values_ = NULL;
}

ValueProto_MapProto::~ValueProto_MapProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ValueProto.MapProto)
  SharedDtor();
}

void ValueProto_MapProto::SharedDtor() {
  if (this != &ValueProto_MapProto_default_instance_.get()) {
    delete keys_;
    delete values_;
  }
}

void ValueProto_MapProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueProto_MapProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValueProto_MapProto_descriptor_;
}

const ValueProto_MapProto& ValueProto_MapProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ValueProto_MapProto> ValueProto_MapProto_default_instance_;

ValueProto_MapProto* ValueProto_MapProto::New(::google::protobuf::Arena* arena) const {
  ValueProto_MapProto* n = new ValueProto_MapProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueProto_MapProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ValueProto.MapProto)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_keys()) {
      if (keys_ != NULL) keys_->::ONNXIR::TensorProto::Clear();
    }
    if (has_values()) {
      if (values_ != NULL) values_->::ONNXIR::TensorProto::Clear();
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ValueProto_MapProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ValueProto.MapProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ONNXIR.TensorProto keys = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_keys()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_values;
        break;
      }

      // optional .ONNXIR.TensorProto values = 2;
      case 2: {
        if (tag == 18) {
         parse_values:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_values()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ValueProto.MapProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ValueProto.MapProto)
  return false;
#undef DO_
}

void ValueProto_MapProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ValueProto.MapProto)
  // optional .ONNXIR.TensorProto keys = 1;
  if (has_keys()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->keys_, output);
  }

  // optional .ONNXIR.TensorProto values = 2;
  if (has_values()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->values_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ValueProto.MapProto)
}

::google::protobuf::uint8* ValueProto_MapProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ValueProto.MapProto)
  // optional .ONNXIR.TensorProto keys = 1;
  if (has_keys()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->keys_, false, target);
  }

  // optional .ONNXIR.TensorProto values = 2;
  if (has_values()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->values_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ValueProto.MapProto)
  return target;
}

size_t ValueProto_MapProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ValueProto.MapProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ONNXIR.TensorProto keys = 1;
    if (has_keys()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->keys_);
    }

    // optional .ONNXIR.TensorProto values = 2;
    if (has_values()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->values_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueProto_MapProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ValueProto.MapProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ValueProto_MapProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto_MapProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ValueProto.MapProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ValueProto.MapProto)
    UnsafeMergeFrom(*source);
  }
}

void ValueProto_MapProto::MergeFrom(const ValueProto_MapProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ValueProto.MapProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ValueProto_MapProto::UnsafeMergeFrom(const ValueProto_MapProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_keys()) {
      mutable_keys()->::ONNXIR::TensorProto::MergeFrom(from.keys());
    }
    if (from.has_values()) {
      mutable_values()->::ONNXIR::TensorProto::MergeFrom(from.values());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ValueProto_MapProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ValueProto.MapProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto_MapProto::CopyFrom(const ValueProto_MapProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ValueProto.MapProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ValueProto_MapProto::IsInitialized() const {

  return true;
}

void ValueProto_MapProto::Swap(ValueProto_MapProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueProto_MapProto::InternalSwap(ValueProto_MapProto* other) {
  std::swap(keys_, other->keys_);
  std::swap(values_, other->values_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueProto_MapProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValueProto_MapProto_descriptor_;
  metadata.reflection = ValueProto_MapProto_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValueProto::kDenseTensorFieldNumber;
const int ValueProto::kSparseTensorFieldNumber;
const int ValueProto::kHandleFieldNumber;
const int ValueProto::kTupleFieldNumber;
const int ValueProto::kSeqFieldNumber;
const int ValueProto::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValueProto::ValueProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ValueProto)
}

void ValueProto::InitAsDefaultInstance() {
  ValueProto_default_oneof_instance_->dense_tensor_ = const_cast< ::ONNXIR::TensorProto*>(
      ::ONNXIR::TensorProto::internal_default_instance());
  ValueProto_default_oneof_instance_->sparse_tensor_ = const_cast< ::ONNXIR::SparseTensorProto*>(
      ::ONNXIR::SparseTensorProto::internal_default_instance());
  ValueProto_default_oneof_instance_->handle_ = const_cast< ::ONNXIR::ValueProto_HandleProto*>(
      ::ONNXIR::ValueProto_HandleProto::internal_default_instance());
  ValueProto_default_oneof_instance_->tuple_ = const_cast< ::ONNXIR::ValueProto_TupleProto*>(
      ::ONNXIR::ValueProto_TupleProto::internal_default_instance());
  ValueProto_default_oneof_instance_->seq_ = const_cast< ::ONNXIR::ValueProto_SequenceProto*>(
      ::ONNXIR::ValueProto_SequenceProto::internal_default_instance());
  ValueProto_default_oneof_instance_->map_ = const_cast< ::ONNXIR::ValueProto_MapProto*>(
      ::ONNXIR::ValueProto_MapProto::internal_default_instance());
}

ValueProto::ValueProto(const ValueProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ValueProto)
}

void ValueProto::SharedCtor() {
  _cached_size_ = 0;
  clear_has_value();
}

ValueProto::~ValueProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ValueProto)
  SharedDtor();
}

void ValueProto::SharedDtor() {
  if (has_value()) {
    clear_value();
  }
}

void ValueProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ValueProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ValueProto_descriptor_;
}

const ValueProto& ValueProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ValueProto> ValueProto_default_instance_;

ValueProto* ValueProto::New(::google::protobuf::Arena* arena) const {
  ValueProto* n = new ValueProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ValueProto::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:ONNXIR.ValueProto)
  switch (value_case()) {
    case kDenseTensor: {
      delete value_.dense_tensor_;
      break;
    }
    case kSparseTensor: {
      delete value_.sparse_tensor_;
      break;
    }
    case kHandle: {
      delete value_.handle_;
      break;
    }
    case kTuple: {
      delete value_.tuple_;
      break;
    }
    case kSeq: {
      delete value_.seq_;
      break;
    }
    case kMap: {
      delete value_.map_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ValueProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ValueProto)
  clear_value();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ValueProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ValueProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ONNXIR.TensorProto dense_tensor = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dense_tensor()));
        } else {
          goto handle_unusual;
        }
        goto after_map;
        break;
      }

      // optional .ONNXIR.SparseTensorProto sparse_tensor = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sparse_tensor()));
        } else {
          goto handle_unusual;
        }
        goto after_map;
        break;
      }

      // optional .ONNXIR.ValueProto.HandleProto handle = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_handle()));
        } else {
          goto handle_unusual;
        }
        goto after_map;
        break;
      }

      // optional .ONNXIR.ValueProto.TupleProto tuple = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_tuple()));
        } else {
          goto handle_unusual;
        }
        goto after_map;
        break;
      }

      // optional .ONNXIR.ValueProto.SequenceProto seq = 5;
      case 5: {
        if (tag == 42) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_seq()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_map;
        break;
      }

      // optional .ONNXIR.ValueProto.MapProto map = 6;
      case 6: {
        if (tag == 50) {
         parse_map:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_map()));
        } else {
          goto handle_unusual;
        }
       after_map:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ValueProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ValueProto)
  return false;
#undef DO_
}

void ValueProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ValueProto)
  switch (value_case()) {
    case kDenseTensor:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        1, *value_.dense_tensor_, output);
      break;
    case kSparseTensor:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        2, *value_.sparse_tensor_, output);
      break;
    case kHandle:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        3, *value_.handle_, output);
      break;
    case kTuple:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        4, *value_.tuple_, output);
      break;
    case kSeq:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        5, *value_.seq_, output);
      break;
    case kMap:
      ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
        6, *value_.map_, output);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ValueProto)
}

::google::protobuf::uint8* ValueProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ValueProto)
  switch (value_case()) {
    case kDenseTensor:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          1, *value_.dense_tensor_, false, target);
      break;
    case kSparseTensor:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          2, *value_.sparse_tensor_, false, target);
      break;
    case kHandle:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          3, *value_.handle_, false, target);
      break;
    case kTuple:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          4, *value_.tuple_, false, target);
      break;
    case kSeq:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          5, *value_.seq_, false, target);
      break;
    case kMap:
      target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessageNoVirtualToArray(
          6, *value_.map_, false, target);
      break;
    default: ;
  }
  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ValueProto)
  return target;
}

size_t ValueProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ValueProto)
  size_t total_size = 0;

  switch (value_case()) {
    // optional .ONNXIR.TensorProto dense_tensor = 1;
    case kDenseTensor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.dense_tensor_);
      break;
    }
    // optional .ONNXIR.SparseTensorProto sparse_tensor = 2;
    case kSparseTensor: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.sparse_tensor_);
      break;
    }
    // optional .ONNXIR.ValueProto.HandleProto handle = 3;
    case kHandle: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.handle_);
      break;
    }
    // optional .ONNXIR.ValueProto.TupleProto tuple = 4;
    case kTuple: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.tuple_);
      break;
    }
    // optional .ONNXIR.ValueProto.SequenceProto seq = 5;
    case kSeq: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.seq_);
      break;
    }
    // optional .ONNXIR.ValueProto.MapProto map = 6;
    case kMap: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *value_.map_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ValueProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ValueProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ValueProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValueProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ValueProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ValueProto)
    UnsafeMergeFrom(*source);
  }
}

void ValueProto::MergeFrom(const ValueProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ValueProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ValueProto::UnsafeMergeFrom(const ValueProto& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.value_case()) {
    case kDenseTensor: {
      mutable_dense_tensor()->::ONNXIR::TensorProto::MergeFrom(from.dense_tensor());
      break;
    }
    case kSparseTensor: {
      mutable_sparse_tensor()->::ONNXIR::SparseTensorProto::MergeFrom(from.sparse_tensor());
      break;
    }
    case kHandle: {
      mutable_handle()->::ONNXIR::ValueProto_HandleProto::MergeFrom(from.handle());
      break;
    }
    case kTuple: {
      mutable_tuple()->::ONNXIR::ValueProto_TupleProto::MergeFrom(from.tuple());
      break;
    }
    case kSeq: {
      mutable_seq()->::ONNXIR::ValueProto_SequenceProto::MergeFrom(from.seq());
      break;
    }
    case kMap: {
      mutable_map()->::ONNXIR::ValueProto_MapProto::MergeFrom(from.map());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ValueProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ValueProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValueProto::CopyFrom(const ValueProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ValueProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ValueProto::IsInitialized() const {

  return true;
}

void ValueProto::Swap(ValueProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValueProto::InternalSwap(ValueProto* other) {
  std::swap(value_, other->value_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ValueProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ValueProto_descriptor_;
  metadata.reflection = ValueProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ValueProto_HandleProto

// optional int64 uid = 1;
bool ValueProto_HandleProto::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ValueProto_HandleProto::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void ValueProto_HandleProto::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ValueProto_HandleProto::clear_uid() {
  uid_ = GOOGLE_LONGLONG(0);
  clear_has_uid();
}
::google::protobuf::int64 ValueProto_HandleProto::uid() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.HandleProto.uid)
  return uid_;
}
void ValueProto_HandleProto::set_uid(::google::protobuf::int64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.ValueProto.HandleProto.uid)
}

inline const ValueProto_HandleProto* ValueProto_HandleProto::internal_default_instance() {
  return &ValueProto_HandleProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto_TupleProto

// repeated .ONNXIR.ValueProto elems = 1;
int ValueProto_TupleProto::elems_size() const {
  return elems_.size();
}
void ValueProto_TupleProto::clear_elems() {
  elems_.Clear();
}
const ::ONNXIR::ValueProto& ValueProto_TupleProto::elems(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.TupleProto.elems)
  return elems_.Get(index);
}
::ONNXIR::ValueProto* ValueProto_TupleProto::mutable_elems(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.TupleProto.elems)
  return elems_.Mutable(index);
}
::ONNXIR::ValueProto* ValueProto_TupleProto::add_elems() {
  // @@protoc_insertion_point(field_add:ONNXIR.ValueProto.TupleProto.elems)
  return elems_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >*
ValueProto_TupleProto::mutable_elems() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.ValueProto.TupleProto.elems)
  return &elems_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >&
ValueProto_TupleProto::elems() const {
  // @@protoc_insertion_point(field_list:ONNXIR.ValueProto.TupleProto.elems)
  return elems_;
}

inline const ValueProto_TupleProto* ValueProto_TupleProto::internal_default_instance() {
  return &ValueProto_TupleProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto_SequenceProto

// repeated .ONNXIR.ValueProto elems = 1;
int ValueProto_SequenceProto::elems_size() const {
  return elems_.size();
}
void ValueProto_SequenceProto::clear_elems() {
  elems_.Clear();
}
const ::ONNXIR::ValueProto& ValueProto_SequenceProto::elems(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_.Get(index);
}
::ONNXIR::ValueProto* ValueProto_SequenceProto::mutable_elems(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_.Mutable(index);
}
::ONNXIR::ValueProto* ValueProto_SequenceProto::add_elems() {
  // @@protoc_insertion_point(field_add:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >*
ValueProto_SequenceProto::mutable_elems() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.ValueProto.SequenceProto.elems)
  return &elems_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ValueProto >&
ValueProto_SequenceProto::elems() const {
  // @@protoc_insertion_point(field_list:ONNXIR.ValueProto.SequenceProto.elems)
  return elems_;
}

inline const ValueProto_SequenceProto* ValueProto_SequenceProto::internal_default_instance() {
  return &ValueProto_SequenceProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto_MapProto

// optional .ONNXIR.TensorProto keys = 1;
bool ValueProto_MapProto::has_keys() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ValueProto_MapProto::set_has_keys() {
  _has_bits_[0] |= 0x00000001u;
}
void ValueProto_MapProto::clear_has_keys() {
  _has_bits_[0] &= ~0x00000001u;
}
void ValueProto_MapProto::clear_keys() {
  if (keys_ != NULL) keys_->::ONNXIR::TensorProto::Clear();
  clear_has_keys();
}
const ::ONNXIR::TensorProto& ValueProto_MapProto::keys() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.MapProto.keys)
  return keys_ != NULL ? *keys_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
::ONNXIR::TensorProto* ValueProto_MapProto::mutable_keys() {
  set_has_keys();
  if (keys_ == NULL) {
    keys_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.MapProto.keys)
  return keys_;
}
::ONNXIR::TensorProto* ValueProto_MapProto::release_keys() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.MapProto.keys)
  clear_has_keys();
  ::ONNXIR::TensorProto* temp = keys_;
  keys_ = NULL;
  return temp;
}
void ValueProto_MapProto::set_allocated_keys(::ONNXIR::TensorProto* keys) {
  delete keys_;
  keys_ = keys;
  if (keys) {
    set_has_keys();
  } else {
    clear_has_keys();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.MapProto.keys)
}

// optional .ONNXIR.TensorProto values = 2;
bool ValueProto_MapProto::has_values() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ValueProto_MapProto::set_has_values() {
  _has_bits_[0] |= 0x00000002u;
}
void ValueProto_MapProto::clear_has_values() {
  _has_bits_[0] &= ~0x00000002u;
}
void ValueProto_MapProto::clear_values() {
  if (values_ != NULL) values_->::ONNXIR::TensorProto::Clear();
  clear_has_values();
}
const ::ONNXIR::TensorProto& ValueProto_MapProto::values() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.MapProto.values)
  return values_ != NULL ? *values_
                         : *::ONNXIR::TensorProto::internal_default_instance();
}
::ONNXIR::TensorProto* ValueProto_MapProto::mutable_values() {
  set_has_values();
  if (values_ == NULL) {
    values_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.MapProto.values)
  return values_;
}
::ONNXIR::TensorProto* ValueProto_MapProto::release_values() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.MapProto.values)
  clear_has_values();
  ::ONNXIR::TensorProto* temp = values_;
  values_ = NULL;
  return temp;
}
void ValueProto_MapProto::set_allocated_values(::ONNXIR::TensorProto* values) {
  delete values_;
  values_ = values;
  if (values) {
    set_has_values();
  } else {
    clear_has_values();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.MapProto.values)
}

inline const ValueProto_MapProto* ValueProto_MapProto::internal_default_instance() {
  return &ValueProto_MapProto_default_instance_.get();
}
// -------------------------------------------------------------------

// ValueProto

// optional .ONNXIR.TensorProto dense_tensor = 1;
bool ValueProto::has_dense_tensor() const {
  return value_case() == kDenseTensor;
}
void ValueProto::set_has_dense_tensor() {
  _oneof_case_[0] = kDenseTensor;
}
void ValueProto::clear_dense_tensor() {
  if (has_dense_tensor()) {
    delete value_.dense_tensor_;
    clear_has_value();
  }
}
 const ::ONNXIR::TensorProto& ValueProto::dense_tensor() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.dense_tensor)
  return has_dense_tensor()
      ? *value_.dense_tensor_
      : ::ONNXIR::TensorProto::default_instance();
}
::ONNXIR::TensorProto* ValueProto::mutable_dense_tensor() {
  if (!has_dense_tensor()) {
    clear_value();
    set_has_dense_tensor();
    value_.dense_tensor_ = new ::ONNXIR::TensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.dense_tensor)
  return value_.dense_tensor_;
}
::ONNXIR::TensorProto* ValueProto::release_dense_tensor() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.dense_tensor)
  if (has_dense_tensor()) {
    clear_has_value();
    ::ONNXIR::TensorProto* temp = value_.dense_tensor_;
    value_.dense_tensor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueProto::set_allocated_dense_tensor(::ONNXIR::TensorProto* dense_tensor) {
  clear_value();
  if (dense_tensor) {
    set_has_dense_tensor();
    value_.dense_tensor_ = dense_tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.dense_tensor)
}

// optional .ONNXIR.SparseTensorProto sparse_tensor = 2;
bool ValueProto::has_sparse_tensor() const {
  return value_case() == kSparseTensor;
}
void ValueProto::set_has_sparse_tensor() {
  _oneof_case_[0] = kSparseTensor;
}
void ValueProto::clear_sparse_tensor() {
  if (has_sparse_tensor()) {
    delete value_.sparse_tensor_;
    clear_has_value();
  }
}
 const ::ONNXIR::SparseTensorProto& ValueProto::sparse_tensor() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.sparse_tensor)
  return has_sparse_tensor()
      ? *value_.sparse_tensor_
      : ::ONNXIR::SparseTensorProto::default_instance();
}
::ONNXIR::SparseTensorProto* ValueProto::mutable_sparse_tensor() {
  if (!has_sparse_tensor()) {
    clear_value();
    set_has_sparse_tensor();
    value_.sparse_tensor_ = new ::ONNXIR::SparseTensorProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.sparse_tensor)
  return value_.sparse_tensor_;
}
::ONNXIR::SparseTensorProto* ValueProto::release_sparse_tensor() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.sparse_tensor)
  if (has_sparse_tensor()) {
    clear_has_value();
    ::ONNXIR::SparseTensorProto* temp = value_.sparse_tensor_;
    value_.sparse_tensor_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueProto::set_allocated_sparse_tensor(::ONNXIR::SparseTensorProto* sparse_tensor) {
  clear_value();
  if (sparse_tensor) {
    set_has_sparse_tensor();
    value_.sparse_tensor_ = sparse_tensor;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.sparse_tensor)
}

// optional .ONNXIR.ValueProto.HandleProto handle = 3;
bool ValueProto::has_handle() const {
  return value_case() == kHandle;
}
void ValueProto::set_has_handle() {
  _oneof_case_[0] = kHandle;
}
void ValueProto::clear_handle() {
  if (has_handle()) {
    delete value_.handle_;
    clear_has_value();
  }
}
 const ::ONNXIR::ValueProto_HandleProto& ValueProto::handle() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.handle)
  return has_handle()
      ? *value_.handle_
      : ::ONNXIR::ValueProto_HandleProto::default_instance();
}
::ONNXIR::ValueProto_HandleProto* ValueProto::mutable_handle() {
  if (!has_handle()) {
    clear_value();
    set_has_handle();
    value_.handle_ = new ::ONNXIR::ValueProto_HandleProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.handle)
  return value_.handle_;
}
::ONNXIR::ValueProto_HandleProto* ValueProto::release_handle() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.handle)
  if (has_handle()) {
    clear_has_value();
    ::ONNXIR::ValueProto_HandleProto* temp = value_.handle_;
    value_.handle_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueProto::set_allocated_handle(::ONNXIR::ValueProto_HandleProto* handle) {
  clear_value();
  if (handle) {
    set_has_handle();
    value_.handle_ = handle;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.handle)
}

// optional .ONNXIR.ValueProto.TupleProto tuple = 4;
bool ValueProto::has_tuple() const {
  return value_case() == kTuple;
}
void ValueProto::set_has_tuple() {
  _oneof_case_[0] = kTuple;
}
void ValueProto::clear_tuple() {
  if (has_tuple()) {
    delete value_.tuple_;
    clear_has_value();
  }
}
 const ::ONNXIR::ValueProto_TupleProto& ValueProto::tuple() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.tuple)
  return has_tuple()
      ? *value_.tuple_
      : ::ONNXIR::ValueProto_TupleProto::default_instance();
}
::ONNXIR::ValueProto_TupleProto* ValueProto::mutable_tuple() {
  if (!has_tuple()) {
    clear_value();
    set_has_tuple();
    value_.tuple_ = new ::ONNXIR::ValueProto_TupleProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.tuple)
  return value_.tuple_;
}
::ONNXIR::ValueProto_TupleProto* ValueProto::release_tuple() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.tuple)
  if (has_tuple()) {
    clear_has_value();
    ::ONNXIR::ValueProto_TupleProto* temp = value_.tuple_;
    value_.tuple_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueProto::set_allocated_tuple(::ONNXIR::ValueProto_TupleProto* tuple) {
  clear_value();
  if (tuple) {
    set_has_tuple();
    value_.tuple_ = tuple;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.tuple)
}

// optional .ONNXIR.ValueProto.SequenceProto seq = 5;
bool ValueProto::has_seq() const {
  return value_case() == kSeq;
}
void ValueProto::set_has_seq() {
  _oneof_case_[0] = kSeq;
}
void ValueProto::clear_seq() {
  if (has_seq()) {
    delete value_.seq_;
    clear_has_value();
  }
}
 const ::ONNXIR::ValueProto_SequenceProto& ValueProto::seq() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.seq)
  return has_seq()
      ? *value_.seq_
      : ::ONNXIR::ValueProto_SequenceProto::default_instance();
}
::ONNXIR::ValueProto_SequenceProto* ValueProto::mutable_seq() {
  if (!has_seq()) {
    clear_value();
    set_has_seq();
    value_.seq_ = new ::ONNXIR::ValueProto_SequenceProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.seq)
  return value_.seq_;
}
::ONNXIR::ValueProto_SequenceProto* ValueProto::release_seq() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.seq)
  if (has_seq()) {
    clear_has_value();
    ::ONNXIR::ValueProto_SequenceProto* temp = value_.seq_;
    value_.seq_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueProto::set_allocated_seq(::ONNXIR::ValueProto_SequenceProto* seq) {
  clear_value();
  if (seq) {
    set_has_seq();
    value_.seq_ = seq;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.seq)
}

// optional .ONNXIR.ValueProto.MapProto map = 6;
bool ValueProto::has_map() const {
  return value_case() == kMap;
}
void ValueProto::set_has_map() {
  _oneof_case_[0] = kMap;
}
void ValueProto::clear_map() {
  if (has_map()) {
    delete value_.map_;
    clear_has_value();
  }
}
 const ::ONNXIR::ValueProto_MapProto& ValueProto::map() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ValueProto.map)
  return has_map()
      ? *value_.map_
      : ::ONNXIR::ValueProto_MapProto::default_instance();
}
::ONNXIR::ValueProto_MapProto* ValueProto::mutable_map() {
  if (!has_map()) {
    clear_value();
    set_has_map();
    value_.map_ = new ::ONNXIR::ValueProto_MapProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ValueProto.map)
  return value_.map_;
}
::ONNXIR::ValueProto_MapProto* ValueProto::release_map() {
  // @@protoc_insertion_point(field_release:ONNXIR.ValueProto.map)
  if (has_map()) {
    clear_has_value();
    ::ONNXIR::ValueProto_MapProto* temp = value_.map_;
    value_.map_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
void ValueProto::set_allocated_map(::ONNXIR::ValueProto_MapProto* map) {
  clear_value();
  if (map) {
    set_has_map();
    value_.map_ = map;
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ValueProto.map)
}

bool ValueProto::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
void ValueProto::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
ValueProto::ValueCase ValueProto::value_case() const {
  return ValueProto::ValueCase(_oneof_case_[0]);
}
inline const ValueProto* ValueProto::internal_default_instance() {
  return &ValueProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParameterDeclProto::kNameFieldNumber;
const int ParameterDeclProto::kTypeFieldNumber;
const int ParameterDeclProto::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParameterDeclProto::ParameterDeclProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.ParameterDeclProto)
}

void ParameterDeclProto::InitAsDefaultInstance() {
  type_ = const_cast< ::ONNXIR::TypeProto*>(
      ::ONNXIR::TypeProto::internal_default_instance());
}

ParameterDeclProto::ParameterDeclProto(const ParameterDeclProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.ParameterDeclProto)
}

void ParameterDeclProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = NULL;
}

ParameterDeclProto::~ParameterDeclProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.ParameterDeclProto)
  SharedDtor();
}

void ParameterDeclProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ParameterDeclProto_default_instance_.get()) {
    delete type_;
  }
}

void ParameterDeclProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParameterDeclProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ParameterDeclProto_descriptor_;
}

const ParameterDeclProto& ParameterDeclProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ParameterDeclProto> ParameterDeclProto_default_instance_;

ParameterDeclProto* ParameterDeclProto::New(::google::protobuf::Arena* arena) const {
  ParameterDeclProto* n = new ParameterDeclProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParameterDeclProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.ParameterDeclProto)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_type()) {
      if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ParameterDeclProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.ParameterDeclProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ParameterDeclProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional .ONNXIR.TypeProto type = 2;
      case 2: {
        if (tag == 18) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 3;
      case 3: {
        if (tag == 26) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.ParameterDeclProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.ParameterDeclProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.ParameterDeclProto)
  return false;
#undef DO_
}

void ParameterDeclProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.ParameterDeclProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ParameterDeclProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .ONNXIR.TypeProto type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->type_, output);
  }

  // optional string doc_string = 3;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ParameterDeclProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->doc_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.ParameterDeclProto)
}

::google::protobuf::uint8* ParameterDeclProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.ParameterDeclProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ParameterDeclProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .ONNXIR.TypeProto type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->type_, false, target);
  }

  // optional string doc_string = 3;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.ParameterDeclProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->doc_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.ParameterDeclProto)
  return target;
}

size_t ParameterDeclProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.ParameterDeclProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .ONNXIR.TypeProto type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->type_);
    }

    // optional string doc_string = 3;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParameterDeclProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.ParameterDeclProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ParameterDeclProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParameterDeclProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.ParameterDeclProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.ParameterDeclProto)
    UnsafeMergeFrom(*source);
  }
}

void ParameterDeclProto::MergeFrom(const ParameterDeclProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.ParameterDeclProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ParameterDeclProto::UnsafeMergeFrom(const ParameterDeclProto& from) {
  GOOGLE_DCHECK(&from != this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_type()) {
      mutable_type()->::ONNXIR::TypeProto::MergeFrom(from.type());
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void ParameterDeclProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.ParameterDeclProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterDeclProto::CopyFrom(const ParameterDeclProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.ParameterDeclProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ParameterDeclProto::IsInitialized() const {

  return true;
}

void ParameterDeclProto::Swap(ParameterDeclProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParameterDeclProto::InternalSwap(ParameterDeclProto* other) {
  name_.Swap(&other->name_);
  std::swap(type_, other->type_);
  doc_string_.Swap(&other->doc_string_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParameterDeclProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ParameterDeclProto_descriptor_;
  metadata.reflection = ParameterDeclProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParameterDeclProto

// optional string name = 1;
bool ParameterDeclProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParameterDeclProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ParameterDeclProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParameterDeclProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ParameterDeclProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ParameterDeclProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParameterDeclProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ParameterDeclProto.name)
}
void ParameterDeclProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ParameterDeclProto.name)
}
void ParameterDeclProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ParameterDeclProto.name)
}
::std::string* ParameterDeclProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ParameterDeclProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParameterDeclProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.ParameterDeclProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParameterDeclProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ParameterDeclProto.name)
}

// optional .ONNXIR.TypeProto type = 2;
bool ParameterDeclProto::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParameterDeclProto::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
void ParameterDeclProto::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParameterDeclProto::clear_type() {
  if (type_ != NULL) type_->::ONNXIR::TypeProto::Clear();
  clear_has_type();
}
const ::ONNXIR::TypeProto& ParameterDeclProto::type() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ParameterDeclProto.type)
  return type_ != NULL ? *type_
                         : *::ONNXIR::TypeProto::internal_default_instance();
}
::ONNXIR::TypeProto* ParameterDeclProto::mutable_type() {
  set_has_type();
  if (type_ == NULL) {
    type_ = new ::ONNXIR::TypeProto;
  }
  // @@protoc_insertion_point(field_mutable:ONNXIR.ParameterDeclProto.type)
  return type_;
}
::ONNXIR::TypeProto* ParameterDeclProto::release_type() {
  // @@protoc_insertion_point(field_release:ONNXIR.ParameterDeclProto.type)
  clear_has_type();
  ::ONNXIR::TypeProto* temp = type_;
  type_ = NULL;
  return temp;
}
void ParameterDeclProto::set_allocated_type(::ONNXIR::TypeProto* type) {
  delete type_;
  type_ = type;
  if (type) {
    set_has_type();
  } else {
    clear_has_type();
  }
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ParameterDeclProto.type)
}

// optional string doc_string = 3;
bool ParameterDeclProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ParameterDeclProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000004u;
}
void ParameterDeclProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000004u;
}
void ParameterDeclProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& ParameterDeclProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.ParameterDeclProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParameterDeclProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.ParameterDeclProto.doc_string)
}
void ParameterDeclProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.ParameterDeclProto.doc_string)
}
void ParameterDeclProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.ParameterDeclProto.doc_string)
}
::std::string* ParameterDeclProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.ParameterDeclProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParameterDeclProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.ParameterDeclProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParameterDeclProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.ParameterDeclProto.doc_string)
}

inline const ParameterDeclProto* ParameterDeclProto::internal_default_instance() {
  return &ParameterDeclProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FunctionDefProto::kNameFieldNumber;
const int FunctionDefProto::kInputParamsFieldNumber;
const int FunctionDefProto::kOutputParamsFieldNumber;
const int FunctionDefProto::kNodeFieldNumber;
const int FunctionDefProto::kAttrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FunctionDefProto::FunctionDefProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.FunctionDefProto)
}

void FunctionDefProto::InitAsDefaultInstance() {
}

FunctionDefProto::FunctionDefProto(const FunctionDefProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.FunctionDefProto)
}

void FunctionDefProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

FunctionDefProto::~FunctionDefProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.FunctionDefProto)
  SharedDtor();
}

void FunctionDefProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FunctionDefProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FunctionDefProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FunctionDefProto_descriptor_;
}

const FunctionDefProto& FunctionDefProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<FunctionDefProto> FunctionDefProto_default_instance_;

FunctionDefProto* FunctionDefProto::New(::google::protobuf::Arena* arena) const {
  FunctionDefProto* n = new FunctionDefProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FunctionDefProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.FunctionDefProto)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  input_params_.Clear();
  output_params_.Clear();
  node_.Clear();
  attr_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool FunctionDefProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.FunctionDefProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.FunctionDefProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_input_params;
        break;
      }

      // repeated .ONNXIR.ParameterDeclProto input_params = 2;
      case 2: {
        if (tag == 18) {
         parse_input_params:
          DO_(input->IncrementRecursionDepth());
         parse_loop_input_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_input_params;
        if (input->ExpectTag(26)) goto parse_loop_output_params;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.ParameterDeclProto output_params = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_output_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_output_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_output_params;
        if (input->ExpectTag(34)) goto parse_loop_node;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.NodeProto node = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_node()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_node;
        if (input->ExpectTag(42)) goto parse_loop_attr;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.AttributeProto attr = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_attr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_attr()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_attr;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.FunctionDefProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.FunctionDefProto)
  return false;
#undef DO_
}

void FunctionDefProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.FunctionDefProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.FunctionDefProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .ONNXIR.ParameterDeclProto input_params = 2;
  for (unsigned int i = 0, n = this->input_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->input_params(i), output);
  }

  // repeated .ONNXIR.ParameterDeclProto output_params = 3;
  for (unsigned int i = 0, n = this->output_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->output_params(i), output);
  }

  // repeated .ONNXIR.NodeProto node = 4;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->node(i), output);
  }

  // repeated .ONNXIR.AttributeProto attr = 5;
  for (unsigned int i = 0, n = this->attr_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->attr(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.FunctionDefProto)
}

::google::protobuf::uint8* FunctionDefProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.FunctionDefProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.FunctionDefProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .ONNXIR.ParameterDeclProto input_params = 2;
  for (unsigned int i = 0, n = this->input_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->input_params(i), false, target);
  }

  // repeated .ONNXIR.ParameterDeclProto output_params = 3;
  for (unsigned int i = 0, n = this->output_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->output_params(i), false, target);
  }

  // repeated .ONNXIR.NodeProto node = 4;
  for (unsigned int i = 0, n = this->node_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->node(i), false, target);
  }

  // repeated .ONNXIR.AttributeProto attr = 5;
  for (unsigned int i = 0, n = this->attr_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->attr(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.FunctionDefProto)
  return target;
}

size_t FunctionDefProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.FunctionDefProto)
  size_t total_size = 0;

  // optional string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // repeated .ONNXIR.ParameterDeclProto input_params = 2;
  {
    unsigned int count = this->input_params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input_params(i));
    }
  }

  // repeated .ONNXIR.ParameterDeclProto output_params = 3;
  {
    unsigned int count = this->output_params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output_params(i));
    }
  }

  // repeated .ONNXIR.NodeProto node = 4;
  {
    unsigned int count = this->node_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node(i));
    }
  }

  // repeated .ONNXIR.AttributeProto attr = 5;
  {
    unsigned int count = this->attr_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attr(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FunctionDefProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.FunctionDefProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const FunctionDefProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FunctionDefProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.FunctionDefProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.FunctionDefProto)
    UnsafeMergeFrom(*source);
  }
}

void FunctionDefProto::MergeFrom(const FunctionDefProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.FunctionDefProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void FunctionDefProto::UnsafeMergeFrom(const FunctionDefProto& from) {
  GOOGLE_DCHECK(&from != this);
  input_params_.MergeFrom(from.input_params_);
  output_params_.MergeFrom(from.output_params_);
  node_.MergeFrom(from.node_);
  attr_.MergeFrom(from.attr_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void FunctionDefProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.FunctionDefProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FunctionDefProto::CopyFrom(const FunctionDefProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.FunctionDefProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool FunctionDefProto::IsInitialized() const {

  return true;
}

void FunctionDefProto::Swap(FunctionDefProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FunctionDefProto::InternalSwap(FunctionDefProto* other) {
  name_.Swap(&other->name_);
  input_params_.UnsafeArenaSwap(&other->input_params_);
  output_params_.UnsafeArenaSwap(&other->output_params_);
  node_.UnsafeArenaSwap(&other->node_);
  attr_.UnsafeArenaSwap(&other->attr_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FunctionDefProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FunctionDefProto_descriptor_;
  metadata.reflection = FunctionDefProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FunctionDefProto

// optional string name = 1;
bool FunctionDefProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FunctionDefProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void FunctionDefProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void FunctionDefProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& FunctionDefProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FunctionDefProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.FunctionDefProto.name)
}
void FunctionDefProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.FunctionDefProto.name)
}
void FunctionDefProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.FunctionDefProto.name)
}
::std::string* FunctionDefProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FunctionDefProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.FunctionDefProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FunctionDefProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.FunctionDefProto.name)
}

// repeated .ONNXIR.ParameterDeclProto input_params = 2;
int FunctionDefProto::input_params_size() const {
  return input_params_.size();
}
void FunctionDefProto::clear_input_params() {
  input_params_.Clear();
}
const ::ONNXIR::ParameterDeclProto& FunctionDefProto::input_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.input_params)
  return input_params_.Get(index);
}
::ONNXIR::ParameterDeclProto* FunctionDefProto::mutable_input_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.input_params)
  return input_params_.Mutable(index);
}
::ONNXIR::ParameterDeclProto* FunctionDefProto::add_input_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.input_params)
  return input_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
FunctionDefProto::mutable_input_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.input_params)
  return &input_params_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
FunctionDefProto::input_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.input_params)
  return input_params_;
}

// repeated .ONNXIR.ParameterDeclProto output_params = 3;
int FunctionDefProto::output_params_size() const {
  return output_params_.size();
}
void FunctionDefProto::clear_output_params() {
  output_params_.Clear();
}
const ::ONNXIR::ParameterDeclProto& FunctionDefProto::output_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.output_params)
  return output_params_.Get(index);
}
::ONNXIR::ParameterDeclProto* FunctionDefProto::mutable_output_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.output_params)
  return output_params_.Mutable(index);
}
::ONNXIR::ParameterDeclProto* FunctionDefProto::add_output_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.output_params)
  return output_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
FunctionDefProto::mutable_output_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.output_params)
  return &output_params_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
FunctionDefProto::output_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.output_params)
  return output_params_;
}

// repeated .ONNXIR.NodeProto node = 4;
int FunctionDefProto::node_size() const {
  return node_.size();
}
void FunctionDefProto::clear_node() {
  node_.Clear();
}
const ::ONNXIR::NodeProto& FunctionDefProto::node(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.node)
  return node_.Get(index);
}
::ONNXIR::NodeProto* FunctionDefProto::mutable_node(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.node)
  return node_.Mutable(index);
}
::ONNXIR::NodeProto* FunctionDefProto::add_node() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.node)
  return node_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >*
FunctionDefProto::mutable_node() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.node)
  return &node_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::NodeProto >&
FunctionDefProto::node() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.node)
  return node_;
}

// repeated .ONNXIR.AttributeProto attr = 5;
int FunctionDefProto::attr_size() const {
  return attr_.size();
}
void FunctionDefProto::clear_attr() {
  attr_.Clear();
}
const ::ONNXIR::AttributeProto& FunctionDefProto::attr(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.FunctionDefProto.attr)
  return attr_.Get(index);
}
::ONNXIR::AttributeProto* FunctionDefProto::mutable_attr(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.FunctionDefProto.attr)
  return attr_.Mutable(index);
}
::ONNXIR::AttributeProto* FunctionDefProto::add_attr() {
  // @@protoc_insertion_point(field_add:ONNXIR.FunctionDefProto.attr)
  return attr_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >*
FunctionDefProto::mutable_attr() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.FunctionDefProto.attr)
  return &attr_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::AttributeProto >&
FunctionDefProto::attr() const {
  // @@protoc_insertion_point(field_list:ONNXIR.FunctionDefProto.attr)
  return attr_;
}

inline const FunctionDefProto* FunctionDefProto::internal_default_instance() {
  return &FunctionDefProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignatureDeclProto::kInputParamsFieldNumber;
const int SignatureDeclProto::kOutputParamsFieldNumber;
const int SignatureDeclProto::kInputAttributesFieldNumber;
const int SignatureDeclProto::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignatureDeclProto::SignatureDeclProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.SignatureDeclProto)
}

void SignatureDeclProto::InitAsDefaultInstance() {
}

SignatureDeclProto::SignatureDeclProto(const SignatureDeclProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.SignatureDeclProto)
}

void SignatureDeclProto::SharedCtor() {
  _cached_size_ = 0;
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignatureDeclProto::~SignatureDeclProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.SignatureDeclProto)
  SharedDtor();
}

void SignatureDeclProto::SharedDtor() {
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignatureDeclProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignatureDeclProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SignatureDeclProto_descriptor_;
}

const SignatureDeclProto& SignatureDeclProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SignatureDeclProto> SignatureDeclProto_default_instance_;

SignatureDeclProto* SignatureDeclProto::New(::google::protobuf::Arena* arena) const {
  SignatureDeclProto* n = new SignatureDeclProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignatureDeclProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.SignatureDeclProto)
  if (has_doc_string()) {
    doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  input_params_.Clear();
  output_params_.Clear();
  input_attributes_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SignatureDeclProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.SignatureDeclProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ONNXIR.ParameterDeclProto input_params = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_input_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_input_params;
        if (input->ExpectTag(18)) goto parse_loop_output_params;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.ParameterDeclProto output_params = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_output_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_output_params()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_output_params;
        if (input->ExpectTag(26)) goto parse_loop_input_attributes;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.ParameterDeclProto input_attributes = 3;
      case 3: {
        if (tag == 26) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_input_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_input_attributes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_input_attributes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(34)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 4;
      case 4: {
        if (tag == 34) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.SignatureDeclProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.SignatureDeclProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.SignatureDeclProto)
  return false;
#undef DO_
}

void SignatureDeclProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.SignatureDeclProto)
  // repeated .ONNXIR.ParameterDeclProto input_params = 1;
  for (unsigned int i = 0, n = this->input_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->input_params(i), output);
  }

  // repeated .ONNXIR.ParameterDeclProto output_params = 2;
  for (unsigned int i = 0, n = this->output_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->output_params(i), output);
  }

  // repeated .ONNXIR.ParameterDeclProto input_attributes = 3;
  for (unsigned int i = 0, n = this->input_attributes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->input_attributes(i), output);
  }

  // optional string doc_string = 4;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.SignatureDeclProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->doc_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.SignatureDeclProto)
}

::google::protobuf::uint8* SignatureDeclProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.SignatureDeclProto)
  // repeated .ONNXIR.ParameterDeclProto input_params = 1;
  for (unsigned int i = 0, n = this->input_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->input_params(i), false, target);
  }

  // repeated .ONNXIR.ParameterDeclProto output_params = 2;
  for (unsigned int i = 0, n = this->output_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->output_params(i), false, target);
  }

  // repeated .ONNXIR.ParameterDeclProto input_attributes = 3;
  for (unsigned int i = 0, n = this->input_attributes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->input_attributes(i), false, target);
  }

  // optional string doc_string = 4;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.SignatureDeclProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->doc_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.SignatureDeclProto)
  return target;
}

size_t SignatureDeclProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.SignatureDeclProto)
  size_t total_size = 0;

  // optional string doc_string = 4;
  if (has_doc_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc_string());
  }

  // repeated .ONNXIR.ParameterDeclProto input_params = 1;
  {
    unsigned int count = this->input_params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input_params(i));
    }
  }

  // repeated .ONNXIR.ParameterDeclProto output_params = 2;
  {
    unsigned int count = this->output_params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output_params(i));
    }
  }

  // repeated .ONNXIR.ParameterDeclProto input_attributes = 3;
  {
    unsigned int count = this->input_attributes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->input_attributes(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignatureDeclProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.SignatureDeclProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SignatureDeclProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignatureDeclProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.SignatureDeclProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.SignatureDeclProto)
    UnsafeMergeFrom(*source);
  }
}

void SignatureDeclProto::MergeFrom(const SignatureDeclProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.SignatureDeclProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SignatureDeclProto::UnsafeMergeFrom(const SignatureDeclProto& from) {
  GOOGLE_DCHECK(&from != this);
  input_params_.MergeFrom(from.input_params_);
  output_params_.MergeFrom(from.output_params_);
  input_attributes_.MergeFrom(from.input_attributes_);
  if (from._has_bits_[3 / 32] & (0xffu << (3 % 32))) {
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void SignatureDeclProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.SignatureDeclProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignatureDeclProto::CopyFrom(const SignatureDeclProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.SignatureDeclProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SignatureDeclProto::IsInitialized() const {

  return true;
}

void SignatureDeclProto::Swap(SignatureDeclProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignatureDeclProto::InternalSwap(SignatureDeclProto* other) {
  input_params_.UnsafeArenaSwap(&other->input_params_);
  output_params_.UnsafeArenaSwap(&other->output_params_);
  input_attributes_.UnsafeArenaSwap(&other->input_attributes_);
  doc_string_.Swap(&other->doc_string_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignatureDeclProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SignatureDeclProto_descriptor_;
  metadata.reflection = SignatureDeclProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignatureDeclProto

// repeated .ONNXIR.ParameterDeclProto input_params = 1;
int SignatureDeclProto::input_params_size() const {
  return input_params_.size();
}
void SignatureDeclProto::clear_input_params() {
  input_params_.Clear();
}
const ::ONNXIR::ParameterDeclProto& SignatureDeclProto::input_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.input_params)
  return input_params_.Get(index);
}
::ONNXIR::ParameterDeclProto* SignatureDeclProto::mutable_input_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.input_params)
  return input_params_.Mutable(index);
}
::ONNXIR::ParameterDeclProto* SignatureDeclProto::add_input_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.SignatureDeclProto.input_params)
  return input_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
SignatureDeclProto::mutable_input_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SignatureDeclProto.input_params)
  return &input_params_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
SignatureDeclProto::input_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SignatureDeclProto.input_params)
  return input_params_;
}

// repeated .ONNXIR.ParameterDeclProto output_params = 2;
int SignatureDeclProto::output_params_size() const {
  return output_params_.size();
}
void SignatureDeclProto::clear_output_params() {
  output_params_.Clear();
}
const ::ONNXIR::ParameterDeclProto& SignatureDeclProto::output_params(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.output_params)
  return output_params_.Get(index);
}
::ONNXIR::ParameterDeclProto* SignatureDeclProto::mutable_output_params(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.output_params)
  return output_params_.Mutable(index);
}
::ONNXIR::ParameterDeclProto* SignatureDeclProto::add_output_params() {
  // @@protoc_insertion_point(field_add:ONNXIR.SignatureDeclProto.output_params)
  return output_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
SignatureDeclProto::mutable_output_params() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SignatureDeclProto.output_params)
  return &output_params_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
SignatureDeclProto::output_params() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SignatureDeclProto.output_params)
  return output_params_;
}

// repeated .ONNXIR.ParameterDeclProto input_attributes = 3;
int SignatureDeclProto::input_attributes_size() const {
  return input_attributes_.size();
}
void SignatureDeclProto::clear_input_attributes() {
  input_attributes_.Clear();
}
const ::ONNXIR::ParameterDeclProto& SignatureDeclProto::input_attributes(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_.Get(index);
}
::ONNXIR::ParameterDeclProto* SignatureDeclProto::mutable_input_attributes(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_.Mutable(index);
}
::ONNXIR::ParameterDeclProto* SignatureDeclProto::add_input_attributes() {
  // @@protoc_insertion_point(field_add:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >*
SignatureDeclProto::mutable_input_attributes() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.SignatureDeclProto.input_attributes)
  return &input_attributes_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::ParameterDeclProto >&
SignatureDeclProto::input_attributes() const {
  // @@protoc_insertion_point(field_list:ONNXIR.SignatureDeclProto.input_attributes)
  return input_attributes_;
}

// optional string doc_string = 4;
bool SignatureDeclProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SignatureDeclProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000008u;
}
void SignatureDeclProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000008u;
}
void SignatureDeclProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& SignatureDeclProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.SignatureDeclProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignatureDeclProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.SignatureDeclProto.doc_string)
}
void SignatureDeclProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.SignatureDeclProto.doc_string)
}
void SignatureDeclProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.SignatureDeclProto.doc_string)
}
::std::string* SignatureDeclProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.SignatureDeclProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignatureDeclProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.SignatureDeclProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignatureDeclProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.SignatureDeclProto.doc_string)
}

inline const SignatureDeclProto* SignatureDeclProto::internal_default_instance() {
  return &SignatureDeclProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OperatorDeclProto::kNameFieldNumber;
const int OperatorDeclProto::kSignatureFieldNumber;
const int OperatorDeclProto::kDocStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OperatorDeclProto::OperatorDeclProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.OperatorDeclProto)
}

void OperatorDeclProto::InitAsDefaultInstance() {
}

OperatorDeclProto::OperatorDeclProto(const OperatorDeclProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.OperatorDeclProto)
}

void OperatorDeclProto::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OperatorDeclProto::~OperatorDeclProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.OperatorDeclProto)
  SharedDtor();
}

void OperatorDeclProto::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OperatorDeclProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OperatorDeclProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OperatorDeclProto_descriptor_;
}

const OperatorDeclProto& OperatorDeclProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<OperatorDeclProto> OperatorDeclProto_default_instance_;

OperatorDeclProto* OperatorDeclProto::New(::google::protobuf::Arena* arena) const {
  OperatorDeclProto* n = new OperatorDeclProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OperatorDeclProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.OperatorDeclProto)
  if (_has_bits_[0 / 32] & 5u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_doc_string()) {
      doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  signature_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool OperatorDeclProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.OperatorDeclProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.OperatorDeclProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_signature;
        break;
      }

      // repeated .ONNXIR.SignatureDeclProto signature = 2;
      case 2: {
        if (tag == 18) {
         parse_signature:
          DO_(input->IncrementRecursionDepth());
         parse_loop_signature:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_signature()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_signature;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 3;
      case 3: {
        if (tag == 26) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.OperatorDeclProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.OperatorDeclProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.OperatorDeclProto)
  return false;
#undef DO_
}

void OperatorDeclProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.OperatorDeclProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.OperatorDeclProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .ONNXIR.SignatureDeclProto signature = 2;
  for (unsigned int i = 0, n = this->signature_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->signature(i), output);
  }

  // optional string doc_string = 3;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.OperatorDeclProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->doc_string(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.OperatorDeclProto)
}

::google::protobuf::uint8* OperatorDeclProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.OperatorDeclProto)
  // optional string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.OperatorDeclProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .ONNXIR.SignatureDeclProto signature = 2;
  for (unsigned int i = 0, n = this->signature_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->signature(i), false, target);
  }

  // optional string doc_string = 3;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.OperatorDeclProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->doc_string(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.OperatorDeclProto)
  return target;
}

size_t OperatorDeclProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.OperatorDeclProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 5u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string doc_string = 3;
    if (has_doc_string()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->doc_string());
    }

  }
  // repeated .ONNXIR.SignatureDeclProto signature = 2;
  {
    unsigned int count = this->signature_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->signature(i));
    }
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OperatorDeclProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.OperatorDeclProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const OperatorDeclProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OperatorDeclProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.OperatorDeclProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.OperatorDeclProto)
    UnsafeMergeFrom(*source);
  }
}

void OperatorDeclProto::MergeFrom(const OperatorDeclProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.OperatorDeclProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void OperatorDeclProto::UnsafeMergeFrom(const OperatorDeclProto& from) {
  GOOGLE_DCHECK(&from != this);
  signature_.MergeFrom(from.signature_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void OperatorDeclProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.OperatorDeclProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OperatorDeclProto::CopyFrom(const OperatorDeclProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.OperatorDeclProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool OperatorDeclProto::IsInitialized() const {

  return true;
}

void OperatorDeclProto::Swap(OperatorDeclProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OperatorDeclProto::InternalSwap(OperatorDeclProto* other) {
  name_.Swap(&other->name_);
  signature_.UnsafeArenaSwap(&other->signature_);
  doc_string_.Swap(&other->doc_string_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OperatorDeclProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OperatorDeclProto_descriptor_;
  metadata.reflection = OperatorDeclProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OperatorDeclProto

// optional string name = 1;
bool OperatorDeclProto::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OperatorDeclProto::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void OperatorDeclProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void OperatorDeclProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& OperatorDeclProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.OperatorDeclProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorDeclProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.OperatorDeclProto.name)
}
void OperatorDeclProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.OperatorDeclProto.name)
}
void OperatorDeclProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.OperatorDeclProto.name)
}
::std::string* OperatorDeclProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.OperatorDeclProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorDeclProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.OperatorDeclProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorDeclProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.OperatorDeclProto.name)
}

// repeated .ONNXIR.SignatureDeclProto signature = 2;
int OperatorDeclProto::signature_size() const {
  return signature_.size();
}
void OperatorDeclProto::clear_signature() {
  signature_.Clear();
}
const ::ONNXIR::SignatureDeclProto& OperatorDeclProto::signature(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.OperatorDeclProto.signature)
  return signature_.Get(index);
}
::ONNXIR::SignatureDeclProto* OperatorDeclProto::mutable_signature(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.OperatorDeclProto.signature)
  return signature_.Mutable(index);
}
::ONNXIR::SignatureDeclProto* OperatorDeclProto::add_signature() {
  // @@protoc_insertion_point(field_add:ONNXIR.OperatorDeclProto.signature)
  return signature_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::SignatureDeclProto >*
OperatorDeclProto::mutable_signature() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.OperatorDeclProto.signature)
  return &signature_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::SignatureDeclProto >&
OperatorDeclProto::signature() const {
  // @@protoc_insertion_point(field_list:ONNXIR.OperatorDeclProto.signature)
  return signature_;
}

// optional string doc_string = 3;
bool OperatorDeclProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OperatorDeclProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000004u;
}
void OperatorDeclProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000004u;
}
void OperatorDeclProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& OperatorDeclProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.OperatorDeclProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorDeclProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.OperatorDeclProto.doc_string)
}
void OperatorDeclProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.OperatorDeclProto.doc_string)
}
void OperatorDeclProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.OperatorDeclProto.doc_string)
}
::std::string* OperatorDeclProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.OperatorDeclProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OperatorDeclProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.OperatorDeclProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OperatorDeclProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.OperatorDeclProto.doc_string)
}

inline const OperatorDeclProto* OperatorDeclProto::internal_default_instance() {
  return &OperatorDeclProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LibraryProto::kIrVersionFieldNumber;
const int LibraryProto::kProducerVersionFieldNumber;
const int LibraryProto::kProducerTagFieldNumber;
const int LibraryProto::kModelVersionFieldNumber;
const int LibraryProto::kModelAuthorFieldNumber;
const int LibraryProto::kModelLicenseFieldNumber;
const int LibraryProto::kNameFieldNumber;
const int LibraryProto::kDomainFieldNumber;
const int LibraryProto::kDocStringFieldNumber;
const int LibraryProto::kOperatorFieldNumber;
const int LibraryProto::kFunctionFieldNumber;
const int LibraryProto::kImportedLibrariesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LibraryProto::LibraryProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_graph_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:ONNXIR.LibraryProto)
}

void LibraryProto::InitAsDefaultInstance() {
}

LibraryProto::LibraryProto(const LibraryProto& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ONNXIR.LibraryProto)
}

void LibraryProto::SharedCtor() {
  _cached_size_ = 0;
  producer_tag_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_license_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ir_version_, 0, reinterpret_cast<char*>(&model_version_) -
    reinterpret_cast<char*>(&ir_version_) + sizeof(model_version_));
}

LibraryProto::~LibraryProto() {
  // @@protoc_insertion_point(destructor:ONNXIR.LibraryProto)
  SharedDtor();
}

void LibraryProto::SharedDtor() {
  producer_tag_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  model_license_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LibraryProto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LibraryProto::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LibraryProto_descriptor_;
}

const LibraryProto& LibraryProto::default_instance() {
  protobuf_InitDefaults_graph_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LibraryProto> LibraryProto_default_instance_;

LibraryProto* LibraryProto::New(::google::protobuf::Arena* arena) const {
  LibraryProto* n = new LibraryProto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LibraryProto::Clear() {
// @@protoc_insertion_point(message_clear_start:ONNXIR.LibraryProto)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(LibraryProto, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<LibraryProto*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(ir_version_, model_version_);
    if (has_producer_tag()) {
      producer_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_model_author()) {
      model_author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_model_license()) {
      model_license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_domain()) {
      domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (has_doc_string()) {
    doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }

#undef ZR_HELPER_
#undef ZR_

  operator__.Clear();
  function_.Clear();
  imported_libraries_.Clear();
  _has_bits_.Clear();
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LibraryProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ONNXIR.LibraryProto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 ir_version = 1;
      case 1: {
        if (tag == 8) {
          set_has_ir_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &ir_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_producer_version;
        break;
      }

      // optional int64 producer_version = 2;
      case 2: {
        if (tag == 16) {
         parse_producer_version:
          set_has_producer_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &producer_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_producer_tag;
        break;
      }

      // optional string producer_tag = 3;
      case 3: {
        if (tag == 26) {
         parse_producer_tag:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_producer_tag()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->producer_tag().data(), this->producer_tag().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.LibraryProto.producer_tag");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_model_version;
        break;
      }

      // optional int64 model_version = 4;
      case 4: {
        if (tag == 32) {
         parse_model_version:
          set_has_model_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &model_version_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_model_author;
        break;
      }

      // optional string model_author = 5;
      case 5: {
        if (tag == 42) {
         parse_model_author:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_author()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_author().data(), this->model_author().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.LibraryProto.model_author");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_model_license;
        break;
      }

      // optional string model_license = 6;
      case 6: {
        if (tag == 50) {
         parse_model_license:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_model_license()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->model_license().data(), this->model_license().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.LibraryProto.model_license");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_name;
        break;
      }

      // optional string name = 7;
      case 7: {
        if (tag == 58) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.LibraryProto.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_domain;
        break;
      }

      // optional string domain = 8;
      case 8: {
        if (tag == 66) {
         parse_domain:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->domain().data(), this->domain().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.LibraryProto.domain");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_doc_string;
        break;
      }

      // optional string doc_string = 9;
      case 9: {
        if (tag == 74) {
         parse_doc_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_string()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->doc_string().data(), this->doc_string().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.LibraryProto.doc_string");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_operator;
        break;
      }

      // repeated .ONNXIR.OperatorDeclProto operator = 10;
      case 10: {
        if (tag == 82) {
         parse_operator:
          DO_(input->IncrementRecursionDepth());
         parse_loop_operator:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_operator_()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_loop_operator;
        if (input->ExpectTag(90)) goto parse_loop_function;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ONNXIR.FunctionDefProto function = 11;
      case 11: {
        if (tag == 90) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_function:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_function()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_loop_function;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(98)) goto parse_imported_libraries;
        break;
      }

      // repeated string imported_libraries = 12;
      case 12: {
        if (tag == 98) {
         parse_imported_libraries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_imported_libraries()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imported_libraries(this->imported_libraries_size() - 1).data(),
            this->imported_libraries(this->imported_libraries_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ONNXIR.LibraryProto.imported_libraries");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_imported_libraries;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ONNXIR.LibraryProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ONNXIR.LibraryProto)
  return false;
#undef DO_
}

void LibraryProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ONNXIR.LibraryProto)
  // optional int64 ir_version = 1;
  if (has_ir_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->ir_version(), output);
  }

  // optional int64 producer_version = 2;
  if (has_producer_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->producer_version(), output);
  }

  // optional string producer_tag = 3;
  if (has_producer_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_tag().data(), this->producer_tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.producer_tag");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->producer_tag(), output);
  }

  // optional int64 model_version = 4;
  if (has_model_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->model_version(), output);
  }

  // optional string model_author = 5;
  if (has_model_author()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_author().data(), this->model_author().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.model_author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->model_author(), output);
  }

  // optional string model_license = 6;
  if (has_model_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_license().data(), this->model_license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.model_license");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->model_license(), output);
  }

  // optional string name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->name(), output);
  }

  // optional string domain = 8;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->domain(), output);
  }

  // optional string doc_string = 9;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.doc_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->doc_string(), output);
  }

  // repeated .ONNXIR.OperatorDeclProto operator = 10;
  for (unsigned int i = 0, n = this->operator__size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->operator_(i), output);
  }

  // repeated .ONNXIR.FunctionDefProto function = 11;
  for (unsigned int i = 0, n = this->function_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->function(i), output);
  }

  // repeated string imported_libraries = 12;
  for (int i = 0; i < this->imported_libraries_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imported_libraries(i).data(), this->imported_libraries(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.imported_libraries");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      12, this->imported_libraries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ONNXIR.LibraryProto)
}

::google::protobuf::uint8* LibraryProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ONNXIR.LibraryProto)
  // optional int64 ir_version = 1;
  if (has_ir_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->ir_version(), target);
  }

  // optional int64 producer_version = 2;
  if (has_producer_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->producer_version(), target);
  }

  // optional string producer_tag = 3;
  if (has_producer_tag()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->producer_tag().data(), this->producer_tag().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.producer_tag");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->producer_tag(), target);
  }

  // optional int64 model_version = 4;
  if (has_model_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->model_version(), target);
  }

  // optional string model_author = 5;
  if (has_model_author()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_author().data(), this->model_author().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.model_author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->model_author(), target);
  }

  // optional string model_license = 6;
  if (has_model_license()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->model_license().data(), this->model_license().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.model_license");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->model_license(), target);
  }

  // optional string name = 7;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->name(), target);
  }

  // optional string domain = 8;
  if (has_domain()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->domain().data(), this->domain().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->domain(), target);
  }

  // optional string doc_string = 9;
  if (has_doc_string()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->doc_string().data(), this->doc_string().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.doc_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->doc_string(), target);
  }

  // repeated .ONNXIR.OperatorDeclProto operator = 10;
  for (unsigned int i = 0, n = this->operator__size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->operator_(i), false, target);
  }

  // repeated .ONNXIR.FunctionDefProto function = 11;
  for (unsigned int i = 0, n = this->function_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->function(i), false, target);
  }

  // repeated string imported_libraries = 12;
  for (int i = 0; i < this->imported_libraries_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imported_libraries(i).data(), this->imported_libraries(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ONNXIR.LibraryProto.imported_libraries");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(12, this->imported_libraries(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ONNXIR.LibraryProto)
  return target;
}

size_t LibraryProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ONNXIR.LibraryProto)
  size_t total_size = 0;

  if (_has_bits_[0 / 32] & 255u) {
    // optional int64 ir_version = 1;
    if (has_ir_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->ir_version());
    }

    // optional int64 producer_version = 2;
    if (has_producer_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->producer_version());
    }

    // optional string producer_tag = 3;
    if (has_producer_tag()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->producer_tag());
    }

    // optional int64 model_version = 4;
    if (has_model_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->model_version());
    }

    // optional string model_author = 5;
    if (has_model_author()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_author());
    }

    // optional string model_license = 6;
    if (has_model_license()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->model_license());
    }

    // optional string name = 7;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string domain = 8;
    if (has_domain()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->domain());
    }

  }
  // optional string doc_string = 9;
  if (has_doc_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc_string());
  }

  // repeated .ONNXIR.OperatorDeclProto operator = 10;
  {
    unsigned int count = this->operator__size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->operator_(i));
    }
  }

  // repeated .ONNXIR.FunctionDefProto function = 11;
  {
    unsigned int count = this->function_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function(i));
    }
  }

  // repeated string imported_libraries = 12;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->imported_libraries_size());
  for (int i = 0; i < this->imported_libraries_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->imported_libraries(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LibraryProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ONNXIR.LibraryProto)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LibraryProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LibraryProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ONNXIR.LibraryProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ONNXIR.LibraryProto)
    UnsafeMergeFrom(*source);
  }
}

void LibraryProto::MergeFrom(const LibraryProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ONNXIR.LibraryProto)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LibraryProto::UnsafeMergeFrom(const LibraryProto& from) {
  GOOGLE_DCHECK(&from != this);
  operator__.MergeFrom(from.operator__);
  function_.MergeFrom(from.function_);
  imported_libraries_.UnsafeMergeFrom(from.imported_libraries_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ir_version()) {
      set_ir_version(from.ir_version());
    }
    if (from.has_producer_version()) {
      set_producer_version(from.producer_version());
    }
    if (from.has_producer_tag()) {
      set_has_producer_tag();
      producer_tag_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.producer_tag_);
    }
    if (from.has_model_version()) {
      set_model_version(from.model_version());
    }
    if (from.has_model_author()) {
      set_has_model_author();
      model_author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_author_);
    }
    if (from.has_model_license()) {
      set_has_model_license();
      model_license_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.model_license_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_domain()) {
      set_has_domain();
      domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_doc_string()) {
      set_has_doc_string();
      doc_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_string_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::UnknownFieldSet::MergeToInternalMetdata(
      from.unknown_fields(), &_internal_metadata_);
  }
}

void LibraryProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ONNXIR.LibraryProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LibraryProto::CopyFrom(const LibraryProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ONNXIR.LibraryProto)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LibraryProto::IsInitialized() const {

  return true;
}

void LibraryProto::Swap(LibraryProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LibraryProto::InternalSwap(LibraryProto* other) {
  std::swap(ir_version_, other->ir_version_);
  std::swap(producer_version_, other->producer_version_);
  producer_tag_.Swap(&other->producer_tag_);
  std::swap(model_version_, other->model_version_);
  model_author_.Swap(&other->model_author_);
  model_license_.Swap(&other->model_license_);
  name_.Swap(&other->name_);
  domain_.Swap(&other->domain_);
  doc_string_.Swap(&other->doc_string_);
  operator__.UnsafeArenaSwap(&other->operator__);
  function_.UnsafeArenaSwap(&other->function_);
  imported_libraries_.UnsafeArenaSwap(&other->imported_libraries_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LibraryProto::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LibraryProto_descriptor_;
  metadata.reflection = LibraryProto_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LibraryProto

// optional int64 ir_version = 1;
bool LibraryProto::has_ir_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LibraryProto::set_has_ir_version() {
  _has_bits_[0] |= 0x00000001u;
}
void LibraryProto::clear_has_ir_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void LibraryProto::clear_ir_version() {
  ir_version_ = GOOGLE_LONGLONG(0);
  clear_has_ir_version();
}
::google::protobuf::int64 LibraryProto::ir_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.ir_version)
  return ir_version_;
}
void LibraryProto::set_ir_version(::google::protobuf::int64 value) {
  set_has_ir_version();
  ir_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.ir_version)
}

// optional int64 producer_version = 2;
bool LibraryProto::has_producer_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LibraryProto::set_has_producer_version() {
  _has_bits_[0] |= 0x00000002u;
}
void LibraryProto::clear_has_producer_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void LibraryProto::clear_producer_version() {
  producer_version_ = GOOGLE_LONGLONG(0);
  clear_has_producer_version();
}
::google::protobuf::int64 LibraryProto::producer_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.producer_version)
  return producer_version_;
}
void LibraryProto::set_producer_version(::google::protobuf::int64 value) {
  set_has_producer_version();
  producer_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.producer_version)
}

// optional string producer_tag = 3;
bool LibraryProto::has_producer_tag() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LibraryProto::set_has_producer_tag() {
  _has_bits_[0] |= 0x00000004u;
}
void LibraryProto::clear_has_producer_tag() {
  _has_bits_[0] &= ~0x00000004u;
}
void LibraryProto::clear_producer_tag() {
  producer_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_producer_tag();
}
const ::std::string& LibraryProto::producer_tag() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.producer_tag)
  return producer_tag_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_producer_tag(const ::std::string& value) {
  set_has_producer_tag();
  producer_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.producer_tag)
}
void LibraryProto::set_producer_tag(const char* value) {
  set_has_producer_tag();
  producer_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.producer_tag)
}
void LibraryProto::set_producer_tag(const char* value, size_t size) {
  set_has_producer_tag();
  producer_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.producer_tag)
}
::std::string* LibraryProto::mutable_producer_tag() {
  set_has_producer_tag();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.producer_tag)
  return producer_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LibraryProto::release_producer_tag() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.producer_tag)
  clear_has_producer_tag();
  return producer_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_allocated_producer_tag(::std::string* producer_tag) {
  if (producer_tag != NULL) {
    set_has_producer_tag();
  } else {
    clear_has_producer_tag();
  }
  producer_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), producer_tag);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.producer_tag)
}

// optional int64 model_version = 4;
bool LibraryProto::has_model_version() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void LibraryProto::set_has_model_version() {
  _has_bits_[0] |= 0x00000008u;
}
void LibraryProto::clear_has_model_version() {
  _has_bits_[0] &= ~0x00000008u;
}
void LibraryProto::clear_model_version() {
  model_version_ = GOOGLE_LONGLONG(0);
  clear_has_model_version();
}
::google::protobuf::int64 LibraryProto::model_version() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.model_version)
  return model_version_;
}
void LibraryProto::set_model_version(::google::protobuf::int64 value) {
  set_has_model_version();
  model_version_ = value;
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.model_version)
}

// optional string model_author = 5;
bool LibraryProto::has_model_author() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void LibraryProto::set_has_model_author() {
  _has_bits_[0] |= 0x00000010u;
}
void LibraryProto::clear_has_model_author() {
  _has_bits_[0] &= ~0x00000010u;
}
void LibraryProto::clear_model_author() {
  model_author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_author();
}
const ::std::string& LibraryProto::model_author() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.model_author)
  return model_author_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_model_author(const ::std::string& value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.model_author)
}
void LibraryProto::set_model_author(const char* value) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.model_author)
}
void LibraryProto::set_model_author(const char* value, size_t size) {
  set_has_model_author();
  model_author_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.model_author)
}
::std::string* LibraryProto::mutable_model_author() {
  set_has_model_author();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.model_author)
  return model_author_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LibraryProto::release_model_author() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.model_author)
  clear_has_model_author();
  return model_author_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_allocated_model_author(::std::string* model_author) {
  if (model_author != NULL) {
    set_has_model_author();
  } else {
    clear_has_model_author();
  }
  model_author_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_author);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.model_author)
}

// optional string model_license = 6;
bool LibraryProto::has_model_license() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void LibraryProto::set_has_model_license() {
  _has_bits_[0] |= 0x00000020u;
}
void LibraryProto::clear_has_model_license() {
  _has_bits_[0] &= ~0x00000020u;
}
void LibraryProto::clear_model_license() {
  model_license_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_model_license();
}
const ::std::string& LibraryProto::model_license() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.model_license)
  return model_license_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_model_license(const ::std::string& value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.model_license)
}
void LibraryProto::set_model_license(const char* value) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.model_license)
}
void LibraryProto::set_model_license(const char* value, size_t size) {
  set_has_model_license();
  model_license_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.model_license)
}
::std::string* LibraryProto::mutable_model_license() {
  set_has_model_license();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.model_license)
  return model_license_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LibraryProto::release_model_license() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.model_license)
  clear_has_model_license();
  return model_license_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_allocated_model_license(::std::string* model_license) {
  if (model_license != NULL) {
    set_has_model_license();
  } else {
    clear_has_model_license();
  }
  model_license_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), model_license);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.model_license)
}

// optional string name = 7;
bool LibraryProto::has_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void LibraryProto::set_has_name() {
  _has_bits_[0] |= 0x00000040u;
}
void LibraryProto::clear_has_name() {
  _has_bits_[0] &= ~0x00000040u;
}
void LibraryProto::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& LibraryProto::name() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.name)
}
void LibraryProto::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.name)
}
void LibraryProto::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.name)
}
::std::string* LibraryProto::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LibraryProto::release_name() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.name)
}

// optional string domain = 8;
bool LibraryProto::has_domain() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void LibraryProto::set_has_domain() {
  _has_bits_[0] |= 0x00000080u;
}
void LibraryProto::clear_has_domain() {
  _has_bits_[0] &= ~0x00000080u;
}
void LibraryProto::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
const ::std::string& LibraryProto::domain() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.domain)
  return domain_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.domain)
}
void LibraryProto::set_domain(const char* value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.domain)
}
void LibraryProto::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.domain)
}
::std::string* LibraryProto::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LibraryProto::release_domain() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.domain)
}

// optional string doc_string = 9;
bool LibraryProto::has_doc_string() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void LibraryProto::set_has_doc_string() {
  _has_bits_[0] |= 0x00000100u;
}
void LibraryProto::clear_has_doc_string() {
  _has_bits_[0] &= ~0x00000100u;
}
void LibraryProto::clear_doc_string() {
  doc_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_doc_string();
}
const ::std::string& LibraryProto::doc_string() const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.doc_string)
  return doc_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_doc_string(const ::std::string& value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.doc_string)
}
void LibraryProto::set_doc_string(const char* value) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.doc_string)
}
void LibraryProto::set_doc_string(const char* value, size_t size) {
  set_has_doc_string();
  doc_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.doc_string)
}
::std::string* LibraryProto::mutable_doc_string() {
  set_has_doc_string();
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.doc_string)
  return doc_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LibraryProto::release_doc_string() {
  // @@protoc_insertion_point(field_release:ONNXIR.LibraryProto.doc_string)
  clear_has_doc_string();
  return doc_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LibraryProto::set_allocated_doc_string(::std::string* doc_string) {
  if (doc_string != NULL) {
    set_has_doc_string();
  } else {
    clear_has_doc_string();
  }
  doc_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_string);
  // @@protoc_insertion_point(field_set_allocated:ONNXIR.LibraryProto.doc_string)
}

// repeated .ONNXIR.OperatorDeclProto operator = 10;
int LibraryProto::operator__size() const {
  return operator__.size();
}
void LibraryProto::clear_operator_() {
  operator__.Clear();
}
const ::ONNXIR::OperatorDeclProto& LibraryProto::operator_(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.operator)
  return operator__.Get(index);
}
::ONNXIR::OperatorDeclProto* LibraryProto::mutable_operator_(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.operator)
  return operator__.Mutable(index);
}
::ONNXIR::OperatorDeclProto* LibraryProto::add_operator_() {
  // @@protoc_insertion_point(field_add:ONNXIR.LibraryProto.operator)
  return operator__.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >*
LibraryProto::mutable_operator_() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.LibraryProto.operator)
  return &operator__;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::OperatorDeclProto >&
LibraryProto::operator_() const {
  // @@protoc_insertion_point(field_list:ONNXIR.LibraryProto.operator)
  return operator__;
}

// repeated .ONNXIR.FunctionDefProto function = 11;
int LibraryProto::function_size() const {
  return function_.size();
}
void LibraryProto::clear_function() {
  function_.Clear();
}
const ::ONNXIR::FunctionDefProto& LibraryProto::function(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.function)
  return function_.Get(index);
}
::ONNXIR::FunctionDefProto* LibraryProto::mutable_function(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.function)
  return function_.Mutable(index);
}
::ONNXIR::FunctionDefProto* LibraryProto::add_function() {
  // @@protoc_insertion_point(field_add:ONNXIR.LibraryProto.function)
  return function_.Add();
}
::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >*
LibraryProto::mutable_function() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.LibraryProto.function)
  return &function_;
}
const ::google::protobuf::RepeatedPtrField< ::ONNXIR::FunctionDefProto >&
LibraryProto::function() const {
  // @@protoc_insertion_point(field_list:ONNXIR.LibraryProto.function)
  return function_;
}

// repeated string imported_libraries = 12;
int LibraryProto::imported_libraries_size() const {
  return imported_libraries_.size();
}
void LibraryProto::clear_imported_libraries() {
  imported_libraries_.Clear();
}
const ::std::string& LibraryProto::imported_libraries(int index) const {
  // @@protoc_insertion_point(field_get:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_.Get(index);
}
::std::string* LibraryProto::mutable_imported_libraries(int index) {
  // @@protoc_insertion_point(field_mutable:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_.Mutable(index);
}
void LibraryProto::set_imported_libraries(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:ONNXIR.LibraryProto.imported_libraries)
  imported_libraries_.Mutable(index)->assign(value);
}
void LibraryProto::set_imported_libraries(int index, const char* value) {
  imported_libraries_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:ONNXIR.LibraryProto.imported_libraries)
}
void LibraryProto::set_imported_libraries(int index, const char* value, size_t size) {
  imported_libraries_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ONNXIR.LibraryProto.imported_libraries)
}
::std::string* LibraryProto::add_imported_libraries() {
  // @@protoc_insertion_point(field_add_mutable:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_.Add();
}
void LibraryProto::add_imported_libraries(const ::std::string& value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:ONNXIR.LibraryProto.imported_libraries)
}
void LibraryProto::add_imported_libraries(const char* value) {
  imported_libraries_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:ONNXIR.LibraryProto.imported_libraries)
}
void LibraryProto::add_imported_libraries(const char* value, size_t size) {
  imported_libraries_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:ONNXIR.LibraryProto.imported_libraries)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
LibraryProto::imported_libraries() const {
  // @@protoc_insertion_point(field_list:ONNXIR.LibraryProto.imported_libraries)
  return imported_libraries_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
LibraryProto::mutable_imported_libraries() {
  // @@protoc_insertion_point(field_mutable_list:ONNXIR.LibraryProto.imported_libraries)
  return &imported_libraries_;
}

inline const LibraryProto* LibraryProto::internal_default_instance() {
  return &LibraryProto_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ONNXIR

// @@protoc_insertion_point(global_scope)
